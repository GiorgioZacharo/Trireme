; ModuleID = 'build/seq/main.preprocessed.ll'
source_filename = "src//main.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%class.MIT_HRTF = type { %class.HRTF }
%class.HRTF = type { i32 (...)**, i32, i32 }
%class.CAmbisonicSource = type { %class.CAmbisonicBase.base, %"class.std::vector.0", %"class.std::vector.0", %struct.PolarPoint, float }
%class.CAmbisonicBase.base = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8 }>
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" }
%"struct.std::_Vector_base<float, std::allocator<float> >::_Vector_impl" = type { float*, float*, float* }
%struct.PolarPoint = type { float, float, float }
%class.CBFormat = type { %class.CAmbisonicBase.base, i32, i32, %"class.std::vector.0", %"class.std::unique_ptr" }
%"class.std::unique_ptr" = type { %"class.std::tuple" }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Head_base.6" }
%"struct.std::_Head_base.6" = type { float** }
%class.CAmbisonicEncoder = type { %class.CAmbisonicSource }
%class.CAmbisonicEncoderDist = type { %class.CAmbisonicEncoder, i32, float, i32, i32, float*, i32, i32, i32, float, float, float }
%class.CAmbisonicProcessor = type { %class.CAmbisonicBase.base, %class.Orientation, float*, %struct.kiss_fftr_state*, %struct.kiss_fftr_state*, float*, float**, i32, i32, i32, i32, i32, float, %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.Orientation = type { float, float, float, float, float, float }
%struct.kiss_fftr_state = type opaque
%struct.kiss_fft_cpx = type { float, float }
%class.CAmbisonicSpeaker = type { %class.CAmbisonicSource }
%class.CAmbisonicDecoder = type { %class.CAmbisonicBase.base, i32, i32, %class.CAmbisonicSpeaker* }
%class.CAmbisonicZoomer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", %"class.std::unique_ptr.12", float, float, float, float }
%"class.std::unique_ptr.12" = type { %"class.std::tuple.13" }
%"class.std::tuple.13" = type { %"struct.std::_Tuple_impl.14" }
%"struct.std::_Tuple_impl.14" = type { %"struct.std::_Head_base.19" }
%"struct.std::_Head_base.19" = type { float* }
%class.CAmbisonicBinauralizer = type { %class.CAmbisonicBase.base, %class.CAmbisonicDecoder, i32, i32, i32, i32, float, i32, %"class.std::unique_ptr.20", %"class.std::unique_ptr.20", [2 x %"class.std::vector.26"], %"class.std::unique_ptr.31", %"class.std::vector.0", %"class.std::vector.0", %"class.std::vector.0", [2 x %"class.std::vector.0"] }
%"class.std::unique_ptr.20" = type { %"class.std::tuple.21" }
%"class.std::tuple.21" = type { %"struct.std::_Tuple_impl.22" }
%"struct.std::_Tuple_impl.22" = type { %"struct.std::_Tuple_impl.23", %"struct.std::_Head_base.25" }
%"struct.std::_Tuple_impl.23" = type { %"struct.std::_Head_base.24" }
%"struct.std::_Head_base.24" = type { void (i8*)* }
%"struct.std::_Head_base.25" = type { %struct.kiss_fftr_state* }
%"class.std::vector.26" = type { %"struct.std::_Vector_base.27" }
%"struct.std::_Vector_base.27" = type { %"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> >, std::allocator<std::unique_ptr<kiss_fft_cpx [], std::default_delete<kiss_fft_cpx []> > > >::_Vector_impl" = type { %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"* }
%"class.std::unique_ptr.31" = type { %"class.std::tuple.32" }
%"class.std::tuple.32" = type { %"struct.std::_Tuple_impl.33" }
%"struct.std::_Tuple_impl.33" = type { %"struct.std::_Head_base.38" }
%"struct.std::_Head_base.38" = type { %struct.kiss_fft_cpx* }
%"class.ILLIXR_AUDIO::Sound" = type { %"class.std::basic_fstream"*, [1024 x float], %class.CBFormat*, %class.CAmbisonicEncoderDist*, %struct.PolarPoint, float }
%"class.std::basic_fstream" = type { %"class.std::basic_iostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::basic_filebuf" = type { %"class.std::basic_streambuf", %union.pthread_mutex_t, %"class.std::__basic_file", i32, %struct.__mbstate_t, %struct.__mbstate_t, %struct.__mbstate_t, i8*, i64, i8, i8, i8, i8, i8*, i8*, i8, %"class.std::codecvt"*, i8*, i64, i8*, i8* }
%union.pthread_mutex_t = type { %"struct.(anonymous union)::__pthread_mutex_s" }
%"struct.(anonymous union)::__pthread_mutex_s" = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__basic_file" = type <{ %struct._IO_FILE*, i8, [7 x i8] }>
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.__mbstate_t = type { i32, %union.anon.42 }
%union.anon.42 = type { i32 }
%"class.std::codecvt" = type { %"class.std::__codecvt_abstract_base.base", %struct.__locale_struct* }
%"class.std::__codecvt_abstract_base.base" = type { %"class.std::locale::facet.base" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.ILLIXR_AUDIO::ABAudio" = type { i32, %"class.std::vector.43"*, %"class.std::basic_ofstream"*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer*, %class.CAmbisonicProcessor*, %class.CAmbisonicZoomer* }
%"class.std::vector.43" = type { %"struct.std::_Vector_base.44" }
%"struct.std::_Vector_base.44" = type { %"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" }
%"struct.std::_Vector_base<ILLIXR_AUDIO::Sound *, std::allocator<ILLIXR_AUDIO::Sound *> >::_Vector_impl" = type { %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"** }
%"class.std::basic_ofstream" = type { %"class.std::basic_ostream.base", %"class.std::basic_filebuf", %"class.std::basic_ios" }
%class.CAmbisonicBase = type <{ i32 (...)**, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::vector.7" = type { %"struct.std::_Vector_base.8" }
%"struct.std::_Vector_base.8" = type { %"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::unique_ptr<float [], std::default_delete<float []> >, std::allocator<std::unique_ptr<float [], std::default_delete<float []> > > >::_Vector_impl" = type { %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::allocator.39" = type { i8 }
%"struct.ILLIXR_AUDIO::WAVHeader_t" = type { i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, i32 }
%struct.out.rotatorSet_fxp = type <{ i64 }>
%struct.out.wrapperRotatorSet_fxp = type <{ i64 }>
%struct.out.psychoFilter_fxp = type <{ i64, i64, i64, i64, i64, i64, i64 }>
%struct.out.wrapperPsychoFilter_fxp = type <{ i64, i64, i64, i64, i64, i64, i64 }>
%struct.out.rotateOrder1_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder1_fxp = type <{ i64 }>
%struct.out.rotateOrder2_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder2_fxp = type <{ i64 }>
%struct.out.rotateOrder3_fxp = type <{ i64 }>
%struct.out.wrapperRotateOrder3_fxp = type <{ i64 }>
%struct.out.zoomSet_fxp = type <{ i64 }>
%struct.out.wrapperZoomSet_fxp = type <{ i64 }>
%struct.out.zoomProcess_fxp = type <{ i64, i64 }>
%struct.out.wrapperZoomProcess_fxp = type <{ i64, i64 }>
%struct.out.setAndFFT_left_fxp = type <{ i64 }>
%struct.out.wrapperSetAndFFT_left_fxp = type <{ i64 }>
%struct.out.setAndFFT_right_fxp = type <{ i64 }>
%struct.out.wrapperSetAndFFT_right_fxp = type <{ i64 }>
%struct.out.FIR_left_fxp = type <{ i64 }>
%struct.out.wrapperFIR_left_fxp = type <{ i64 }>
%struct.out.FIR_right_fxp = type <{ i64 }>
%struct.out.wrapperFIR_right_fxp = type <{ i64 }>
%struct.out.IFFT_left_fxp = type <{ i64 }>
%struct.out.wrapperIFFT_left_fxp = type <{ i64 }>
%struct.out.IFFT_right_fxp = type <{ i64 }>
%struct.out.wrapperIFFT_right_fxp = type <{ i64 }>
%struct.out.overlap_left_fxp = type <{ i64 }>
%struct.out.wrapperOverlap_left_fxp = type <{ i64 }>
%struct.out.overlap_right_fxp = type <{ i64 }>
%struct.out.wrapperOverlap_right_fxp = type <{ i64 }>
%emptyStruct = type <{}>

$_ZN11OrientationC2Efff = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm = comdat any

$__clang_call_terminate = comdat any

$_ZN8CBFormatD2Ev = comdat any

$_ZN8MIT_HRTFD0Ev = comdat any

$_ZN14CAmbisonicBaseD2Ev = comdat any

$_ZN14CAmbisonicBaseD0Ev = comdat any

$_ZN16CAmbisonicSourceD2Ev = comdat any

$_ZN16CAmbisonicSourceD0Ev = comdat any

$_ZN8CBFormatD0Ev = comdat any

$_ZN16CAmbisonicZoomerD2Ev = comdat any

$_ZN16CAmbisonicZoomerD0Ev = comdat any

$_ZN22CAmbisonicBinauralizerD2Ev = comdat any

$_ZN22CAmbisonicBinauralizerD0Ev = comdat any

$_ZN4HRTFD2Ev = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev = comdat any

$_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag = comdat any

$_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf = comdat any

$_ZNSt6vectorIfSaIfEE17_M_default_appendEm = comdat any

$_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_emplace_back_auxIJPfEEEvDpOT_ = comdat any

$_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_ = comdat any

$_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZTS4HRTF = comdat any

$_ZTI4HRTF = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZTV8MIT_HRTF = unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8MIT_HRTF to i8*), i8* bitcast (void (%class.HRTF*)* @_ZN4HRTFD2Ev to i8*), i8* bitcast (void (%class.MIT_HRTF*)* @_ZN8MIT_HRTFD0Ev to i8*), i8* bitcast (i1 (%class.MIT_HRTF*, float, float, float**)* @_ZN8MIT_HRTF3getEffPPf to i8*)] }, align 8
@_ZTV14CAmbisonicBase = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBase*)* @_ZN14CAmbisonicBaseD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV16CAmbisonicSource = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSource*, i32, i1, i32)* @_ZN16CAmbisonicSource9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV8CBFormat = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI8CBFormat to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD2Ev to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormatD0Ev to i8*), i8* bitcast (i1 (%class.CBFormat*, i32, i1, i32)* @_ZN8CBFormat9ConfigureEjbj to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat5ResetEv to i8*), i8* bitcast (void (%class.CBFormat*)* @_ZN8CBFormat7RefreshEv to i8*)] }, align 8
@_ZTV17CAmbisonicEncoder = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoder*, i32, i1, i32)* @_ZN17CAmbisonicEncoder9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoder7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV21CAmbisonicEncoderDist = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI21CAmbisonicEncoderDist to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)* @_ZN21CAmbisonicEncoderDist9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDist7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV19CAmbisonicProcessor = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI19CAmbisonicProcessor to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessor7RefreshEv to i8*)] }, align 8
@_ZL14first_order_3D = internal unnamed_addr constant [2 x [101 x i16]] [[101 x i16] [i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -10, i16 -13, i16 -17, i16 -21, i16 -25, i16 -30, i16 -35, i16 -41, i16 -47, i16 -54, i16 -60, i16 -67, i16 -75, i16 -82, i16 -90, i16 -97, i16 -105, i16 -113, i16 -120, i16 -127, i16 -134, i16 -141, i16 -147, i16 -153, i16 -158, i16 -163, i16 -167, i16 -170, i16 -173, i16 -175, i16 -176, i16 23040, i16 -176, i16 -175, i16 -173, i16 -170, i16 -167, i16 -163, i16 -158, i16 -153, i16 -147, i16 -141, i16 -134, i16 -127, i16 -120, i16 -113, i16 -105, i16 -97, i16 -90, i16 -82, i16 -75, i16 -67, i16 -60, i16 -54, i16 -47, i16 -41, i16 -35, i16 -30, i16 -25, i16 -21, i16 -17, i16 -13, i16 -10, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3, i16 3], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 5, i16 7, i16 9, i16 11, i16 14, i16 16, i16 19, i16 23, i16 26, i16 30, i16 34, i16 38, i16 42, i16 46, i16 51, i16 55, i16 60, i16 64, i16 68, i16 73, i16 77, i16 80, i16 84, i16 87, i16 90, i16 93, i16 95, i16 97, i16 99, i16 100, i16 101, i16 13438, i16 101, i16 100, i16 99, i16 97, i16 95, i16 93, i16 90, i16 87, i16 84, i16 80, i16 77, i16 73, i16 68, i16 64, i16 60, i16 55, i16 51, i16 46, i16 42, i16 38, i16 34, i16 30, i16 26, i16 23, i16 19, i16 16, i16 14, i16 11, i16 9, i16 7, i16 5, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -3, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_3D = internal unnamed_addr constant [3 x [101 x i16]] [[101 x i16] [i16 -5, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -5, i16 -3, i16 -1, i16 2, i16 6, i16 10, i16 15, i16 21, i16 26, i16 32, i16 38, i16 44, i16 49, i16 53, i16 55, i16 56, i16 54, i16 50, i16 42, i16 32, i16 19, i16 2, i16 -19, i16 -43, i16 -70, i16 -100, i16 -133, i16 -167, i16 -203, i16 -241, i16 -278, i16 -315, i16 -350, i16 -384, i16 -414, i16 -442, i16 -465, i16 -484, i16 -497, i16 -506, i16 25438, i16 -506, i16 -497, i16 -484, i16 -465, i16 -442, i16 -414, i16 -384, i16 -350, i16 -315, i16 -278, i16 -241, i16 -203, i16 -167, i16 -133, i16 -100, i16 -70, i16 -43, i16 -19, i16 2, i16 19, i16 32, i16 42, i16 50, i16 54, i16 56, i16 55, i16 53, i16 49, i16 44, i16 38, i16 32, i16 26, i16 21, i16 15, i16 10, i16 6, i16 2, i16 -1, i16 -3, i16 -5, i16 -6, i16 -7, i16 -7, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -5], [101 x i16] [i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2, i16 -1, i16 0, i16 2, i16 4, i16 6, i16 8, i16 10, i16 12, i16 15, i16 17, i16 19, i16 20, i16 21, i16 21, i16 21, i16 19, i16 16, i16 12, i16 7, i16 0, i16 -8, i16 -17, i16 -27, i16 -39, i16 -52, i16 -65, i16 -79, i16 -94, i16 -108, i16 -123, i16 -136, i16 -149, i16 -161, i16 -172, i16 -181, i16 -188, i16 -194, i16 -197, i16 19884, i16 -197, i16 -194, i16 -188, i16 -181, i16 -172, i16 -161, i16 -149, i16 -136, i16 -123, i16 -108, i16 -94, i16 -79, i16 -65, i16 -52, i16 -39, i16 -27, i16 -17, i16 -8, i16 0, i16 7, i16 12, i16 16, i16 19, i16 21, i16 21, i16 21, i16 20, i16 19, i16 17, i16 15, i16 12, i16 10, i16 8, i16 6, i16 4, i16 2, i16 0, i16 -1, i16 -2, i16 -2, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -3, i16 -2, i16 -2], [101 x i16] [i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -14, i16 -17, i16 -21, i16 -25, i16 -28, i16 -31, i16 -34, i16 -35, i16 -36, i16 -35, i16 -32, i16 -27, i16 -21, i16 -12, i16 -2, i16 11, i16 26, i16 43, i16 62, i16 82, i16 104, i16 127, i16 150, i16 173, i16 196, i16 219, i16 240, i16 259, i16 276, i16 290, i16 302, i16 311, i16 316, i16 10659, i16 316, i16 311, i16 302, i16 290, i16 276, i16 259, i16 240, i16 219, i16 196, i16 173, i16 150, i16 127, i16 104, i16 82, i16 62, i16 43, i16 26, i16 11, i16 -2, i16 -12, i16 -21, i16 -27, i16 -32, i16 -35, i16 -36, i16 -35, i16 -34, i16 -31, i16 -28, i16 -25, i16 -21, i16 -17, i16 -14, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2]], align 16
@_ZL14first_order_2D = internal unnamed_addr constant [2 x [101 x i16]] [[101 x i16] [i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 0, i16 0, i16 -1, i16 -2, i16 -3, i16 -4, i16 -5, i16 -7, i16 -9, i16 -10, i16 -13, i16 -15, i16 -18, i16 -21, i16 -24, i16 -27, i16 -30, i16 -34, i16 -37, i16 -41, i16 -45, i16 -49, i16 -52, i16 -56, i16 -60, i16 -63, i16 -67, i16 -70, i16 -73, i16 -76, i16 -79, i16 -81, i16 -83, i16 -85, i16 -86, i16 -87, i16 -88, i16 19968, i16 -88, i16 -87, i16 -86, i16 -85, i16 -83, i16 -81, i16 -79, i16 -76, i16 -73, i16 -70, i16 -67, i16 -63, i16 -60, i16 -56, i16 -52, i16 -49, i16 -45, i16 -41, i16 -37, i16 -34, i16 -30, i16 -27, i16 -24, i16 -21, i16 -18, i16 -15, i16 -13, i16 -10, i16 -9, i16 -7, i16 -5, i16 -4, i16 -3, i16 -2, i16 -1, i16 0, i16 0, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1, i16 1], [101 x i16] [i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 4, i16 5, i16 7, i16 8, i16 10, i16 12, i16 15, i16 17, i16 20, i16 23, i16 26, i16 29, i16 32, i16 35, i16 39, i16 42, i16 46, i16 49, i16 52, i16 55, i16 58, i16 61, i16 64, i16 67, i16 69, i16 71, i16 73, i16 74, i16 76, i16 76, i16 77, i16 14259, i16 77, i16 76, i16 76, i16 74, i16 73, i16 71, i16 69, i16 67, i16 64, i16 61, i16 58, i16 55, i16 52, i16 49, i16 46, i16 42, i16 39, i16 35, i16 32, i16 29, i16 26, i16 23, i16 20, i16 17, i16 15, i16 12, i16 10, i16 8, i16 7, i16 5, i16 4, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2]], align 16
@_ZL15second_order_2D = internal unnamed_addr constant [3 x [101 x i16]] [[101 x i16] [i16 -3, i16 -3, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -2, i16 -1, i16 1, i16 3, i16 5, i16 7, i16 10, i16 13, i16 16, i16 19, i16 22, i16 24, i16 26, i16 27, i16 28, i16 27, i16 25, i16 21, i16 16, i16 9, i16 1, i16 -10, i16 -22, i16 -35, i16 -50, i16 -67, i16 -84, i16 -102, i16 -121, i16 -139, i16 -158, i16 -176, i16 -192, i16 -208, i16 -222, i16 -233, i16 -243, i16 -249, i16 -254, i16 20905, i16 -254, i16 -249, i16 -243, i16 -233, i16 -222, i16 -208, i16 -192, i16 -176, i16 -158, i16 -139, i16 -121, i16 -102, i16 -84, i16 -67, i16 -50, i16 -35, i16 -22, i16 -10, i16 1, i16 9, i16 16, i16 21, i16 25, i16 27, i16 28, i16 27, i16 26, i16 24, i16 22, i16 19, i16 16, i16 13, i16 10, i16 7, i16 5, i16 3, i16 1, i16 -1, i16 -2, i16 -3, i16 -3, i16 -4, i16 -4, i16 -4, i16 -4, i16 -4, i16 -3, i16 -3, i16 -3, i16 -3], [101 x i16] [i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 0, i16 1, i16 2, i16 3, i16 4, i16 5, i16 6, i16 8, i16 9, i16 10, i16 10, i16 11, i16 11, i16 11, i16 10, i16 8, i16 6, i16 3, i16 0, i16 -4, i16 -9, i16 -15, i16 -21, i16 -28, i16 -35, i16 -42, i16 -50, i16 -58, i16 -65, i16 -72, i16 -79, i16 -86, i16 -91, i16 -96, i16 -100, i16 -103, i16 -104, i16 18220, i16 -104, i16 -103, i16 -100, i16 -96, i16 -91, i16 -86, i16 -79, i16 -72, i16 -65, i16 -58, i16 -50, i16 -42, i16 -35, i16 -28, i16 -21, i16 -15, i16 -9, i16 -4, i16 0, i16 3, i16 6, i16 8, i16 10, i16 11, i16 11, i16 11, i16 10, i16 10, i16 9, i16 8, i16 6, i16 5, i16 4, i16 3, i16 2, i16 1, i16 0, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1], [101 x i16] [i16 2, i16 2, i16 3, i16 3, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 1, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -17, i16 -20, i16 -24, i16 -27, i16 -30, i16 -33, i16 -34, i16 -34, i16 -33, i16 -31, i16 -26, i16 -20, i16 -12, i16 -2, i16 11, i16 25, i16 41, i16 59, i16 79, i16 100, i16 122, i16 144, i16 166, i16 189, i16 210, i16 230, i16 249, i16 265, i16 279, i16 290, i16 298, i16 303, i16 10885, i16 303, i16 298, i16 290, i16 279, i16 265, i16 249, i16 230, i16 210, i16 189, i16 166, i16 144, i16 122, i16 100, i16 79, i16 59, i16 41, i16 25, i16 11, i16 -2, i16 -12, i16 -20, i16 -26, i16 -31, i16 -33, i16 -34, i16 -34, i16 -33, i16 -30, i16 -27, i16 -24, i16 -20, i16 -17, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 1, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 3, i16 3, i16 2, i16 2]], align 16
@_ZL14third_order_2D = internal unnamed_addr constant [4 x [101 x i16]] [[101 x i16] [i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 4, i16 3, i16 2, i16 0, i16 -2, i16 -4, i16 -7, i16 -10, i16 -13, i16 -16, i16 -18, i16 -20, i16 -20, i16 -18, i16 -15, i16 -10, i16 -3, i16 6, i16 16, i16 26, i16 37, i16 47, i16 56, i16 62, i16 64, i16 63, i16 57, i16 45, i16 27, i16 3, i16 -26, i16 -60, i16 -98, i16 -140, i16 -183, i16 -226, i16 -268, i16 -307, i16 -342, i16 -370, i16 -391, i16 -404, i16 21262, i16 -404, i16 -391, i16 -370, i16 -342, i16 -307, i16 -268, i16 -226, i16 -183, i16 -140, i16 -98, i16 -60, i16 -26, i16 3, i16 27, i16 45, i16 57, i16 63, i16 64, i16 62, i16 56, i16 47, i16 37, i16 26, i16 16, i16 6, i16 -3, i16 -10, i16 -15, i16 -18, i16 -20, i16 -20, i16 -18, i16 -16, i16 -13, i16 -10, i16 -7, i16 -4, i16 -2, i16 0, i16 2, i16 3, i16 4, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0], [101 x i16] [i16 0, i16 1, i16 1, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 0, i16 -1, i16 -3, i16 -5, i16 -7, i16 -9, i16 -11, i16 -13, i16 -14, i16 -14, i16 -13, i16 -10, i16 -7, i16 -2, i16 4, i16 10, i16 18, i16 25, i16 32, i16 38, i16 42, i16 44, i16 43, i16 39, i16 30, i16 18, i16 2, i16 -18, i16 -41, i16 -68, i16 -96, i16 -126, i16 -155, i16 -184, i16 -211, i16 -234, i16 -254, i16 -268, i16 -277, i16 19741, i16 -277, i16 -268, i16 -254, i16 -234, i16 -211, i16 -184, i16 -155, i16 -126, i16 -96, i16 -68, i16 -41, i16 -18, i16 2, i16 18, i16 30, i16 39, i16 43, i16 44, i16 42, i16 38, i16 32, i16 25, i16 18, i16 10, i16 4, i16 -2, i16 -7, i16 -10, i16 -13, i16 -14, i16 -14, i16 -13, i16 -11, i16 -9, i16 -7, i16 -5, i16 -3, i16 -1, i16 0, i16 1, i16 2, i16 2, i16 2, i16 2, i16 2, i16 2, i16 1, i16 1, i16 1, i16 0], [101 x i16] [i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 0, i16 0, i16 1, i16 2, i16 2, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 1, i16 0, i16 -2, i16 -4, i16 -6, i16 -8, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -6, i16 -1, i16 5, i16 12, i16 20, i16 29, i16 38, i16 47, i16 56, i16 64, i16 71, i16 77, i16 82, i16 84, i16 15409, i16 84, i16 82, i16 77, i16 71, i16 64, i16 56, i16 47, i16 38, i16 29, i16 20, i16 12, i16 5, i16 -1, i16 -6, i16 -10, i16 -12, i16 -14, i16 -14, i16 -14, i16 -12, i16 -10, i16 -8, i16 -6, i16 -4, i16 -2, i16 0, i16 1, i16 3, i16 3, i16 4, i16 4, i16 3, i16 3, i16 2, i16 2, i16 1, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 20, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -97, i16 -101, i16 -99, i16 -89, i16 -71, i16 -43, i16 -7, i16 39, i16 92, i16 151, i16 215, i16 282, i16 350, i16 415, i16 475, i16 528, i16 572, i16 605, i16 625, i16 8926, i16 625, i16 605, i16 572, i16 528, i16 475, i16 415, i16 350, i16 282, i16 215, i16 151, i16 92, i16 39, i16 -7, i16 -43, i16 -71, i16 -89, i16 -99, i16 -101, i16 -97, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 20, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2]], align 16
@_ZTV17CAmbisonicSpeaker = unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicSpeaker to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)* @_ZN17CAmbisonicSpeaker9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeaker7RefreshEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, <2 x float>, float)* @_ZN16CAmbisonicSource11SetPositionE10PolarPoint to i8*), i8* bitcast ({ <2 x float>, float } (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource11GetPositionEv to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetOrderWeightEjf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource17SetOrderWeightAllEf to i8*), i8* bitcast (void (%class.CAmbisonicSource*, i32, float)* @_ZN16CAmbisonicSource14SetCoefficientEjf to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetOrderWeightEj to i8*), i8* bitcast (float (%class.CAmbisonicSource*, i32)* @_ZN16CAmbisonicSource14GetCoefficientEj to i8*), i8* bitcast (void (%class.CAmbisonicSource*, float)* @_ZN16CAmbisonicSource7SetGainEf to i8*), i8* bitcast (float (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSource7GetGainEv to i8*)] }, align 8
@_ZTV17CAmbisonicDecoder = unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicDecoder to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoder7RefreshEv to i8*), i8* bitcast (float (%class.CAmbisonicDecoder*, i32, i32)* @_ZN17CAmbisonicDecoder14GetCoefficientEjj to i8*)] }, align 8
@_ZTV16CAmbisonicZoomer = unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicZoomer to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicZoomer*, i32, i1, i32)* @_ZN16CAmbisonicZoomer9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomer7RefreshEv to i8*)] }, align 8
@_ZTV22CAmbisonicBinauralizer = unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTI22CAmbisonicBinauralizer to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD2Ev to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerD0Ev to i8*), i8* bitcast (i1 (%class.CAmbisonicBase*, i32, i1, i32)* @_ZN14CAmbisonicBase9ConfigureEjbj to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer5ResetEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer7RefreshEv to i8*), i8* bitcast (i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)* @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv to i8*), i8* bitcast (void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv to i8*)] }, align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [25 x i8] c"Getting first order cube\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Getting second/third order dodecahedron\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"samples/lectureSample.wav\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"samples/radioMusicSample.wav\00", align 1
@_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame = internal unnamed_addr global i32 0, align 4
@_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame = internal unnamed_addr global i32 0, align 4
@_ZZ14rotatorSet_fxpE5frame = internal unnamed_addr global i32 0, align 4
@_ZZ11zoomSet_fxpE5frame = internal unnamed_addr global i32 0, align 4
@.str.6 = private unnamed_addr constant [8 x i8] c"Usage: \00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c" <number of size 1024 blocks to process> \00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"<optional: encode/decode>\0A\00", align 1
@.str.9 = private unnamed_addr constant [122 x i8] c"Note: If you want to hear the output sound, limit the process sample blocks so that the output is not longer than input!\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"output.wav\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global i8*
@_ZTS8MIT_HRTF = constant [10 x i8] c"8MIT_HRTF\00", align 1
@_ZTVN10__cxxabiv117__class_type_infoE = external global i8*
@_ZTS4HRTF = linkonce_odr constant [6 x i8] c"4HRTF\00", comdat, align 1
@_ZTI4HRTF = linkonce_odr constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZTS4HRTF, i32 0, i32 0) }, comdat, align 8
@_ZTI8MIT_HRTF = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8MIT_HRTF, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI4HRTF to i8*) }, align 8
@_ZTS14CAmbisonicBase = constant [17 x i8] c"14CAmbisonicBase\00", align 1
@_ZTI14CAmbisonicBase = constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZTS14CAmbisonicBase, i32 0, i32 0) }, align 8
@_ZTS16CAmbisonicSource = constant [19 x i8] c"16CAmbisonicSource\00", align 1
@_ZTI16CAmbisonicSource = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicSource, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS8CBFormat = constant [10 x i8] c"8CBFormat\00", align 1
@_ZTI8CBFormat = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZTS8CBFormat, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicEncoder = constant [20 x i8] c"17CAmbisonicEncoder\00", align 1
@_ZTI17CAmbisonicEncoder = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicEncoder, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS21CAmbisonicEncoderDist = constant [24 x i8] c"21CAmbisonicEncoderDist\00", align 1
@_ZTI21CAmbisonicEncoderDist = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTS21CAmbisonicEncoderDist, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI17CAmbisonicEncoder to i8*) }, align 8
@_ZTS19CAmbisonicProcessor = constant [22 x i8] c"19CAmbisonicProcessor\00", align 1
@_ZTI19CAmbisonicProcessor = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTS19CAmbisonicProcessor, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS17CAmbisonicSpeaker = constant [20 x i8] c"17CAmbisonicSpeaker\00", align 1
@_ZTI17CAmbisonicSpeaker = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicSpeaker, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTI16CAmbisonicSource to i8*) }, align 8
@_ZTS17CAmbisonicDecoder = constant [20 x i8] c"17CAmbisonicDecoder\00", align 1
@_ZTI17CAmbisonicDecoder = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZTS17CAmbisonicDecoder, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS16CAmbisonicZoomer = constant [19 x i8] c"16CAmbisonicZoomer\00", align 1
@_ZTI16CAmbisonicZoomer = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTS16CAmbisonicZoomer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZTS22CAmbisonicBinauralizer = constant [25 x i8] c"22CAmbisonicBinauralizer\00", align 1
@_ZTI22CAmbisonicBinauralizer = constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTS22CAmbisonicBinauralizer, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTI14CAmbisonicBase to i8*) }, align 8
@_ZL14third_order_3D = internal unnamed_addr constant <{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }> <{ [101 x i16] [i16 1, i16 3, i16 4, i16 5, i16 6, i16 8, i16 8, i16 8, i16 8, i16 7, i16 5, i16 1, i16 -3, i16 -8, i16 -15, i16 -21, i16 -28, i16 -34, i16 -38, i16 -41, i16 -41, i16 -38, i16 -31, i16 -20, i16 -5, i16 13, i16 33, i16 56, i16 78, i16 99, i16 117, i16 130, i16 136, i16 133, i16 120, i16 95, i16 57, i16 8, i16 -54, i16 -126, i16 -206, i16 -294, i16 -384, i16 -476, i16 -564, i16 -646, i16 -718, i16 -778, i16 -823, i16 -850, i16 26604, i16 -850, i16 -823, i16 -778, i16 -718, i16 -646, i16 -564, i16 -476, i16 -384, i16 -294, i16 -206, i16 -126, i16 -54, i16 8, i16 57, i16 95, i16 120, i16 133, i16 136, i16 130, i16 117, i16 99, i16 78, i16 56, i16 33, i16 13, i16 -5, i16 -20, i16 -31, i16 -38, i16 -41, i16 -41, i16 -38, i16 -34, i16 -28, i16 -21, i16 -15, i16 -8, i16 -3, i16 1, i16 5, i16 7, i16 8, i16 8, i16 8, i16 8, i16 6, i16 5, i16 4, i16 3, i16 1], [101 x i16] [i16 1, i16 2, i16 2, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 1, i16 -2, i16 -6, i16 -10, i16 -14, i16 -18, i16 -22, i16 -25, i16 -27, i16 -27, i16 -25, i16 -20, i16 -13, i16 -4, i16 8, i16 22, i16 36, i16 51, i16 65, i16 77, i16 85, i16 89, i16 87, i16 78, i16 62, i16 37, i16 5, i16 -35, i16 -82, i16 -135, i16 -192, i16 -252, i16 -311, i16 -369, i16 -423, i16 -470, i16 -509, i16 -538, i16 -556, i16 23082, i16 -556, i16 -538, i16 -509, i16 -470, i16 -423, i16 -369, i16 -311, i16 -252, i16 -192, i16 -135, i16 -82, i16 -35, i16 5, i16 37, i16 62, i16 78, i16 87, i16 89, i16 85, i16 77, i16 65, i16 51, i16 36, i16 22, i16 8, i16 -4, i16 -13, i16 -20, i16 -25, i16 -27, i16 -27, i16 -25, i16 -22, i16 -18, i16 -14, i16 -10, i16 -6, i16 -2, i16 1, i16 3, i16 4, i16 5, i16 5, i16 5, i16 5, i16 4, i16 3, i16 2, i16 2, i16 1], <{ [89 x i16], [12 x i16] }> <{ [89 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 0, i16 1, i16 1, i16 2, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 1, i16 0, i16 -2, i16 -5, i16 -8, i16 -11, i16 -14, i16 -17, i16 -20, i16 -23, i16 -25, i16 -27, i16 -29, i16 -30, i16 16773, i16 -30, i16 -29, i16 -27, i16 -25, i16 -23, i16 -20, i16 -17, i16 -14, i16 -11, i16 -8, i16 -5, i16 -2, i16 0, i16 1, i16 3, i16 4, i16 4, i16 4, i16 4, i16 4, i16 3, i16 2, i16 1, i16 1, i16 0, i16 -1, i16 -1, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -2, i16 -1, i16 -1, i16 -1, i16 -1, i16 -1], [12 x i16] zeroinitializer }>, [101 x i16] [i16 -2, i16 -3, i16 -4, i16 -5, i16 -6, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -4, i16 -2, i16 1, i16 5, i16 10, i16 15, i16 19, i16 24, i16 27, i16 29, i16 29, i16 27, i16 22, i16 14, i16 3, i16 -10, i16 -25, i16 -42, i16 -58, i16 -74, i16 -87, i16 -96, i16 -101, i16 -98, i16 -88, i16 -70, i16 -43, i16 -7, i16 38, i16 91, i16 150, i16 214, i16 280, i16 347, i16 412, i16 472, i16 525, i16 568, i16 601, i16 621, i16 8977, i16 621, i16 601, i16 568, i16 525, i16 472, i16 412, i16 347, i16 280, i16 214, i16 150, i16 91, i16 38, i16 -7, i16 -43, i16 -70, i16 -88, i16 -98, i16 -101, i16 -96, i16 -87, i16 -74, i16 -58, i16 -42, i16 -25, i16 -10, i16 3, i16 14, i16 22, i16 27, i16 29, i16 29, i16 27, i16 24, i16 19, i16 15, i16 10, i16 5, i16 1, i16 -2, i16 -4, i16 -6, i16 -7, i16 -7, i16 -7, i16 -6, i16 -6, i16 -5, i16 -4, i16 -3, i16 -2] }>, align 16
@.str.12 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }]
@str = private unnamed_addr constant [35 x i8] c"Binauralizer Configuration failed!\00", align 1

@_ZN8MIT_HRTFC1Ej = unnamed_addr alias void (%class.MIT_HRTF*, i32), void (%class.MIT_HRTF*, i32)* @_ZN8MIT_HRTFC2Ej
@_ZN16CAmbisonicSourceC1Ev = unnamed_addr alias void (%class.CAmbisonicSource*), void (%class.CAmbisonicSource*)* @_ZN16CAmbisonicSourceC2Ev
@_ZN8CBFormatC1Ev = unnamed_addr alias void (%class.CBFormat*), void (%class.CBFormat*)* @_ZN8CBFormatC2Ev
@_ZN17CAmbisonicEncoderC1Ev = unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderC2Ev
@_ZN17CAmbisonicEncoderD1Ev = unnamed_addr alias void (%class.CAmbisonicEncoder*), void (%class.CAmbisonicEncoder*)* @_ZN17CAmbisonicEncoderD2Ev
@_ZN21CAmbisonicEncoderDistC1Ev = unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistC2Ev
@_ZN21CAmbisonicEncoderDistD1Ev = unnamed_addr alias void (%class.CAmbisonicEncoderDist*), void (%class.CAmbisonicEncoderDist*)* @_ZN21CAmbisonicEncoderDistD2Ev
@_ZN19CAmbisonicProcessorC1Ev = unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorC2Ev
@_ZN19CAmbisonicProcessorD1Ev = unnamed_addr alias void (%class.CAmbisonicProcessor*), void (%class.CAmbisonicProcessor*)* @_ZN19CAmbisonicProcessorD2Ev
@_ZN17CAmbisonicSpeakerC1Ev = unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerC2Ev
@_ZN17CAmbisonicSpeakerD1Ev = unnamed_addr alias void (%class.CAmbisonicSpeaker*), void (%class.CAmbisonicSpeaker*)* @_ZN17CAmbisonicSpeakerD2Ev
@_ZN17CAmbisonicDecoderC1Ev = unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderC2Ev
@_ZN17CAmbisonicDecoderD1Ev = unnamed_addr alias void (%class.CAmbisonicDecoder*), void (%class.CAmbisonicDecoder*)* @_ZN17CAmbisonicDecoderD2Ev
@_ZN16CAmbisonicZoomerC1Ev = unnamed_addr alias void (%class.CAmbisonicZoomer*), void (%class.CAmbisonicZoomer*)* @_ZN16CAmbisonicZoomerC2Ev
@_ZN22CAmbisonicBinauralizerC1Ev = unnamed_addr alias void (%class.CAmbisonicBinauralizer*), void (%class.CAmbisonicBinauralizer*)* @_ZN22CAmbisonicBinauralizerC2Ev
@_ZN12ILLIXR_AUDIO5SoundC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb = unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1), void (%"class.ILLIXR_AUDIO::Sound"*, %"class.std::__cxx11::basic_string"*, i32, i1)* @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb
@_ZN12ILLIXR_AUDIO5SoundD1Ev = unnamed_addr alias void (%"class.ILLIXR_AUDIO::Sound"*), void (%"class.ILLIXR_AUDIO::Sound"*)* @_ZN12ILLIXR_AUDIO5SoundD2Ev
@_ZN12ILLIXR_AUDIO7ABAudioC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE = unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32), void (%"class.ILLIXR_AUDIO::ABAudio"*, %"class.std::__cxx11::basic_string"*, i32)* @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE
@_ZN12ILLIXR_AUDIO7ABAudioD1Ev = unnamed_addr alias void (%"class.ILLIXR_AUDIO::ABAudio"*), void (%"class.ILLIXR_AUDIO::ABAudio"*)* @_ZN12ILLIXR_AUDIO7ABAudioD2Ev

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #0

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: uwtable
define void @_ZN8MIT_HRTFC2Ej(%class.MIT_HRTF* nocapture %this, i32 %i_sampleRate) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !61 {
entry:
  %0 = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 0
  %i_sampleRate2.i = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 1
  store i32 %i_sampleRate, i32* %i_sampleRate2.i, align 8, !tbaa !62
  %i_len.i = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 2
  store i32 0, i32* %i_len.i, align 4, !tbaa !67
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %call = tail call i32 @mit_hrtf_availability(i32 0, i32 0, i32 %i_sampleRate)
  store i32 %call, i32* %i_len.i, align 4, !tbaa !67
  ret void
}

declare i32 @mit_hrtf_availability(i32, i32, i32) local_unnamed_addr #0

declare i32 @__gxx_personality_v0(...)

; Function Attrs: uwtable
define zeroext i1 @_ZN8MIT_HRTF3getEffPPf(%class.MIT_HRTF* nocapture readonly %this, float %f_azimuth, float %f_elevation, float** nocapture readonly %pfHRTF) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !70 {
entry:
  %nAzimuth = alloca i32, align 4
  %nElevation = alloca i32, align 4
  %0 = bitcast i32* %nAzimuth to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #24
  %sub = fsub float -0.000000e+00, %f_azimuth
  %call = tail call float @_Z16RadiansToDegreesf(float %sub)
  %conv = fptosi float %call to i32
  %cmp = icmp sgt i32 %conv, 180
  %sub2 = add nsw i32 %conv, -360
  %spec.select = select i1 %cmp, i32 %sub2, i32 %conv, !prof !71
  store i32 %spec.select, i32* %nAzimuth, align 4, !tbaa !72
  %1 = bitcast i32* %nElevation to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #24
  %call3 = tail call float @_Z16RadiansToDegreesf(float %f_elevation)
  %conv4 = fptosi float %call3 to i32
  store i32 %conv4, i32* %nElevation, align 4, !tbaa !72
  %i_len = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 2
  %2 = load i32, i32* %i_len, align 4, !tbaa !67
  %conv5 = zext i32 %2 to i64
  %cmp.i.i.i.i = icmp eq i32 %2, 0
  br i1 %cmp.i.i.i.i, label %invoke.cont10, label %cond.true.i.i.i.i, !prof !73

cond.true.i.i.i.i:                                ; preds = %entry
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv5, 1
  %call2.i.i.i.i3.i.i71 = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i.i)
          to label %invoke.cont unwind label %ehcleanup.thread

invoke.cont:                                      ; preds = %cond.true.i.i.i.i
  %3 = bitcast i8* %call2.i.i.i.i3.i.i71 to i16*
  %4 = shl nuw nsw i64 %conv5, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %call2.i.i.i.i3.i.i71, i8 0, i64 %4, i1 false)
  %.pr = load i32, i32* %i_len, align 4, !tbaa !67
  %conv7 = zext i32 %.pr to i64
  %cmp.i.i.i.i76 = icmp eq i32 %.pr, 0
  br i1 %cmp.i.i.i.i76, label %invoke.cont10, label %cond.true.i.i.i.i77, !prof !74

cond.true.i.i.i.i77:                              ; preds = %invoke.cont
  %mul.i.i.i.i.i.i78 = shl nuw nsw i64 %conv7, 1
  %call2.i.i.i.i3.i.i88 = invoke i8* @_Znwm(i64 %mul.i.i.i.i.i.i78)
          to label %for.body.i.i.preheader.i.i.i.i.i85 unwind label %_ZNSt6vectorIsSaIsEED2Ev.exit95

for.body.i.i.preheader.i.i.i.i.i85:               ; preds = %cond.true.i.i.i.i77
  %5 = bitcast i8* %call2.i.i.i.i3.i.i88 to i16*
  %6 = shl nuw nsw i64 %conv7, 1
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %call2.i.i.i.i3.i.i88, i8 0, i64 %6, i1 false)
  br label %invoke.cont10

invoke.cont10:                                    ; preds = %for.body.i.i.preheader.i.i.i.i.i85, %invoke.cont, %entry
  %7 = phi i16* [ %5, %for.body.i.i.preheader.i.i.i.i.i85 ], [ null, %invoke.cont ], [ null, %entry ]
  %8 = phi i8* [ %call2.i.i.i.i3.i.i88, %for.body.i.i.preheader.i.i.i.i.i85 ], [ null, %invoke.cont ], [ null, %entry ]
  %9 = phi i16* [ %3, %for.body.i.i.preheader.i.i.i.i.i85 ], [ %3, %invoke.cont ], [ null, %entry ]
  %10 = phi i8* [ %call2.i.i.i.i3.i.i71, %for.body.i.i.preheader.i.i.i.i.i85 ], [ %call2.i.i.i.i3.i.i71, %invoke.cont ], [ null, %entry ]
  %i_sampleRate = getelementptr inbounds %class.MIT_HRTF, %class.MIT_HRTF* %this, i64 0, i32 0, i32 1
  %11 = load i32, i32* %i_sampleRate, align 8, !tbaa !62
  %call19 = invoke i32 @mit_hrtf_get(i32* nonnull %nAzimuth, i32* nonnull %nElevation, i32 %11, i16* %9, i16* %7)
          to label %invoke.cont18 unwind label %lpad17

invoke.cont18:                                    ; preds = %invoke.cont10
  %cmp20 = icmp eq i32 %call19, 0
  br i1 %cmp20, label %cleanup, label %for.cond.preheader, !prof !71

for.cond.preheader:                               ; preds = %invoke.cont18
  %12 = load i32, i32* %i_len, align 4, !tbaa !67
  %cmp24104 = icmp eq i32 %12, 0
  br i1 %cmp24104, label %cleanup, label %for.body.lr.ph, !prof !75

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %13 = load float*, float** %pfHRTF, align 8, !tbaa !76
  %arrayidx38 = getelementptr inbounds float*, float** %pfHRTF, i64 1
  %14 = load float*, float** %arrayidx38, align 8, !tbaa !76
  %15 = zext i32 %12 to i64
  %min.iters.check = icmp ult i32 %12, 4
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %13, i64 %15
  %scevgep122 = getelementptr float, float* %14, i64 %15
  %bound0 = icmp ult float* %13, %scevgep122
  %bound1 = icmp ult float* %14, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %15, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %16 = getelementptr inbounds i16, i16* %9, i64 %index
  %17 = bitcast i16* %16 to <4 x i16>*
  %wide.load = load <4 x i16>, <4 x i16>* %17, align 2, !tbaa !78, !alias.scope !80
  %18 = sitofp <4 x i16> %wide.load to <4 x float>
  %19 = fdiv <4 x float> %18, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %20 = getelementptr inbounds float, float* %13, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  store <4 x float> %19, <4 x float>* %21, align 4, !tbaa !83, !alias.scope !85, !noalias !87
  %22 = getelementptr inbounds i16, i16* %7, i64 %index
  %23 = bitcast i16* %22 to <4 x i16>*
  %wide.load124 = load <4 x i16>, <4 x i16>* %23, align 2, !tbaa !78, !alias.scope !89
  %24 = sitofp <4 x i16> %wide.load124 to <4 x float>
  %25 = fdiv <4 x float> %24, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %26 = getelementptr inbounds float, float* %14, i64 %index
  %27 = bitcast float* %26 to <4 x float>*
  store <4 x float> %25, <4 x float>* %27, align 4, !tbaa !83, !alias.scope !87
  %index.next = add i64 %index, 4
  %28 = icmp eq i64 %index.next, %n.vec
  br i1 %28, label %middle.block, label %vector.body, !llvm.loop !91

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %15
  br i1 %cmp.n, label %if.then.i.i.i74, label %for.body.preheader

ehcleanup.thread:                                 ; preds = %cond.true.i.i.i.i
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  br label %ehcleanup56

_ZNSt6vectorIsSaIsEED2Ev.exit95:                  ; preds = %cond.true.i.i.i.i77
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  call void @_ZdlPv(i8* nonnull %call2.i.i.i.i3.i.i71) #24
  br label %ehcleanup56

lpad17:                                           ; preds = %invoke.cont10
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  %tobool.i.i.i = icmp eq i16* %7, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIsSaIsEED2Ev.exit, label %if.then.i.i.i, !prof !73

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %add.ptr.i91 = getelementptr inbounds i16, i16* %9, i64 %indvars.iv
  %35 = load i16, i16* %add.ptr.i91, align 2, !tbaa !78
  %conv29 = sitofp i16 %35 to float
  %div = fdiv float %conv29, 3.276700e+04
  %arrayidx31 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  store float %div, float* %arrayidx31, align 4, !tbaa !83
  %add.ptr.i = getelementptr inbounds i16, i16* %7, i64 %indvars.iv
  %36 = load i16, i16* %add.ptr.i, align 2, !tbaa !78
  %conv36 = sitofp i16 %36 to float
  %div37 = fdiv float %conv36, 3.276700e+04
  %arrayidx40 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  store float %div37, float* %arrayidx40, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp24 = icmp ult i64 %indvars.iv.next, %15
  br i1 %cmp24, label %for.body, label %if.then.i.i.i74, !prof !93, !llvm.loop !94

cleanup:                                          ; preds = %for.cond.preheader, %invoke.cont18
  %retval.0 = phi i1 [ false, %invoke.cont18 ], [ true, %for.cond.preheader ]
  %tobool.i.i.i73 = icmp eq i16* %7, null
  br i1 %tobool.i.i.i73, label %_ZNSt6vectorIsSaIsEED2Ev.exit75, label %if.then.i.i.i74, !prof !95

if.then.i.i.i74:                                  ; preds = %cleanup, %for.body, %middle.block
  %retval.0119 = phi i1 [ %retval.0, %cleanup ], [ true, %middle.block ], [ true, %for.body ]
  call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit75

_ZNSt6vectorIsSaIsEED2Ev.exit75:                  ; preds = %if.then.i.i.i74, %cleanup
  %retval.0120 = phi i1 [ %retval.0, %cleanup ], [ %retval.0119, %if.then.i.i.i74 ]
  %tobool.i.i.i73.1 = icmp eq i16* %9, null
  br i1 %tobool.i.i.i73.1, label %_ZNSt6vectorIsSaIsEED2Ev.exit75.1, label %if.then.i.i.i74.1, !prof !73

if.then.i.i.i:                                    ; preds = %lpad17
  call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit

_ZNSt6vectorIsSaIsEED2Ev.exit:                    ; preds = %if.then.i.i.i, %lpad17
  %tobool.i.i.i.1 = icmp eq i16* %9, null
  br i1 %tobool.i.i.i.1, label %ehcleanup56, label %if.then.i.i.i.1, !prof !73

ehcleanup56:                                      ; preds = %if.then.i.i.i.1, %_ZNSt6vectorIsSaIsEED2Ev.exit, %_ZNSt6vectorIsSaIsEED2Ev.exit95, %ehcleanup.thread
  %.sink = phi { i8*, i32 } [ %31, %_ZNSt6vectorIsSaIsEED2Ev.exit95 ], [ %29, %ehcleanup.thread ], [ %33, %if.then.i.i.i.1 ], [ %33, %_ZNSt6vectorIsSaIsEED2Ev.exit ]
  %exn.slot.1 = phi i8* [ %32, %_ZNSt6vectorIsSaIsEED2Ev.exit95 ], [ %30, %ehcleanup.thread ], [ %34, %if.then.i.i.i.1 ], [ %34, %_ZNSt6vectorIsSaIsEED2Ev.exit ]
  %37 = extractvalue { i8*, i32 } %.sink, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.1, 0
  %lpad.val61 = insertvalue { i8*, i32 } %lpad.val, i32 %37, 1
  resume { i8*, i32 } %lpad.val61

if.then.i.i.i74.1:                                ; preds = %_ZNSt6vectorIsSaIsEED2Ev.exit75
  call void @_ZdlPv(i8* nonnull %10) #24
  br label %_ZNSt6vectorIsSaIsEED2Ev.exit75.1

_ZNSt6vectorIsSaIsEED2Ev.exit75.1:                ; preds = %if.then.i.i.i74.1, %_ZNSt6vectorIsSaIsEED2Ev.exit75
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #24
  ret i1 %retval.0120

if.then.i.i.i.1:                                  ; preds = %_ZNSt6vectorIsSaIsEED2Ev.exit
  call void @_ZdlPv(i8* nonnull %10) #24
  br label %ehcleanup56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare float @_Z16RadiansToDegreesf(float) local_unnamed_addr #0

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @mit_hrtf_get(i32*, i32*, i32, i16*, i16*) local_unnamed_addr #0

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN14CAmbisonicBaseC2Ev(%class.CAmbisonicBase* nocapture %this) unnamed_addr #5 align 2 !prof !96 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV14CAmbisonicBase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  store i32 0, i32* %m_nOrder, align 8, !tbaa !97
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  store i8 0, i8* %m_b3D, align 4, !tbaa !100
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  store i32 0, i32* %m_nChannelCount, align 8, !tbaa !101
  %m_bOpt = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 5
  store i8 0, i8* %m_bOpt, align 4, !tbaa !102
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN14CAmbisonicBase8GetOrderEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nOrder, align 8, !tbaa !97
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN14CAmbisonicBase9GetHeightEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  %0 = load i8, i8* %m_b3D, align 4, !tbaa !100, !range !104
  %tobool = icmp ne i8 %0, 0
  ret i1 %tobool
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN14CAmbisonicBase15GetChannelCountEv(%class.CAmbisonicBase* nocapture readonly %this) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  %0 = load i32, i32* %m_nChannelCount, align 8, !tbaa !101
  ret i32 %0
}

; Function Attrs: uwtable
define zeroext i1 @_ZN14CAmbisonicBase9ConfigureEjbj(%class.CAmbisonicBase* nocapture %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 !prof !105 {
entry:
  %frombool = zext i1 %b3D to i8
  %m_nOrder = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 1
  store i32 %nOrder, i32* %m_nOrder, align 8, !tbaa !97
  %m_b3D = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 2
  store i8 %frombool, i8* %m_b3D, align 4, !tbaa !100
  %call = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %m_nChannelCount = getelementptr inbounds %class.CAmbisonicBase, %class.CAmbisonicBase* %this, i64 0, i32 4
  store i32 %call, i32* %m_nChannelCount, align 8, !tbaa !101
  ret i1 true
}

declare i32 @_Z17OrderToComponentsjb(i32, i1 zeroext) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN16CAmbisonicSourceC2Ev(%class.CAmbisonicSource* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !106 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !100
  %3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !101
  %4 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1
  %fDistance = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false)
  store float 1.000000e+00, float* %fDistance, align 8, !tbaa !107
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  store float 1.000000e+00, float* %m_fGain, align 4, !tbaa !111
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN16CAmbisonicSource9ConfigureEjbj(%class.CAmbisonicSource* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !112 {
entry:
  %ref.tmp = alloca float, align 4
  %ref.tmp5 = alloca float, align 4
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !97
  %1 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !100
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !101
  %m_pfCoeff = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1
  %conv = zext i32 %call.i to i64
  %3 = bitcast float* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp, align 4, !tbaa !83
  %_M_finish.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !113
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !116
  %sub.ptr.sub.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !prof !117

if.then.i:                                        ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff, float* %9, i64 %sub.i, float* nonnull dereferenceable(4) %ref.tmp)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

if.else.i:                                        ; preds = %entry
  %cmp8.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp8.i, label %if.then9.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

if.then9.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %8, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit:            ; preds = %if.then9.i, %if.else.i, %if.then.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !97
  %add = add i32 %10, 1
  %conv4 = zext i32 %add to i64
  %11 = bitcast float* %ref.tmp5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5, align 4, !tbaa !83
  %_M_finish.i.i6 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6 to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !113
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !116
  %sub.ptr.sub.i.i7 = sub i64 %13, %15
  %sub.ptr.div.i.i8 = ashr exact i64 %sub.ptr.sub.i.i7, 2
  %cmp.i9 = icmp ult i64 %sub.ptr.div.i.i8, %conv4
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9, label %if.then.i11, label %if.else.i13, !prof !117

if.then.i11:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
  %17 = inttoptr i64 %13 to float*
  %sub.i10 = sub nsw i64 %conv4, %sub.ptr.div.i.i8
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights, float* %17, i64 %sub.i10, float* nonnull dereferenceable(4) %ref.tmp5)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

if.else.i13:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit
  %cmp8.i12 = icmp ugt i64 %sub.ptr.div.i.i8, %conv4
  br i1 %cmp8.i12, label %if.then9.i15, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

if.then9.i15:                                     ; preds = %if.else.i13
  %add.ptr.i14 = getelementptr inbounds float, float* %16, i64 %conv4
  store float* %add.ptr.i14, float** %_M_finish.i.i6, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit16:          ; preds = %if.then9.i15, %if.else.i13, %if.then.i11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN16CAmbisonicSource5ResetEv(%class.CAmbisonicSource* nocapture %this) unnamed_addr #8 align 2 !prof !103 {
entry:
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* readonly %this) unnamed_addr #9 align 2 !prof !118 {
entry:
  %fAzimuth = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 0
  %0 = load float, float* %fAzimuth, align 8, !tbaa !119
  %call = tail call float @cosf(float %0) #24
  %1 = load float, float* %fAzimuth, align 8, !tbaa !119
  %call4 = tail call float @sinf(float %1) #24
  %fElevation = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 1
  %2 = load float, float* %fElevation, align 4, !tbaa !120
  %call6 = tail call float @cosf(float %2) #24
  %3 = load float, float* %fElevation, align 4, !tbaa !120
  %call9 = tail call float @sinf(float %3) #24
  %4 = load float, float* %fAzimuth, align 8, !tbaa !119
  %mul = fmul float %4, 2.000000e+00
  %call12 = tail call float @cosf(float %mul) #24
  %5 = load float, float* %fAzimuth, align 8, !tbaa !119
  %mul15 = fmul float %5, 2.000000e+00
  %call16 = tail call float @sinf(float %mul15) #24
  %6 = load float, float* %fElevation, align 4, !tbaa !120
  %mul19 = fmul float %6, 2.000000e+00
  %call20 = tail call float @sinf(float %mul19) #24
  %7 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 4, !tbaa !100, !range !104
  %tobool = icmp eq i8 %8, 0
  %9 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !83
  %_M_start.i420 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load float*, float** %_M_start.i420, align 8, !tbaa !116
  %14 = bitcast float* %13 to i32*
  store i32 %12, i32* %14, align 4, !tbaa !83
  %15 = load i32, i32* %9, align 8, !tbaa !97
  %cmp218 = icmp eq i32 %15, 0
  br i1 %tobool, label %if.then211, label %if.then21, !prof !121

if.then21:                                        ; preds = %entry
  br i1 %cmp218, label %if.end277, label %if.end45, !prof !121

if.end45:                                         ; preds = %if.then21
  %mul28 = fmul float %call4, %call6
  %add.ptr.i419 = getelementptr inbounds float, float* %10, i64 1
  %16 = load float, float* %add.ptr.i419, align 4, !tbaa !83
  %mul31 = fmul float %mul28, %16
  %add.ptr.i417 = getelementptr inbounds float, float* %13, i64 1
  store float %mul31, float* %add.ptr.i417, align 4, !tbaa !83
  %17 = load float, float* %add.ptr.i419, align 4, !tbaa !83
  %mul36 = fmul float %call9, %17
  %add.ptr.i413 = getelementptr inbounds float, float* %13, i64 2
  store float %mul36, float* %add.ptr.i413, align 4, !tbaa !83
  %mul39 = fmul float %call, %call6
  %18 = load float, float* %add.ptr.i419, align 4, !tbaa !83
  %mul42 = fmul float %mul39, %18
  %add.ptr.i409 = getelementptr inbounds float, float* %13, i64 3
  store float %mul42, float* %add.ptr.i409, align 4, !tbaa !83
  %cmp47 = icmp eq i32 %15, 1
  br i1 %cmp47, label %if.end277, label %if.end104, !prof !74

if.end104:                                        ; preds = %if.end45
  %square332 = fmul float %call6, %call6
  %mul51 = fmul float %square332, %call16
  %conv = fpext float %mul51 to double
  %mul52 = fmul double %conv, 0x3FEBB67AE8584CAA
  %add.ptr.i407 = getelementptr inbounds float, float* %10, i64 2
  %19 = load float, float* %add.ptr.i407, align 4, !tbaa !83
  %conv55 = fpext float %19 to double
  %mul56 = fmul double %mul52, %conv55
  %conv57 = fptrunc double %mul56 to float
  %add.ptr.i405 = getelementptr inbounds float, float* %13, i64 4
  store float %conv57, float* %add.ptr.i405, align 4, !tbaa !83
  %mul62 = fmul float %call4, %call20
  %conv63 = fpext float %mul62 to double
  %mul64 = fmul double %conv63, 0x3FEBB67AE8584CAA
  %20 = load float, float* %add.ptr.i407, align 4, !tbaa !83
  %conv67 = fpext float %20 to double
  %mul68 = fmul double %mul64, %conv67
  %conv69 = fptrunc double %mul68 to float
  %add.ptr.i401 = getelementptr inbounds float, float* %13, i64 5
  store float %conv69, float* %add.ptr.i401, align 4, !tbaa !83
  %square333 = fmul float %call9, %call9
  %mul73 = fmul float %square333, 1.500000e+00
  %sub = fadd float %mul73, -5.000000e-01
  %21 = load float, float* %add.ptr.i407, align 4, !tbaa !83
  %mul76 = fmul float %sub, %21
  %add.ptr.i397 = getelementptr inbounds float, float* %13, i64 6
  store float %mul76, float* %add.ptr.i397, align 4, !tbaa !83
  %mul81 = fmul float %call, %call20
  %conv82 = fpext float %mul81 to double
  %mul83 = fmul double %conv82, 0x3FEBB67AE8584CAA
  %22 = load float, float* %add.ptr.i407, align 4, !tbaa !83
  %conv86 = fpext float %22 to double
  %mul87 = fmul double %mul83, %conv86
  %conv88 = fptrunc double %mul87 to float
  %add.ptr.i393 = getelementptr inbounds float, float* %13, i64 7
  store float %conv88, float* %add.ptr.i393, align 4, !tbaa !83
  %mul94 = fmul float %square332, %call12
  %conv95 = fpext float %mul94 to double
  %mul96 = fmul double %conv95, 0x3FEBB67AE8584CAA
  %23 = load float, float* %add.ptr.i407, align 4, !tbaa !83
  %conv99 = fpext float %23 to double
  %mul100 = fmul double %mul96, %conv99
  %conv101 = fptrunc double %mul100 to float
  %add.ptr.i389 = getelementptr inbounds float, float* %13, i64 8
  store float %conv101, float* %add.ptr.i389, align 4, !tbaa !83
  %cmp106 = icmp ugt i32 %15, 2
  br i1 %cmp106, label %if.then107, label %if.end277, !prof !122

if.then107:                                       ; preds = %if.end104
  %24 = load float, float* %fAzimuth, align 8, !tbaa !119
  %mul111 = fmul float %24, 3.000000e+00
  %call112 = tail call float @sinf(float %mul111) #24
  %call113 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul114 = fmul float %call112, %call113
  %conv115 = fpext float %mul114 to double
  %mul116 = fmul double %conv115, 0x3FE94C583ADA5B53
  %25 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i387 = getelementptr inbounds float, float* %25, i64 3
  %26 = load float, float* %add.ptr.i387, align 4, !tbaa !83
  %conv119 = fpext float %26 to double
  %mul120 = fmul double %mul116, %conv119
  %conv121 = fptrunc double %mul120 to float
  %27 = load float*, float** %_M_start.i420, align 8, !tbaa !116
  %add.ptr.i385 = getelementptr inbounds float, float* %27, i64 9
  store float %conv121, float* %add.ptr.i385, align 4, !tbaa !83
  %mul126 = fmul float %call9, %call16
  %mul128 = fmul float %square332, %mul126
  %conv129 = fpext float %mul128 to double
  %mul130 = fmul double %conv129, 0x3FFEFBDEB14F4EDA
  %28 = load float, float* %add.ptr.i387, align 4, !tbaa !83
  %conv133 = fpext float %28 to double
  %mul134 = fmul double %mul130, %conv133
  %conv135 = fptrunc double %mul134 to float
  %add.ptr.i381 = getelementptr inbounds float, float* %27, i64 10
  store float %conv135, float* %add.ptr.i381, align 4, !tbaa !83
  %mul141 = fmul float %square333, 5.000000e+00
  %sub142 = fadd float %mul141, -1.000000e+00
  %mul143 = fmul float %mul28, %sub142
  %conv144 = fpext float %mul143 to double
  %mul145 = fmul double %conv144, 0x3FE3988E1409212E
  %29 = load float, float* %add.ptr.i387, align 4, !tbaa !83
  %conv148 = fpext float %29 to double
  %mul149 = fmul double %mul145, %conv148
  %conv150 = fptrunc double %mul149 to float
  %add.ptr.i377 = getelementptr inbounds float, float* %27, i64 11
  store float %conv150, float* %add.ptr.i377, align 4, !tbaa !83
  %sub155 = fadd float %mul141, -3.000000e+00
  %mul156 = fmul float %call9, %sub155
  %mul157 = fmul float %mul156, 5.000000e-01
  %30 = load float, float* %add.ptr.i387, align 4, !tbaa !83
  %mul160 = fmul float %mul157, %30
  %add.ptr.i373 = getelementptr inbounds float, float* %27, i64 12
  store float %mul160, float* %add.ptr.i373, align 4, !tbaa !83
  %mul168 = fmul float %mul39, %sub142
  %conv169 = fpext float %mul168 to double
  %mul170 = fmul double %conv169, 0x3FE3988E1409212E
  %31 = load float, float* %add.ptr.i387, align 4, !tbaa !83
  %conv173 = fpext float %31 to double
  %mul174 = fmul double %mul170, %conv173
  %conv175 = fptrunc double %mul174 to float
  %add.ptr.i369 = getelementptr inbounds float, float* %27, i64 13
  store float %conv175, float* %add.ptr.i369, align 4, !tbaa !83
  %mul180 = fmul float %call9, %call12
  %mul182 = fmul float %square332, %mul180
  %conv183 = fpext float %mul182 to double
  %mul184 = fmul double %conv183, 0x3FFEFBDEB14F4EDA
  %32 = load float, float* %add.ptr.i387, align 4, !tbaa !83
  %conv187 = fpext float %32 to double
  %mul188 = fmul double %mul184, %conv187
  %conv189 = fptrunc double %mul188 to float
  %add.ptr.i365 = getelementptr inbounds float, float* %27, i64 14
  store float %conv189, float* %add.ptr.i365, align 4, !tbaa !83
  %33 = load float, float* %fAzimuth, align 8, !tbaa !119
  %mul195 = fmul float %33, 3.000000e+00
  %call196 = tail call float @cosf(float %mul195) #24
  %call197 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul198 = fmul float %call196, %call197
  %conv199 = fpext float %mul198 to double
  %mul200 = fmul double %conv199, 0x3FE94C583ADA5B53
  %34 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i363 = getelementptr inbounds float, float* %34, i64 3
  %35 = load float, float* %add.ptr.i363, align 4, !tbaa !83
  %conv203 = fpext float %35 to double
  %mul204 = fmul double %mul200, %conv203
  %conv205 = fptrunc double %mul204 to float
  %36 = load float*, float** %_M_start.i420, align 8, !tbaa !116
  %add.ptr.i361 = getelementptr inbounds float, float* %36, i64 15
  store float %conv205, float* %add.ptr.i361, align 4, !tbaa !83
  br label %if.end277

if.then211:                                       ; preds = %entry
  br i1 %cmp218, label %if.end277, label %if.end232

if.end232:                                        ; preds = %if.then211
  %mul220 = fmul float %call, %call6
  %add.ptr.i359 = getelementptr inbounds float, float* %10, i64 1
  %37 = load float, float* %add.ptr.i359, align 4, !tbaa !83
  %mul223 = fmul float %mul220, %37
  %add.ptr.i357 = getelementptr inbounds float, float* %13, i64 1
  store float %mul223, float* %add.ptr.i357, align 4, !tbaa !83
  %mul226 = fmul float %call4, %call6
  %38 = load float, float* %add.ptr.i359, align 4, !tbaa !83
  %mul229 = fmul float %mul226, %38
  %add.ptr.i353 = getelementptr inbounds float, float* %13, i64 2
  store float %mul229, float* %add.ptr.i353, align 4, !tbaa !83
  %cmp234 = icmp eq i32 %15, 1
  br i1 %cmp234, label %if.end277, label %if.end250

if.end250:                                        ; preds = %if.end232
  %square = fmul float %call6, %call6
  %mul237 = fmul float %square, %call12
  %add.ptr.i351 = getelementptr inbounds float, float* %10, i64 2
  %39 = load float, float* %add.ptr.i351, align 4, !tbaa !83
  %mul240 = fmul float %mul237, %39
  %add.ptr.i349 = getelementptr inbounds float, float* %13, i64 3
  store float %mul240, float* %add.ptr.i349, align 4, !tbaa !83
  %mul244 = fmul float %square, %call16
  %40 = load float, float* %add.ptr.i351, align 4, !tbaa !83
  %mul247 = fmul float %mul244, %40
  %add.ptr.i345 = getelementptr inbounds float, float* %13, i64 4
  store float %mul247, float* %add.ptr.i345, align 4, !tbaa !83
  %cmp252 = icmp ugt i32 %15, 2
  br i1 %cmp252, label %if.then253, label %if.end277

if.then253:                                       ; preds = %if.end250
  %41 = load float, float* %fAzimuth, align 8, !tbaa !119
  %mul256 = fmul float %41, 3.000000e+00
  %call257 = tail call float @cosf(float %mul256) #24
  %call258 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul259 = fmul float %call257, %call258
  %42 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i343 = getelementptr inbounds float, float* %42, i64 3
  %43 = load float, float* %add.ptr.i343, align 4, !tbaa !83
  %mul262 = fmul float %mul259, %43
  %44 = load float*, float** %_M_start.i420, align 8, !tbaa !116
  %add.ptr.i341 = getelementptr inbounds float, float* %44, i64 5
  store float %mul262, float* %add.ptr.i341, align 4, !tbaa !83
  %45 = load float, float* %fAzimuth, align 8, !tbaa !119
  %mul267 = fmul float %45, 3.000000e+00
  %call268 = tail call float @sinf(float %mul267) #24
  %call269 = tail call float @powf(float %call6, float 3.000000e+00) #24
  %mul270 = fmul float %call268, %call269
  %46 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i339 = getelementptr inbounds float, float* %46, i64 3
  %47 = load float, float* %add.ptr.i339, align 4, !tbaa !83
  %mul273 = fmul float %mul270, %47
  %48 = load float*, float** %_M_start.i420, align 8, !tbaa !116
  %add.ptr.i337 = getelementptr inbounds float, float* %48, i64 6
  store float %mul273, float* %add.ptr.i337, align 4, !tbaa !83
  br label %if.end277

if.end277:                                        ; preds = %if.then253, %if.end250, %if.end232, %if.then211, %if.then107, %if.end104, %if.end45, %if.then21
  %49 = phi float* [ %13, %if.end232 ], [ %13, %if.end45 ], [ %13, %if.then211 ], [ %13, %if.then21 ], [ %13, %if.end250 ], [ %48, %if.then253 ], [ %13, %if.end104 ], [ %36, %if.then107 ]
  %50 = bitcast float* %49 to i8*
  %51 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 4
  %52 = load i32, i32* %51, align 8, !tbaa !101
  %cmp278425 = icmp eq i32 %52, 0
  br i1 %cmp278425, label %for.cond.cleanup, label %for.body.lr.ph, !prof !123

for.body.lr.ph:                                   ; preds = %if.end277
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %53 = zext i32 %52 to i64
  %min.iters.check = icmp ult i32 %52, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  %54 = or i64 %indvars.iv.ph, 1
  %55 = icmp ugt i64 %54, %53
  %umax = select i1 %55, i64 %54, i64 %53
  %56 = xor i64 %indvars.iv.ph, -1
  %57 = add nsw i64 %umax, %56
  %xtraiter = and i64 %umax, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body.prol.loopexit, label %for.body.prol

for.body.prol:                                    ; preds = %for.body.prol, %for.body.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body.prol ], [ %indvars.iv.ph, %for.body.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.prol ], [ %xtraiter, %for.body.preheader ]
  %58 = load float, float* %m_fGain, align 4, !tbaa !111
  %add.ptr.i.prol = getelementptr inbounds float, float* %49, i64 %indvars.iv.prol
  %59 = load float, float* %add.ptr.i.prol, align 4, !tbaa !83
  %mul282.prol = fmul float %58, %59
  store float %mul282.prol, float* %add.ptr.i.prol, align 4, !tbaa !83
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.prol.loopexit, label %for.body.prol, !llvm.loop !124

for.body.prol.loopexit:                           ; preds = %for.body.prol, %for.body.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body.preheader ], [ %indvars.iv.next.prol, %for.body.prol ]
  %60 = icmp ult i64 %57, 3
  br i1 %60, label %for.cond.cleanup, label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %49, i64 %53
  %scevgep428 = getelementptr %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %scevgep428429 = bitcast float* %scevgep428 to i8*
  %uglygep = getelementptr i8, i8* %scevgep428429, i64 1
  %bound0 = icmp ugt i8* %uglygep, %50
  %bound1 = icmp ult float* %m_fGain, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %53, 4294967288
  %61 = add nsw i64 %n.vec, -8
  %62 = lshr exact i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %xtraiter432 = and i64 %63, 1
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %63, %xtraiter432
  %65 = load float, float* %m_fGain, align 4, !tbaa !111, !alias.scope !126
  %66 = insertelement <4 x float> undef, float %65, i32 0
  %67 = shufflevector <4 x float> %66, <4 x float> undef, <4 x i32> zeroinitializer
  %68 = insertelement <4 x float> undef, float %65, i32 0
  %69 = shufflevector <4 x float> %68, <4 x float> undef, <4 x i32> zeroinitializer
  %70 = load float, float* %m_fGain, align 4, !tbaa !111, !alias.scope !126
  %71 = insertelement <4 x float> undef, float %70, i32 0
  %72 = shufflevector <4 x float> %71, <4 x float> undef, <4 x i32> zeroinitializer
  %73 = insertelement <4 x float> undef, float %70, i32 0
  %74 = shufflevector <4 x float> %73, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %75 = getelementptr inbounds float, float* %49, i64 %index
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %76, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %77 = getelementptr inbounds float, float* %75, i64 4
  %78 = bitcast float* %77 to <4 x float>*
  %wide.load431 = load <4 x float>, <4 x float>* %78, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %79 = fmul <4 x float> %67, %wide.load
  %80 = fmul <4 x float> %69, %wide.load431
  %81 = bitcast float* %75 to <4 x float>*
  store <4 x float> %79, <4 x float>* %81, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %82 = bitcast float* %77 to <4 x float>*
  store <4 x float> %80, <4 x float>* %82, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %index.next = or i64 %index, 8
  %83 = getelementptr inbounds float, float* %49, i64 %index.next
  %84 = bitcast float* %83 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %84, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %85 = getelementptr inbounds float, float* %83, i64 4
  %86 = bitcast float* %85 to <4 x float>*
  %wide.load431.1 = load <4 x float>, <4 x float>* %86, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %87 = fmul <4 x float> %72, %wide.load.1
  %88 = fmul <4 x float> %74, %wide.load431.1
  %89 = bitcast float* %83 to <4 x float>*
  store <4 x float> %87, <4 x float>* %89, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %90 = bitcast float* %85 to <4 x float>*
  store <4 x float> %88, <4 x float>* %90, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !131

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod433 = icmp eq i64 %xtraiter432, 0
  br i1 %lcmp.mod433, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %91 = load float, float* %m_fGain, align 4, !tbaa !111, !alias.scope !126
  %92 = insertelement <4 x float> undef, float %91, i32 0
  %93 = shufflevector <4 x float> %92, <4 x float> undef, <4 x i32> zeroinitializer
  %94 = insertelement <4 x float> undef, float %91, i32 0
  %95 = shufflevector <4 x float> %94, <4 x float> undef, <4 x i32> zeroinitializer
  %96 = getelementptr inbounds float, float* %49, i64 %index.unr
  %97 = bitcast float* %96 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %97, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %98 = getelementptr inbounds float, float* %96, i64 4
  %99 = bitcast float* %98 to <4 x float>*
  %wide.load431.epil = load <4 x float>, <4 x float>* %99, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %100 = fmul <4 x float> %93, %wide.load.epil
  %101 = fmul <4 x float> %95, %wide.load431.epil
  %102 = bitcast float* %96 to <4 x float>*
  store <4 x float> %100, <4 x float>* %102, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  %103 = bitcast float* %98 to <4 x float>*
  store <4 x float> %101, <4 x float>* %103, align 4, !tbaa !83, !alias.scope !129, !noalias !126
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %53
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %for.body.prol.loopexit, %if.end277
  ret void

for.body:                                         ; preds = %for.body, %for.body.prol.loopexit
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body ], [ %indvars.iv.unr, %for.body.prol.loopexit ]
  %104 = load float, float* %m_fGain, align 4, !tbaa !111
  %add.ptr.i = getelementptr inbounds float, float* %49, i64 %indvars.iv
  %105 = load float, float* %add.ptr.i, align 4, !tbaa !83
  %mul282 = fmul float %104, %105
  store float %mul282, float* %add.ptr.i, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %106 = load float, float* %m_fGain, align 4, !tbaa !111
  %add.ptr.i.1 = getelementptr inbounds float, float* %49, i64 %indvars.iv.next
  %107 = load float, float* %add.ptr.i.1, align 4, !tbaa !83
  %mul282.1 = fmul float %106, %107
  store float %mul282.1, float* %add.ptr.i.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %108 = load float, float* %m_fGain, align 4, !tbaa !111
  %add.ptr.i.2 = getelementptr inbounds float, float* %49, i64 %indvars.iv.next.1
  %109 = load float, float* %add.ptr.i.2, align 4, !tbaa !83
  %mul282.2 = fmul float %108, %109
  store float %mul282.2, float* %add.ptr.i.2, align 4, !tbaa !83
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %110 = load float, float* %m_fGain, align 4, !tbaa !111
  %add.ptr.i.3 = getelementptr inbounds float, float* %49, i64 %indvars.iv.next.2
  %111 = load float, float* %add.ptr.i.3, align 4, !tbaa !83
  %mul282.3 = fmul float %110, %111
  store float %mul282.3, float* %add.ptr.i.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %cmp278.3 = icmp ult i64 %indvars.iv.next.3, %53
  br i1 %cmp278.3, label %for.body, label %for.cond.cleanup, !prof !132, !llvm.loop !133
}

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #10

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN16CAmbisonicSource11SetPositionE10PolarPoint(%class.CAmbisonicSource* nocapture %this, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) unnamed_addr #11 align 2 !prof !112 {
entry:
  %polPosition.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3
  %polPosition.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %polPosition.sroa.0.0..sroa_idx to <2 x float>*
  store <2 x float> %polPosition.coerce0, <2 x float>* %polPosition.sroa.0.0..sroa_cast, align 8
  %polPosition.sroa.2.0..sroa_idx3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  store float %polPosition.coerce1, float* %polPosition.sroa.2.0..sroa_idx3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind readonly uwtable
define { <2 x float>, float } @_ZN16CAmbisonicSource11GetPositionEv(%class.CAmbisonicSource* nocapture readonly %this) unnamed_addr #6 align 2 !prof !70 {
entry:
  %retval.sroa.0.0..sroa_idx = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3
  %retval.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %retval.sroa.0.0..sroa_idx to <2 x float>*
  %retval.sroa.0.0.copyload = load <2 x float>, <2 x float>* %retval.sroa.0.0..sroa_cast, align 8
  %retval.sroa.2.0..sroa_idx3 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 3, i32 2
  %retval.sroa.2.0.copyload = load float, float* %retval.sroa.2.0..sroa_idx3, align 8
  %.fca.0.insert = insertvalue { <2 x float>, float } undef, <2 x float> %retval.sroa.0.0.copyload, 0
  %.fca.1.insert = insertvalue { <2 x float>, float } %.fca.0.insert, float %retval.sroa.2.0.copyload, 1
  ret { <2 x float>, float } %.fca.1.insert
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource14SetOrderWeightEjf(%class.CAmbisonicSource* nocapture readonly %this, i32 %nOrder, float %fWeight) unnamed_addr #12 align 2 !prof !103 {
entry:
  %conv = zext i32 %nOrder to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  store float %fWeight, float* %add.ptr.i, align 4, !tbaa !83
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource17SetOrderWeightAllEf(%class.CAmbisonicSource* nocapture readonly %this, float %fWeight) unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !97
  %cmp6 = icmp eq i32 %1, -1
  br i1 %cmp6, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %2 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add = add nuw i32 %1, 1
  %3 = zext i32 %add to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %add.ptr.i = getelementptr inbounds float, float* %2, i64 %indvars.iv
  store float %fWeight, float* %add.ptr.i, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp = icmp ult i64 %indvars.iv.next, %3
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN16CAmbisonicSource14SetCoefficientEjf(%class.CAmbisonicSource* nocapture readonly %this, i32 %nChannel, float %fCoeff) unnamed_addr #12 align 2 !prof !103 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  store float %fCoeff, float* %add.ptr.i, align 4, !tbaa !83
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource14GetOrderWeightEj(%class.CAmbisonicSource* nocapture readonly %this, i32 %nOrder) unnamed_addr #6 align 2 !prof !103 {
entry:
  %conv = zext i32 %nOrder to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  %1 = load float, float* %add.ptr.i, align 4, !tbaa !83
  ret float %1
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource14GetCoefficientEj(%class.CAmbisonicSource* nocapture readonly %this, i32 %nChannel) unnamed_addr #6 align 2 !prof !134 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %0 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i = getelementptr inbounds float, float* %0, i64 %conv
  %1 = load float, float* %add.ptr.i, align 4, !tbaa !83
  ret float %1
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN16CAmbisonicSource7SetGainEf(%class.CAmbisonicSource* nocapture %this, float %fGain) unnamed_addr #5 align 2 !prof !135 {
entry:
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  store float %fGain, float* %m_fGain, align 4, !tbaa !111
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicSource7GetGainEv(%class.CAmbisonicSource* nocapture readonly %this) unnamed_addr #6 align 2 !prof !103 {
entry:
  %m_fGain = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 4
  %0 = load float, float* %m_fGain, align 4, !tbaa !111
  ret float %0
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormatC2Ev(%class.CBFormat* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !136 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !100
  %3 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !101
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %5 = bitcast i32* %m_nSamples to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN8CBFormat14GetSampleCountEv(%class.CBFormat* nocapture readonly %this) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  ret i32 %0
}

; Function Attrs: uwtable
define zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleCount) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !136 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !97
  %1 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !100
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !101
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  store i32 %nSampleCount, i32* %m_nSamples, align 8, !tbaa !137
  %mul = mul i32 %call.i, %nSampleCount
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  store i32 %mul, i32* %m_nDataLength, align 4, !tbaa !141
  %m_pfData = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3
  %conv = zext i32 %mul to i64
  %_M_finish.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 1
  %3 = bitcast float** %_M_finish.i.i to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !113
  %5 = bitcast %"class.std::vector.0"* %m_pfData to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !116
  %sub.ptr.sub.i.i = sub i64 %4, %6
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %7 = inttoptr i64 %6 to float*
  %8 = inttoptr i64 %6 to i8*
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !prof !142

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfData, i64 %sub.i)
  %.phi.trans.insert = bitcast %"class.std::vector.0"* %m_pfData to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !116
  %.pre33 = load i32, i32* %m_nDataLength, align 4, !tbaa !141
  %.pre35 = zext i32 %.pre33 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %7, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

_ZNSt6vectorIfSaIfEE6resizeEm.exit:               ; preds = %if.then5.i, %if.else.i, %if.then.i
  %conv9.pre-phi = phi i64 [ %.pre35, %if.then.i ], [ %conv, %if.else.i ], [ %conv, %if.then5.i ]
  %9 = phi i8* [ %.pre, %if.then.i ], [ %8, %if.else.i ], [ %8, %if.then5.i ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %m_pfData, i64 0, i32 0, i32 0, i32 0
  %mul10 = shl nuw nsw i64 %conv9.pre-phi, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 %mul10, i1 false)
  %m_ppfChannels = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4
  %10 = load i32, i32* %2, align 8, !tbaa !101
  %conv12 = zext i32 %10 to i64
  %11 = shl nuw nsw i64 %conv12, 3
  %call13 = tail call i8* @_Znam(i64 %11) #25
  %12 = ptrtoint i8* %call13 to i64
  %13 = bitcast %"class.std::unique_ptr"* %m_ppfChannels to i64*
  %14 = getelementptr inbounds %"class.std::unique_ptr", %"class.std::unique_ptr"* %m_ppfChannels, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load float**, float*** %14, align 8, !tbaa !76
  store i64 %12, i64* %13, align 8, !tbaa !76
  %cmp.i30 = icmp eq float** %15, null
  br i1 %cmp.i30, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i, !prof !143

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i:       ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %16 = bitcast float** %15 to i8*
  tail call void @_ZdaPv(i8* %16) #26
  %.pre34 = load i32, i32* %2, align 8, !tbaa !101
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i, %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %17 = phi i32 [ %10, %_ZNSt6vectorIfSaIfEE6resizeEm.exit ], [ %.pre34, %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i ]
  %cmp31 = icmp eq i32 %17, 0
  br i1 %cmp31, label %cleanup, label %for.body.lr.ph, !prof !144

for.body.lr.ph:                                   ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
  %18 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %19 = zext i32 %17 to i64
  %20 = add nsw i64 %19, -1
  %xtraiter = and i64 %19, 3
  %21 = icmp ult i64 %20, 3
  br i1 %21, label %cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = sub nsw i64 %19, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ %unroll_iter, %for.body.lr.ph.new ], [ %niter.nsub.3, %for.body ]
  %22 = trunc i64 %indvars.iv to i32
  %mul17 = mul i32 %18, %22
  %conv18 = zext i32 %mul17 to i64
  %23 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i29 = getelementptr inbounds float, float* %23, i64 %conv18
  %24 = load float**, float*** %14, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %24, i64 %indvars.iv
  store float* %add.ptr.i29, float** %arrayidx.i, align 8, !tbaa !76
  %indvars.iv.next = or i64 %indvars.iv, 1
  %25 = trunc i64 %indvars.iv.next to i32
  %mul17.1 = mul i32 %18, %25
  %conv18.1 = zext i32 %mul17.1 to i64
  %26 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i29.1 = getelementptr inbounds float, float* %26, i64 %conv18.1
  %27 = load float**, float*** %14, align 8, !tbaa !76
  %arrayidx.i.1 = getelementptr inbounds float*, float** %27, i64 %indvars.iv.next
  store float* %add.ptr.i29.1, float** %arrayidx.i.1, align 8, !tbaa !76
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %28 = trunc i64 %indvars.iv.next.1 to i32
  %mul17.2 = mul i32 %18, %28
  %conv18.2 = zext i32 %mul17.2 to i64
  %29 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i29.2 = getelementptr inbounds float, float* %29, i64 %conv18.2
  %30 = load float**, float*** %14, align 8, !tbaa !76
  %arrayidx.i.2 = getelementptr inbounds float*, float** %30, i64 %indvars.iv.next.1
  store float* %add.ptr.i29.2, float** %arrayidx.i.2, align 8, !tbaa !76
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %31 = trunc i64 %indvars.iv.next.2 to i32
  %mul17.3 = mul i32 %18, %31
  %conv18.3 = zext i32 %mul17.3 to i64
  %32 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i29.3 = getelementptr inbounds float, float* %32, i64 %conv18.3
  %33 = load float**, float*** %14, align 8, !tbaa !76
  %arrayidx.i.3 = getelementptr inbounds float*, float** %33, i64 %indvars.iv.next.2
  store float* %add.ptr.i29.3, float** %arrayidx.i.3, align 8, !tbaa !76
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %cleanup.loopexit.unr-lcssa, label %for.body, !prof !144

cleanup.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.body.epil, %cleanup.loopexit.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %cleanup.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body.epil ], [ %xtraiter, %cleanup.loopexit.unr-lcssa ]
  %34 = trunc i64 %indvars.iv.epil to i32
  %mul17.epil = mul i32 %18, %34
  %conv18.epil = zext i32 %mul17.epil to i64
  %35 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i29.epil = getelementptr inbounds float, float* %35, i64 %conv18.epil
  %36 = load float**, float*** %14, align 8, !tbaa !76
  %arrayidx.i.epil = getelementptr inbounds float*, float** %36, i64 %indvars.iv.epil
  store float* %add.ptr.i29.epil, float** %arrayidx.i.epil, align 8, !tbaa !76
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %cleanup, label %for.body.epil, !llvm.loop !145

cleanup:                                          ; preds = %for.body.epil, %cleanup.loopexit.unr-lcssa, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EE5resetEPS0_.exit
  ret i1 true
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #13

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat5ResetEv(%class.CBFormat* nocapture readonly %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !103 {
entry:
  %_M_start.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !116
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %2 = load i32, i32* %m_nDataLength, align 4, !tbaa !141
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN8CBFormat7RefreshEv(%class.CBFormat* nocapture %this) unnamed_addr #8 align 2 !prof !146 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat12InsertStreamEPfjj(%class.CBFormat* nocapture readonly %this, float* nocapture readonly %pfData, i32 %nChannel, i32 %nSamples) local_unnamed_addr #7 align 2 !prof !103 {
entry:
  %conv = zext i32 %nChannel to i64
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 %conv
  %1 = bitcast float** %arrayidx.i to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !76
  %3 = bitcast float* %pfData to i8*
  %conv2 = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormat13ExtractStreamEPfjj(%class.CBFormat* nocapture readonly %this, float* nocapture %pfData, i32 %nChannel, i32 %nSamples) local_unnamed_addr #7 align 2 !prof !103 {
entry:
  %0 = bitcast float* %pfData to i8*
  %conv = zext i32 %nChannel to i64
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %1, i64 %conv
  %2 = bitcast float** %arrayidx.i to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !76
  %conv2 = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN8CBFormataSERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !103 {
entry:
  %_M_start.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !116
  %_M_start.i4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 3, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i4 to i8**
  %3 = load i8*, i8** %2, align 8, !tbaa !116
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %4 = load i32, i32* %m_nDataLength, align 4, !tbaa !141
  %conv = zext i32 %4 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 %3, i64 %mul, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN8CBFormateqERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !tbaa !100, !range !104
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !100, !range !104
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !97
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !tbaa !97
  %cmp6 = icmp eq i32 %5, %7
  br i1 %cmp6, label %land.lhs.true7, label %if.else

land.lhs.true7:                                   ; preds = %land.lhs.true
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %8 = load i32, i32* %m_nDataLength, align 4, !tbaa !141
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 2
  %9 = load i32, i32* %m_nDataLength8, align 4, !tbaa !141
  %cmp9 = icmp eq i32 %8, %9
  br i1 %cmp9, label %return, label %if.else

if.else:                                          ; preds = %land.lhs.true7, %land.lhs.true, %entry
  br label %return

return:                                           ; preds = %if.else, %land.lhs.true7
  %retval.0 = phi i1 [ false, %if.else ], [ true, %land.lhs.true7 ]
  ret i1 %retval.0
}

; Function Attrs: norecurse nounwind readonly uwtable
define zeroext i1 @_ZN8CBFormatneERKS_(%class.CBFormat* nocapture readonly %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 2
  %1 = load i8, i8* %0, align 4, !tbaa !100, !range !104
  %2 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !100, !range !104
  %cmp = icmp eq i8 %1, %3
  br i1 %cmp, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %entry
  %4 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8, !tbaa !97
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8, !tbaa !97
  %cmp6 = icmp eq i32 %5, %7
  br i1 %cmp6, label %lor.lhs.false7, label %return

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %m_nDataLength = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 2
  %8 = load i32, i32* %m_nDataLength, align 4, !tbaa !141
  %m_nDataLength8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 2
  %9 = load i32, i32* %m_nDataLength8, align 4, !tbaa !141
  %cmp9 = icmp ne i32 %8, %9
  ret i1 %cmp9

return:                                           ; preds = %lor.lhs.false, %entry
  ret i1 true
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i21, align 8, !tbaa !76
  %5 = zext i32 %2 to i64
  %6 = add nsw i64 %5, -1
  %xtraiter = and i64 %5, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %5, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %8 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %9 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !76
  br i1 %7, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %arrayidx9.us = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %11 = load float, float* %arrayidx9.us, align 4, !tbaa !83
  %add.us = fadd float %10, %11
  store float %add.us, float* %arrayidx9.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %12 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %arrayidx9.us.1 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next
  %13 = load float, float* %arrayidx9.us.1, align 4, !tbaa !83
  %add.us.1 = fadd float %12, %13
  store float %add.us.1, float* %arrayidx9.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  %14 = load float, float* %arrayidx.us.2, align 4, !tbaa !83
  %arrayidx9.us.2 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.1
  %15 = load float, float* %arrayidx9.us.2, align 4, !tbaa !83
  %add.us.2 = fadd float %14, %15
  store float %add.us.2, float* %arrayidx9.us.2, align 4, !tbaa !83
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  %16 = load float, float* %arrayidx.us.3, align 4, !tbaa !83
  %arrayidx9.us.3 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.2
  %17 = load float, float* %arrayidx9.us.3, align 4, !tbaa !83
  %add.us.3 = fadd float %16, %17
  store float %add.us.3, float* %arrayidx9.us.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc10_crit_edge.us.unr-lcssa:       ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %arrayidx.us.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.epil
  %18 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %arrayidx9.us.epil = getelementptr inbounds float, float* %9, i64 %indvars.iv.epil
  %19 = load float, float* %arrayidx9.us.epil, align 4, !tbaa !83
  %add.us.epil = fadd float %18, %19
  store float %add.us.epil, float* %arrayidx9.us.epil, align 4, !tbaa !83
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil, !llvm.loop !147

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i21, align 8, !tbaa !76
  %5 = zext i32 %2 to i64
  %6 = add nsw i64 %5, -1
  %xtraiter = and i64 %5, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %5, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %8 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %9 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !76
  br i1 %7, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %arrayidx9.us = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %11 = load float, float* %arrayidx9.us, align 4, !tbaa !83
  %sub.us = fsub float %11, %10
  store float %sub.us, float* %arrayidx9.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %12 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %arrayidx9.us.1 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next
  %13 = load float, float* %arrayidx9.us.1, align 4, !tbaa !83
  %sub.us.1 = fsub float %13, %12
  store float %sub.us.1, float* %arrayidx9.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  %14 = load float, float* %arrayidx.us.2, align 4, !tbaa !83
  %arrayidx9.us.2 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.1
  %15 = load float, float* %arrayidx9.us.2, align 4, !tbaa !83
  %sub.us.2 = fsub float %15, %14
  store float %sub.us.2, float* %arrayidx9.us.2, align 4, !tbaa !83
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  %16 = load float, float* %arrayidx.us.3, align 4, !tbaa !83
  %arrayidx9.us.3 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.2
  %17 = load float, float* %arrayidx9.us.3, align 4, !tbaa !83
  %sub.us.3 = fsub float %17, %16
  store float %sub.us.3, float* %arrayidx9.us.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc10_crit_edge.us.unr-lcssa:       ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %arrayidx.us.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.epil
  %18 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %arrayidx9.us.epil = getelementptr inbounds float, float* %9, i64 %indvars.iv.epil
  %19 = load float, float* %arrayidx9.us.epil, align 4, !tbaa !83
  %sub.us.epil = fsub float %19, %18
  store float %sub.us.epil, float* %arrayidx9.us.epil, align 4, !tbaa !83
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil, !llvm.loop !148

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i21, align 8, !tbaa !76
  %5 = zext i32 %2 to i64
  %6 = add nsw i64 %5, -1
  %xtraiter = and i64 %5, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %5, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %8 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %9 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !76
  br i1 %7, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %arrayidx9.us = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %11 = load float, float* %arrayidx9.us, align 4, !tbaa !83
  %mul.us = fmul float %10, %11
  store float %mul.us, float* %arrayidx9.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %12 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %arrayidx9.us.1 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next
  %13 = load float, float* %arrayidx9.us.1, align 4, !tbaa !83
  %mul.us.1 = fmul float %12, %13
  store float %mul.us.1, float* %arrayidx9.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.1
  %14 = load float, float* %arrayidx.us.2, align 4, !tbaa !83
  %arrayidx9.us.2 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.1
  %15 = load float, float* %arrayidx9.us.2, align 4, !tbaa !83
  %mul.us.2 = fmul float %14, %15
  store float %mul.us.2, float* %arrayidx9.us.2, align 4, !tbaa !83
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next.2
  %16 = load float, float* %arrayidx.us.3, align 4, !tbaa !83
  %arrayidx9.us.3 = getelementptr inbounds float, float* %9, i64 %indvars.iv.next.2
  %17 = load float, float* %arrayidx9.us.3, align 4, !tbaa !83
  %mul.us.3 = fmul float %16, %17
  store float %mul.us.3, float* %arrayidx9.us.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc10_crit_edge.us.unr-lcssa:       ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc10_crit_edge.us.unr-lcssa ]
  %arrayidx.us.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.epil
  %18 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %arrayidx9.us.epil = getelementptr inbounds float, float* %9, i64 %indvars.iv.epil
  %19 = load float, float* %arrayidx9.us.epil, align 4, !tbaa !83
  %mul.us.epil = fmul float %18, %19
  store float %mul.us.epil, float* %arrayidx9.us.epil, align 4, !tbaa !83
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil, !llvm.loop !149

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKS_(%class.CBFormat* readonly returned %this, %class.CBFormat* nocapture readonly dereferenceable(64) %bf) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp25 = icmp eq i32 %1, 0
  br i1 %cmp25, label %for.end12, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %cmp323 = icmp eq i32 %2, 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %bf, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8
  br i1 %cmp323, label %for.end12, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i21 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %4 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i21, align 8, !tbaa !76
  %5 = zext i32 %2 to i64
  %xtraiter = and i64 %5, 1
  %6 = icmp eq i32 %2, 1
  %unroll_iter = sub nsw i64 %5, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv29 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next30, %for.cond2.for.inc10_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %3, i64 %indvars.iv29
  %7 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  %arrayidx.i22.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv29
  %8 = load float*, float** %arrayidx.i22.us, align 8, !tbaa !76
  br i1 %6, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.1, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %arrayidx9.us = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %10 = load float, float* %arrayidx9.us, align 4, !tbaa !83
  %div.us = fdiv float %10, %9
  store float %div.us, float* %arrayidx9.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %11 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %arrayidx9.us.1 = getelementptr inbounds float, float* %8, i64 %indvars.iv.next
  %12 = load float, float* %arrayidx9.us.1, align 4, !tbaa !83
  %div.us.1 = fdiv float %12, %11
  store float %div.us.1, float* %arrayidx9.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond2.for.inc10_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc10_crit_edge.us.unr-lcssa:       ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.1, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc10_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %arrayidx.us.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.unr
  %13 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %arrayidx9.us.epil = getelementptr inbounds float, float* %8, i64 %indvars.iv.unr
  %14 = load float, float* %arrayidx9.us.epil, align 4, !tbaa !83
  %div.us.epil = fdiv float %14, %13
  store float %div.us.epil, float* %arrayidx9.us.epil, align 4, !tbaa !83
  br label %for.cond2.for.inc10_crit_edge.us

for.cond2.for.inc10_crit_edge.us:                 ; preds = %for.body4.us.epil, %for.cond2.for.inc10_crit_edge.us.unr-lcssa
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %cmp.us = icmp ult i64 %indvars.iv.next30, %4
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end12

for.end12:                                        ; preds = %for.cond2.for.inc10_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %4 = zext i32 %2 to i64
  %5 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %6 = icmp ult i64 %5, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %7 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  br i1 %6, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %8 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %add.us = fadd float %8, %9
  store float %add.us, float* %arrayidx.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %10 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %11 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %add.us.1 = fadd float %10, %11
  store float %add.us.1, float* %arrayidx.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %12 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %13 = load float, float* %arrayidx.us.2, align 4, !tbaa !83
  %add.us.2 = fadd float %12, %13
  store float %add.us.2, float* %arrayidx.us.2, align 4, !tbaa !83
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %14 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %15 = load float, float* %arrayidx.us.3, align 4, !tbaa !83
  %add.us.3 = fadd float %14, %15
  store float %add.us.3, float* %arrayidx.us.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc5_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %16 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.epil
  %17 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %add.us.epil = fadd float %16, %17
  store float %add.us.epil, float* %arrayidx.us.epil, align 4, !tbaa !83
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil, !llvm.loop !150

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmIERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %4 = zext i32 %2 to i64
  %5 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %6 = icmp ult i64 %5, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %7 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  br i1 %6, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %8 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %sub.us = fsub float %9, %8
  store float %sub.us, float* %arrayidx.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %10 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %11 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %sub.us.1 = fsub float %11, %10
  store float %sub.us.1, float* %arrayidx.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %12 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %13 = load float, float* %arrayidx.us.2, align 4, !tbaa !83
  %sub.us.2 = fsub float %13, %12
  store float %sub.us.2, float* %arrayidx.us.2, align 4, !tbaa !83
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %14 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %15 = load float, float* %arrayidx.us.3, align 4, !tbaa !83
  %sub.us.3 = fsub float %15, %14
  store float %sub.us.3, float* %arrayidx.us.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc5_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %16 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.epil
  %17 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %sub.us.epil = fsub float %17, %16
  store float %sub.us.epil, float* %arrayidx.us.epil, align 4, !tbaa !83
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil, !llvm.loop !151

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatmLERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %4 = zext i32 %2 to i64
  %5 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %6 = icmp ult i64 %5, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %7 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  br i1 %6, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %8 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %9 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %mul.us = fmul float %8, %9
  store float %mul.us, float* %arrayidx.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %10 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %11 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %mul.us.1 = fmul float %10, %11
  store float %mul.us.1, float* %arrayidx.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %12 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %13 = load float, float* %arrayidx.us.2, align 4, !tbaa !83
  %mul.us.2 = fmul float %12, %13
  store float %mul.us.2, float* %arrayidx.us.2, align 4, !tbaa !83
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %14 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %15 = load float, float* %arrayidx.us.3, align 4, !tbaa !83
  %mul.us.3 = fmul float %14, %15
  store float %mul.us.3, float* %arrayidx.us.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc5_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc5_crit_edge.us.unr-lcssa ]
  %16 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv.epil
  %17 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %mul.us.epil = fmul float %16, %17
  store float %mul.us.epil, float* %arrayidx.us.epil, align 4, !tbaa !83
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil, !llvm.loop !152

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nofree norecurse nounwind uwtable
define dereferenceable(64) %class.CBFormat* @_ZN8CBFormatdVERKf(%class.CBFormat* readonly returned %this, float* nocapture readonly dereferenceable(4) %fValue) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %for.end7, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_nSamples = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 1
  %2 = load i32, i32* %m_nSamples, align 8, !tbaa !137
  %cmp314 = icmp eq i32 %2, 0
  br i1 %cmp314, label %for.end7, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = zext i32 %1 to i64
  %.pre = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %4 = zext i32 %2 to i64
  %xtraiter = and i64 %4, 1
  %5 = icmp eq i32 %2, 1
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv20 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next21, %for.cond2.for.inc5_crit_edge.us ]
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre, i64 %indvars.iv20
  %6 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  br i1 %5, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.1, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %7 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %8 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %div.us = fdiv float %8, %7
  store float %div.us, float* %arrayidx.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %9 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.1 = getelementptr inbounds float, float* %6, i64 %indvars.iv.next
  %10 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %div.us.1 = fdiv float %10, %9
  store float %div.us.1, float* %arrayidx.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %for.cond2.for.inc5_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc5_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.1, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc5_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %11 = load float, float* %fValue, align 4, !tbaa !83
  %arrayidx.us.epil = getelementptr inbounds float, float* %6, i64 %indvars.iv.unr
  %12 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %div.us.epil = fdiv float %12, %11
  store float %div.us.epil, float* %arrayidx.us.epil, align 4, !tbaa !83
  br label %for.cond2.for.inc5_crit_edge.us

for.cond2.for.inc5_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc5_crit_edge.us.unr-lcssa
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  %cmp.us = icmp ult i64 %indvars.iv.next21, %3
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end7

for.end7:                                         ; preds = %for.cond2.for.inc5_crit_edge.us, %for.cond2.preheader.lr.ph, %entry
  ret %class.CBFormat* %this
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderC2Ev(%class.CAmbisonicEncoder* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !153 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !100
  %3 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !101
  %4 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !102
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1
  %fDistance.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i, align 8, !tbaa !107
  %m_fGain.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !61 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !116
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i, !prof !154

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !116
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i, !prof !154

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicEncoderD0Ev(%class.CAmbisonicEncoder* %this) unnamed_addr #7 align 2 {
entry:
  tail call void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* %this) #24
  %0 = bitcast %class.CAmbisonicEncoder* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #14

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicEncoder9ConfigureEjbj(%class.CAmbisonicEncoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !155 {
entry:
  %ref.tmp.i = alloca float, align 4
  %ref.tmp5.i = alloca float, align 4
  %frombool.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !97
  %1 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i, i8* %1, align 4, !tbaa !100
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  store i32 %call.i.i, i32* %2, align 8, !tbaa !101
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1
  %conv.i = zext i32 %call.i.i to i64
  %3 = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i, align 4, !tbaa !83
  %_M_finish.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !113
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !116
  %sub.ptr.sub.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i.i.i, %conv.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !prof !117

if.then.i.i:                                      ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i = sub nsw i64 %conv.i, %sub.ptr.div.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i, float* %9, i64 %sub.i.i, float* nonnull dereferenceable(4) %ref.tmp.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.else.i.i:                                      ; preds = %entry
  %cmp8.i.i = icmp ugt i64 %sub.ptr.div.i.i.i, %conv.i
  br i1 %cmp8.i.i, label %if.then9.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.then9.i.i:                                     ; preds = %if.else.i.i
  %add.ptr.i.i = getelementptr inbounds float, float* %8, i64 %conv.i
  store float* %add.ptr.i.i, float** %_M_finish.i.i.i, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i:          ; preds = %if.then9.i.i, %if.else.i.i, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !97
  %add.i = add i32 %10, 1
  %conv4.i = zext i32 %add.i to i64
  %11 = bitcast float* %ref.tmp5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i, align 4, !tbaa !83
  %_M_finish.i.i6.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !113
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !116
  %sub.ptr.sub.i.i7.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i = ashr exact i64 %sub.ptr.sub.i.i7.i, 2
  %cmp.i9.i = icmp ult i64 %sub.ptr.div.i.i8.i, %conv4.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i, label %if.then.i11.i, label %if.else.i13.i, !prof !117

if.then.i11.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i = sub nsw i64 %conv4.i, %sub.ptr.div.i.i8.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i, float* %17, i64 %sub.i10.i, float* nonnull dereferenceable(4) %ref.tmp5.i)
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.else.i13.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %cmp8.i12.i = icmp ugt i64 %sub.ptr.div.i.i8.i, %conv4.i
  br i1 %cmp8.i12.i, label %if.then9.i15.i, label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.then9.i15.i:                                   ; preds = %if.else.i13.i
  %add.ptr.i14.i = getelementptr inbounds float, float* %16, i64 %conv4.i
  store float* %add.ptr.i14.i, float** %_M_finish.i.i6.i, align 8, !tbaa !113
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

_ZN16CAmbisonicSource9ConfigureEjbj.exit:         ; preds = %if.then9.i15.i, %if.else.i13.i, %if.then.i11.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN17CAmbisonicEncoder7RefreshEv(%class.CAmbisonicEncoder* readonly %this) unnamed_addr #9 align 2 !prof !156 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN17CAmbisonicEncoder7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoder* nocapture readonly %this, float* nocapture readonly %pfSrc, i32 %nSamples, %class.CBFormat* nocapture readonly %pfDst) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp22 = icmp eq i32 %1, 0
  %cmp320 = icmp eq i32 %nSamples, 0
  %or.cond = or i1 %cmp22, %cmp320
  br i1 %or.cond, label %for.end11, label %for.cond2.preheader.us.preheader

for.cond2.preheader.us.preheader:                 ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pfDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %2 = zext i32 %1 to i64
  %.pre = load float*, float** %_M_start.i, align 8, !tbaa !116
  %.pre28 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %wide.trip.count = zext i32 %nSamples to i64
  %3 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 3
  %4 = icmp ult i64 %3, 3
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.for.inc9_crit_edge.us, %for.cond2.preheader.us.preheader
  %indvars.iv26 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next27, %for.cond2.for.inc9_crit_edge.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %.pre, i64 %indvars.iv26
  %arrayidx.i.us = getelementptr inbounds float*, float** %.pre28, i64 %indvars.iv26
  %5 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  br i1 %4, label %for.cond2.for.inc9_crit_edge.us.unr-lcssa, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ 0, %for.cond2.preheader.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body4.us ], [ %unroll_iter, %for.cond2.preheader.us ]
  %arrayidx.us = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv
  %6 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %7 = load float, float* %add.ptr.i.us, align 4, !tbaa !83
  %mul.us = fmul float %6, %7
  %arrayidx8.us = getelementptr inbounds float, float* %5, i64 %indvars.iv
  store float %mul.us, float* %arrayidx8.us, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.us.1 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next
  %8 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %9 = load float, float* %add.ptr.i.us, align 4, !tbaa !83
  %mul.us.1 = fmul float %8, %9
  %arrayidx8.us.1 = getelementptr inbounds float, float* %5, i64 %indvars.iv.next
  store float %mul.us.1, float* %arrayidx8.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.us.2 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next.1
  %10 = load float, float* %arrayidx.us.2, align 4, !tbaa !83
  %11 = load float, float* %add.ptr.i.us, align 4, !tbaa !83
  %mul.us.2 = fmul float %10, %11
  %arrayidx8.us.2 = getelementptr inbounds float, float* %5, i64 %indvars.iv.next.1
  store float %mul.us.2, float* %arrayidx8.us.2, align 4, !tbaa !83
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.us.3 = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.next.2
  %12 = load float, float* %arrayidx.us.3, align 4, !tbaa !83
  %13 = load float, float* %add.ptr.i.us, align 4, !tbaa !83
  %mul.us.3 = fmul float %12, %13
  %arrayidx8.us.3 = getelementptr inbounds float, float* %5, i64 %indvars.iv.next.2
  store float %mul.us.3, float* %arrayidx8.us.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond2.for.inc9_crit_edge.us.unr-lcssa, label %for.body4.us

for.cond2.for.inc9_crit_edge.us.unr-lcssa:        ; preds = %for.body4.us, %for.cond2.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body4.us ]
  br i1 %lcmp.mod, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us.epil

for.body4.us.epil:                                ; preds = %for.body4.us.epil, %for.cond2.for.inc9_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body4.us.epil ], [ %indvars.iv.unr, %for.cond2.for.inc9_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body4.us.epil ], [ %xtraiter, %for.cond2.for.inc9_crit_edge.us.unr-lcssa ]
  %arrayidx.us.epil = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv.epil
  %14 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %15 = load float, float* %add.ptr.i.us, align 4, !tbaa !83
  %mul.us.epil = fmul float %14, %15
  %arrayidx8.us.epil = getelementptr inbounds float, float* %5, i64 %indvars.iv.epil
  store float %mul.us.epil, float* %arrayidx8.us.epil, align 4, !tbaa !83
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond2.for.inc9_crit_edge.us, label %for.body4.us.epil, !llvm.loop !157

for.cond2.for.inc9_crit_edge.us:                  ; preds = %for.body4.us.epil, %for.cond2.for.inc9_crit_edge.us.unr-lcssa
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %cmp.us = icmp ult i64 %indvars.iv.next27, %2
  br i1 %cmp.us, label %for.cond2.preheader.us, label %for.end11

for.end11:                                        ; preds = %for.cond2.for.inc9_crit_edge.us, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN21CAmbisonicEncoderDistC2Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !146 {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %1 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %2 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 0, i32* %2, align 8, !tbaa !101
  %3 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 5
  store i8 0, i8* %3, align 4, !tbaa !102
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %4 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !107
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !111
  %5 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !68
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %6 = bitcast i32* %m_nSampleRate to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 36, i1 false)
  store float 5.000000e+00, float* %m_fRoomRadius, align 4, !tbaa !158
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  store float 0.000000e+00, float* %m_fInteriorGain, align 8, !tbaa !160
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  store float 0.000000e+00, float* %m_fExteriorGain, align 4, !tbaa !161
  %7 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0
  store i32 1, i32* %0, align 8, !tbaa !97
  store i8 1, i8* %1, align 4, !tbaa !100
  %call.i.i.i6 = invoke i32 @_Z17OrderToComponentsjb(i32 1, i1 zeroext true)
          to label %call.i.i.i.noexc unwind label %lpad

call.i.i.i.noexc:                                 ; preds = %entry
  store i32 %call.i.i.i6, i32* %2, align 8, !tbaa !101
  %conv.i.i = zext i32 %call.i.i.i6 to i64
  %8 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !83
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %9 = bitcast float** %_M_finish.i.i.i.i to i64*
  %10 = load i64, i64* %9, align 8, !tbaa !113
  %11 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !116
  %sub.ptr.sub.i.i.i.i = sub i64 %10, %12
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %13 = inttoptr i64 %12 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i, !prof !117

if.then.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %14 = inttoptr i64 %10 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %14, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
          to label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i unwind label %lpad

if.else.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %cmp8.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp8.i.i.i, label %if.then9.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then9.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %13, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then9.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %0, align 8, !tbaa !97
  %add.i.i = add i32 %15, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %16 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !83
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %17 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %18 = load i64, i64* %17, align 8, !tbaa !113
  %19 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !116
  %sub.ptr.sub.i.i7.i.i = sub i64 %18, %20
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %21 = inttoptr i64 %20 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i, !prof !117

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %22 = inttoptr i64 %18 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %22, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
          to label %call.i.noexc unwind label %lpad

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp8.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp8.i12.i.i, label %if.then9.i15.i.i, label %call.i.noexc

if.then9.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %21, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !113
  br label %call.i.noexc

call.i.noexc:                                     ; preds = %if.then9.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #24
  store i32 44100, i32* %m_nSampleRate, align 8, !tbaa !162
  %m_nDelayBufferLength.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  store i32 19230, i32* %m_nDelayBufferLength.i, align 4, !tbaa !163
  %m_pfDelayBuffer.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %23 = load float*, float** %m_pfDelayBuffer.i, align 8, !tbaa !164
  %tobool6.i = icmp eq float* %23, null
  br i1 %tobool6.i, label %if.end9.i, label %delete.notnull.i, !prof !165

delete.notnull.i:                                 ; preds = %call.i.noexc
  %24 = bitcast float* %23 to i8*
  call void @_ZdaPv(i8* %24) #26
  %.pre = load i32, i32* %m_nDelayBufferLength.i, align 4, !tbaa !163
  %phitmp = zext i32 %.pre to i64
  %phitmp8 = shl nuw nsw i64 %phitmp, 2
  br label %if.end9.i

if.end9.i:                                        ; preds = %delete.notnull.i, %call.i.noexc
  %25 = phi i64 [ %phitmp8, %delete.notnull.i ], [ 76920, %call.i.noexc ]
  %call12.i4 = invoke i8* @_Znam(i64 %25) #25
          to label %call12.i.noexc unwind label %lpad

call12.i.noexc:                                   ; preds = %if.end9.i
  %26 = bitcast float** %m_pfDelayBuffer.i to i8**
  store i8* %call12.i4, i8** %26, align 8, !tbaa !164
  %27 = bitcast %class.CAmbisonicEncoderDist* %this to void (%class.CAmbisonicEncoderDist*)***
  %vtable.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %27, align 8, !tbaa !68
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable.i, i64 3
  %28 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn.i, align 8
  invoke void %28(%class.CAmbisonicEncoderDist* nonnull %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %call12.i.noexc
  ret void

lpad:                                             ; preds = %call12.i.noexc, %if.end9.i, %if.then.i11.i.i, %if.then.i.i.i, %entry
  %29 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* %7) #24
  resume { i8*, i32 } %29
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistD2Ev(%class.CAmbisonicEncoderDist* nocapture %this) unnamed_addr #7 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV21CAmbisonicEncoderDist, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %1 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !164
  %tobool = icmp eq float* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  %3 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0
  tail call void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* %3) #24
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDistD0Ev(%class.CAmbisonicEncoderDist* %this) unnamed_addr #7 align 2 {
entry:
  tail call void @_ZN21CAmbisonicEncoderDistD2Ev(%class.CAmbisonicEncoderDist* %this) #24
  %0 = bitcast %class.CAmbisonicEncoderDist* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN21CAmbisonicEncoderDist9ConfigureEjbj(%class.CAmbisonicEncoderDist* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !166 {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %frombool.i.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !97
  %1 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i.i, i8* %1, align 4, !tbaa !100
  %call.i.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  store i32 %call.i.i.i, i32* %2, align 8, !tbaa !101
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1
  %conv.i.i = zext i32 %call.i.i.i to i64
  %3 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !83
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !113
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !116
  %sub.ptr.sub.i.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i, !prof !117

if.then.i.i.i:                                    ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %9, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.else.i.i.i:                                    ; preds = %entry
  %cmp8.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp8.i.i.i, label %if.then9.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then9.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %8, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then9.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !97
  %add.i.i = add i32 %10, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %11 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !83
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !113
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !116
  %sub.ptr.sub.i.i7.i.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i, !prof !117

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %17, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
  br label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp8.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp8.i12.i.i, label %if.then9.i15.i.i, label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

if.then9.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %16, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !113
  br label %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit

_ZN17CAmbisonicEncoder9ConfigureEjbj.exit:        ; preds = %if.then9.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  store i32 %nSampleRate, i32* %m_nSampleRate, align 8, !tbaa !162
  %conv = uitofp i32 %nSampleRate to float
  %mul = fmul float %conv, 0x3FDBE82FA0000000
  %add = fadd float %mul, 5.000000e-01
  %conv5 = fptoui float %add to i32
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  store i32 %conv5, i32* %m_nDelayBufferLength, align 4, !tbaa !163
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %18 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !164
  %tobool6 = icmp eq float* %18, null
  br i1 %tobool6, label %if.end9, label %delete.notnull, !prof !165

delete.notnull:                                   ; preds = %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
  %19 = bitcast float* %18 to i8*
  call void @_ZdaPv(i8* %19) #26
  %.pre = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !163
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull, %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit
  %20 = phi i32 [ %conv5, %_ZN17CAmbisonicEncoder9ConfigureEjbj.exit ], [ %.pre, %delete.notnull ]
  %conv11 = zext i32 %20 to i64
  %21 = shl nuw nsw i64 %conv11, 2
  %call12 = call i8* @_Znam(i64 %21) #25
  %22 = bitcast float** %m_pfDelayBuffer to i8**
  store i8* %call12, i8** %22, align 8, !tbaa !164
  %23 = bitcast %class.CAmbisonicEncoderDist* %this to void (%class.CAmbisonicEncoderDist*)***
  %vtable = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %23, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable, i64 3
  %24 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn, align 8
  call void %24(%class.CAmbisonicEncoderDist* nonnull %this)
  ret i1 true
}

; Function Attrs: nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist5ResetEv(%class.CAmbisonicEncoderDist* nocapture %this) unnamed_addr #7 align 2 !prof !166 {
entry:
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %0 = bitcast float** %m_pfDelayBuffer to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !164
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %2 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !163
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %fDistance = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %3 = load float, float* %fDistance, align 8, !tbaa !107
  %div = fdiv float %3, 3.440000e+02
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %4 = load i32, i32* %m_nSampleRate, align 8, !tbaa !162
  %conv2 = uitofp i32 %4 to float
  %mul3 = fmul float %div, %conv2
  %add = fadd float %mul3, 5.000000e-01
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %conv5 = fptosi float %add to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 3
  store i32 %conv5, i32* %m_nDelay, align 8, !tbaa !167
  %conv7 = sitofp i32 %conv5 to float
  %sub = fsub float %add, %conv7
  store float %sub, float* %m_fDelay, align 4, !tbaa !168
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  store i32 0, i32* %m_nIn, align 8, !tbaa !169
  %5 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !163
  %add13 = sub i32 %5, %conv5
  %rem = urem i32 %add13, %5
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4, !tbaa !170
  %add16 = add nuw nsw i32 %rem, 1
  %rem18 = urem i32 %add16, %5
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  store i32 %rem18, i32* %m_nOutB, align 8, !tbaa !171
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist7RefreshEv(%class.CAmbisonicEncoderDist* %this) unnamed_addr #9 align 2 !prof !172 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0) #24
  %fDistance = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 3, i32 2
  %1 = load float, float* %fDistance, align 8, !tbaa !107
  %2 = tail call float @llvm.fabs.f32(float %1)
  %3 = fpext float %2 to double
  %div = fdiv double %3, 3.440000e+02
  %m_nSampleRate = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 1
  %4 = load i32, i32* %m_nSampleRate, align 8, !tbaa !162
  %conv2 = uitofp i32 %4 to double
  %mul = fmul double %div, %conv2
  %conv3 = fptrunc double %mul to float
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %conv5 = fptosi float %conv3 to i32
  %m_nDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 3
  store i32 %conv5, i32* %m_nDelay, align 8, !tbaa !167
  %conv7 = sitofp i32 %conv5 to float
  %sub = fsub float %conv3, %conv7
  store float %sub, float* %m_fDelay, align 4, !tbaa !168
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  %5 = load i32, i32* %m_nIn, align 8, !tbaa !169
  %sub10 = sub i32 %5, %conv5
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !163
  %add = add i32 %sub10, %6
  %rem = urem i32 %add, %6
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  store i32 %rem, i32* %m_nOutA, align 4, !tbaa !170
  %add13 = add nuw nsw i32 %rem, 1
  %rem15 = urem i32 %add13, %6
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  store i32 %rem15, i32* %m_nOutB, align 8, !tbaa !171
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %7 = load float, float* %m_fRoomRadius, align 4, !tbaa !158
  %conv19 = fpext float %7 to double
  %cmp = fcmp ult float %2, %7
  br i1 %cmp, label %if.else, label %if.then, !prof !173

if.then:                                          ; preds = %entry
  %div25 = fdiv double %conv19, %3
  %div26 = fmul double %div25, 5.000000e-01
  %conv27 = fptrunc double %div26 to float
  br label %if.end

if.else:                                          ; preds = %entry
  %div34 = fdiv double %3, %conv19
  %sub35 = fsub double 2.000000e+00, %div34
  %div36 = fmul double %sub35, 5.000000e-01
  %conv37 = fptrunc double %div36 to float
  %div45 = fmul double %div34, 5.000000e-01
  %conv46 = fptrunc double %div45 to float
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %conv27.sink48 = phi float [ %conv37, %if.else ], [ %conv27, %if.then ]
  %conv27.sink = phi float [ %conv46, %if.else ], [ %conv27, %if.then ]
  %8 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  store float %conv27.sink48, float* %8, align 8
  %9 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  store float %conv27.sink, float* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* nocapture %this, float* nocapture readonly %pfSrc, i32 %nSamples, %class.CBFormat* nocapture readonly %pfDst) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %cmp62 = icmp eq i32 %nSamples, 0
  br i1 %cmp62, label %for.end44, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pfDelayBuffer = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 5
  %0 = load float*, float** %m_pfDelayBuffer, align 8, !tbaa !164
  %m_nIn = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 6
  %m_nOutA = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 7
  %m_fDelay = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 2
  %m_nOutB = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 8
  %m_fInteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 10
  %_M_start.i = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %_M_head_impl.i.i.i.i.i.i59 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pfDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %2 = load float**, float*** %_M_head_impl.i.i.i.i.i.i59, align 8, !tbaa !76
  %3 = load float*, float** %2, align 8, !tbaa !76
  %m_fExteriorGain = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 11
  %4 = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 0, i32 0, i32 0, i32 4
  %5 = load i32, i32* %4, align 8, !tbaa !101
  %cmp1960 = icmp ugt i32 %5, 1
  %m_nDelayBufferLength = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 4
  %6 = load i32, i32* %m_nDelayBufferLength, align 4, !tbaa !163
  %m_nIn.promoted = load i32, i32* %m_nIn, align 8, !tbaa !169
  %m_nOutA.promoted = load i32, i32* %m_nOutA, align 4, !tbaa !170
  %m_nOutB.promoted = load i32, i32* %m_nOutB, align 8, !tbaa !171
  %wide.trip.count = zext i32 %nSamples to i64
  br i1 %cmp1960, label %for.body.us.preheader, label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %7 = zext i32 %5 to i64
  %8 = add nsw i64 %7, -1
  %9 = add nsw i64 %7, -2
  %xtraiter = and i64 %8, 3
  %10 = icmp ult i64 %9, 3
  %unroll_iter = sub nsw i64 %8, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.body.us

for.body.us:                                      ; preds = %for.cond18.for.end_crit_edge.us, %for.body.us.preheader
  %indvars.iv71 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next72, %for.cond18.for.end_crit_edge.us ]
  %rem4066.us = phi i32 [ %m_nOutB.promoted, %for.body.us.preheader ], [ %rem40.us, %for.cond18.for.end_crit_edge.us ]
  %rem3565.us = phi i32 [ %m_nOutA.promoted, %for.body.us.preheader ], [ %rem35.us, %for.cond18.for.end_crit_edge.us ]
  %rem64.us = phi i32 [ %m_nIn.promoted, %for.body.us.preheader ], [ %rem.us, %for.cond18.for.end_crit_edge.us ]
  %arrayidx.us = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv71
  %11 = bitcast float* %arrayidx.us to i32*
  %12 = load i32, i32* %11, align 4, !tbaa !83
  %idxprom2.us = sext i32 %rem64.us to i64
  %arrayidx3.us = getelementptr inbounds float, float* %0, i64 %idxprom2.us
  %13 = bitcast float* %arrayidx3.us to i32*
  store i32 %12, i32* %13, align 4, !tbaa !83
  %idxprom5.us = sext i32 %rem3565.us to i64
  %arrayidx6.us = getelementptr inbounds float, float* %0, i64 %idxprom5.us
  %14 = load float, float* %arrayidx6.us, align 4, !tbaa !83
  %15 = load float, float* %m_fDelay, align 4, !tbaa !168
  %sub.us = fsub float 1.000000e+00, %15
  %mul.us = fmul float %14, %sub.us
  %idxprom8.us = sext i32 %rem4066.us to i64
  %arrayidx9.us = getelementptr inbounds float, float* %0, i64 %idxprom8.us
  %16 = load float, float* %arrayidx9.us, align 4, !tbaa !83
  %mul11.us = fmul float %15, %16
  %add.us = fadd float %mul.us, %mul11.us
  %17 = load float, float* %m_fInteriorGain, align 8, !tbaa !160
  %mul12.us = fmul float %17, %add.us
  %18 = load float, float* %1, align 4, !tbaa !83
  %mul13.us = fmul float %mul12.us, %18
  %arrayidx16.us = getelementptr inbounds float, float* %3, i64 %indvars.iv71
  store float %mul13.us, float* %arrayidx16.us, align 4, !tbaa !83
  %19 = load float, float* %m_fExteriorGain, align 4, !tbaa !161
  %mul17.us = fmul float %add.us, %19
  br i1 %10, label %for.cond18.for.end_crit_edge.us.unr-lcssa, label %for.body20.us

for.body20.us:                                    ; preds = %for.body20.us, %for.body.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body20.us ], [ 1, %for.body.us ]
  %niter = phi i64 [ %niter.nsub.3, %for.body20.us ], [ %unroll_iter, %for.body.us ]
  %add.ptr.i.us = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %20 = load float, float* %add.ptr.i.us, align 4, !tbaa !83
  %mul23.us = fmul float %mul17.us, %20
  %arrayidx.i.us = getelementptr inbounds float*, float** %2, i64 %indvars.iv
  %21 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  %arrayidx28.us = getelementptr inbounds float, float* %21, i64 %indvars.iv71
  store float %mul23.us, float* %arrayidx28.us, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add.ptr.i.us.1 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next
  %22 = load float, float* %add.ptr.i.us.1, align 4, !tbaa !83
  %mul23.us.1 = fmul float %mul17.us, %22
  %arrayidx.i.us.1 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next
  %23 = load float*, float** %arrayidx.i.us.1, align 8, !tbaa !76
  %arrayidx28.us.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv71
  store float %mul23.us.1, float* %arrayidx28.us.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %add.ptr.i.us.2 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next.1
  %24 = load float, float* %add.ptr.i.us.2, align 4, !tbaa !83
  %mul23.us.2 = fmul float %mul17.us, %24
  %arrayidx.i.us.2 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next.1
  %25 = load float*, float** %arrayidx.i.us.2, align 8, !tbaa !76
  %arrayidx28.us.2 = getelementptr inbounds float, float* %25, i64 %indvars.iv71
  store float %mul23.us.2, float* %arrayidx28.us.2, align 4, !tbaa !83
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %add.ptr.i.us.3 = getelementptr inbounds float, float* %1, i64 %indvars.iv.next.2
  %26 = load float, float* %add.ptr.i.us.3, align 4, !tbaa !83
  %mul23.us.3 = fmul float %mul17.us, %26
  %arrayidx.i.us.3 = getelementptr inbounds float*, float** %2, i64 %indvars.iv.next.2
  %27 = load float*, float** %arrayidx.i.us.3, align 8, !tbaa !76
  %arrayidx28.us.3 = getelementptr inbounds float, float* %27, i64 %indvars.iv71
  store float %mul23.us.3, float* %arrayidx28.us.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.cond18.for.end_crit_edge.us.unr-lcssa, label %for.body20.us

for.cond18.for.end_crit_edge.us.unr-lcssa:        ; preds = %for.body20.us, %for.body.us
  %indvars.iv.unr = phi i64 [ 1, %for.body.us ], [ %indvars.iv.next.3, %for.body20.us ]
  br i1 %lcmp.mod, label %for.cond18.for.end_crit_edge.us, label %for.body20.us.epil

for.body20.us.epil:                               ; preds = %for.body20.us.epil, %for.cond18.for.end_crit_edge.us.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body20.us.epil ], [ %indvars.iv.unr, %for.cond18.for.end_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body20.us.epil ], [ %xtraiter, %for.cond18.for.end_crit_edge.us.unr-lcssa ]
  %add.ptr.i.us.epil = getelementptr inbounds float, float* %1, i64 %indvars.iv.epil
  %28 = load float, float* %add.ptr.i.us.epil, align 4, !tbaa !83
  %mul23.us.epil = fmul float %mul17.us, %28
  %arrayidx.i.us.epil = getelementptr inbounds float*, float** %2, i64 %indvars.iv.epil
  %29 = load float*, float** %arrayidx.i.us.epil, align 8, !tbaa !76
  %arrayidx28.us.epil = getelementptr inbounds float, float* %29, i64 %indvars.iv71
  store float %mul23.us.epil, float* %arrayidx28.us.epil, align 4, !tbaa !83
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond18.for.end_crit_edge.us, label %for.body20.us.epil, !llvm.loop !174

for.cond18.for.end_crit_edge.us:                  ; preds = %for.body20.us.epil, %for.cond18.for.end_crit_edge.us.unr-lcssa
  %add30.us = add nsw i32 %rem64.us, 1
  %rem.us = urem i32 %add30.us, %6
  %add33.us = add nsw i32 %rem3565.us, 1
  %rem35.us = urem i32 %add33.us, %6
  %add38.us = add nsw i32 %rem4066.us, 1
  %rem40.us = urem i32 %add38.us, %6
  %indvars.iv.next72 = add nuw nsw i64 %indvars.iv71, 1
  %exitcond = icmp eq i64 %indvars.iv.next72, %wide.trip.count
  br i1 %exitcond, label %for.cond.for.end44_crit_edge, label %for.body.us

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv73 = phi i64 [ %indvars.iv.next74, %for.body ], [ 0, %for.body.lr.ph ]
  %rem4066 = phi i32 [ %rem40, %for.body ], [ %m_nOutB.promoted, %for.body.lr.ph ]
  %rem3565 = phi i32 [ %rem35, %for.body ], [ %m_nOutA.promoted, %for.body.lr.ph ]
  %rem64 = phi i32 [ %rem, %for.body ], [ %m_nIn.promoted, %for.body.lr.ph ]
  %arrayidx = getelementptr inbounds float, float* %pfSrc, i64 %indvars.iv73
  %30 = bitcast float* %arrayidx to i32*
  %31 = load i32, i32* %30, align 4, !tbaa !83
  %idxprom2 = sext i32 %rem64 to i64
  %arrayidx3 = getelementptr inbounds float, float* %0, i64 %idxprom2
  %32 = bitcast float* %arrayidx3 to i32*
  store i32 %31, i32* %32, align 4, !tbaa !83
  %idxprom5 = sext i32 %rem3565 to i64
  %arrayidx6 = getelementptr inbounds float, float* %0, i64 %idxprom5
  %33 = load float, float* %arrayidx6, align 4, !tbaa !83
  %34 = load float, float* %m_fDelay, align 4, !tbaa !168
  %sub = fsub float 1.000000e+00, %34
  %mul = fmul float %33, %sub
  %idxprom8 = sext i32 %rem4066 to i64
  %arrayidx9 = getelementptr inbounds float, float* %0, i64 %idxprom8
  %35 = load float, float* %arrayidx9, align 4, !tbaa !83
  %mul11 = fmul float %34, %35
  %add = fadd float %mul, %mul11
  %36 = load float, float* %m_fInteriorGain, align 8, !tbaa !160
  %mul12 = fmul float %36, %add
  %37 = load float, float* %1, align 4, !tbaa !83
  %mul13 = fmul float %mul12, %37
  %arrayidx16 = getelementptr inbounds float, float* %3, i64 %indvars.iv73
  store float %mul13, float* %arrayidx16, align 4, !tbaa !83
  %add30 = add nsw i32 %rem64, 1
  %rem = urem i32 %add30, %6
  %add33 = add nsw i32 %rem3565, 1
  %rem35 = urem i32 %add33, %6
  %add38 = add nsw i32 %rem4066, 1
  %rem40 = urem i32 %add38, %6
  %indvars.iv.next74 = add nuw nsw i64 %indvars.iv73, 1
  %exitcond76 = icmp eq i64 %indvars.iv.next74, %wide.trip.count
  br i1 %exitcond76, label %for.cond.for.end44_crit_edge, label %for.body

for.cond.for.end44_crit_edge:                     ; preds = %for.body, %for.cond18.for.end_crit_edge.us
  %rem40.lcssa = phi i32 [ %rem40.us, %for.cond18.for.end_crit_edge.us ], [ %rem40, %for.body ]
  %rem35.lcssa = phi i32 [ %rem35.us, %for.cond18.for.end_crit_edge.us ], [ %rem35, %for.body ]
  %rem.lcssa = phi i32 [ %rem.us, %for.cond18.for.end_crit_edge.us ], [ %rem, %for.body ]
  store i32 %rem.lcssa, i32* %m_nIn, align 8, !tbaa !169
  store i32 %rem35.lcssa, i32* %m_nOutA, align 4, !tbaa !170
  store i32 %rem40.lcssa, i32* %m_nOutB, align 8, !tbaa !171
  br label %for.end44

for.end44:                                        ; preds = %for.cond.for.end44_crit_edge, %entry
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN21CAmbisonicEncoderDist13SetRoomRadiusEf(%class.CAmbisonicEncoderDist* nocapture %this, float %fRoomRadius) local_unnamed_addr #5 align 2 !prof !103 {
entry:
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  store float %fRoomRadius, float* %m_fRoomRadius, align 4, !tbaa !158
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN21CAmbisonicEncoderDist13GetRoomRadiusEv(%class.CAmbisonicEncoderDist* nocapture readonly %this) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %m_fRoomRadius = getelementptr inbounds %class.CAmbisonicEncoderDist, %class.CAmbisonicEncoderDist* %this, i64 0, i32 9
  %0 = load float, float* %m_fRoomRadius, align 4, !tbaa !158
  ret float %0
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorC2Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !175 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !100
  %3 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !101
  %4 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  tail call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %m_orientation, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00)
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %5 = bitcast float** %m_pfTempSample to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 40, i1 false)
  %6 = bitcast %struct.kiss_fft_cpx*** %m_ppcpPsychFilters to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN11OrientationC2Efff(%class.Orientation* %this, float %fYaw, float %fPitch, float %fRoll) unnamed_addr #7 comdat align 2 !prof !176 {
entry:
  %fYaw2 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 0
  store float %fYaw, float* %fYaw2, align 4, !tbaa !177
  %fPitch3 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 1
  store float %fPitch, float* %fPitch3, align 4, !tbaa !179
  %fRoll4 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 2
  store float %fRoll, float* %fRoll4, align 4, !tbaa !180
  %call = tail call float @cosf(float %fYaw) #24
  %call5 = tail call float @sinf(float %fYaw) #24
  %call6 = tail call float @cosf(float %fRoll) #24
  %call7 = tail call float @sinf(float %fRoll) #24
  %call8 = tail call float @cosf(float %fPitch) #24
  %call9 = tail call float @sinf(float %fPitch) #24
  %mul = fmul float %call6, %call8
  %cmp = fcmp oeq float %mul, 1.000000e+00
  br i1 %cmp, label %if.then, label %if.else, !prof !181

if.then:                                          ; preds = %entry
  %fBeta = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float 0.000000e+00, float* %fBeta, align 4, !tbaa !182
  %fGamma = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float 0.000000e+00, float* %fGamma, align 4, !tbaa !183
  %conv = fpext float %call5 to double
  %conv10 = fpext float %call to double
  %call11 = tail call double @atan2(double %conv, double %conv10) #24
  %conv12 = fptrunc double %call11 to float
  %fAlpha = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %conv12, float* %fAlpha, align 4, !tbaa !184
  br label %if.end48

if.else:                                          ; preds = %entry
  %cmp13 = fcmp oeq float %mul, -1.000000e+00
  br i1 %cmp13, label %if.then14, label %if.else22, !prof !185

if.then14:                                        ; preds = %if.else
  %fBeta15 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float 0x400921FB60000000, float* %fBeta15, align 4, !tbaa !182
  %fGamma16 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float 0.000000e+00, float* %fGamma16, align 4, !tbaa !183
  %sub = fsub float -0.000000e+00, %call5
  %conv17 = fpext float %sub to double
  %conv18 = fpext float %call to double
  %call19 = tail call double @atan2(double %conv17, double %conv18) #24
  %conv20 = fptrunc double %call19 to float
  %fAlpha21 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %conv20, float* %fAlpha21, align 4, !tbaa !184
  br label %if.end48

if.else22:                                        ; preds = %if.else
  %0 = fmul float %call, %call7
  %mul25 = fmul float %call6, %call9
  %mul26 = fmul float %call5, %mul25
  %add = fsub float %mul26, %0
  %mul27 = fmul float %call, %call6
  %mul28 = fmul float %mul27, %call9
  %mul29 = fmul float %call5, %call7
  %add30 = fadd float %mul29, %mul28
  %conv31 = fpext float %add to double
  %conv32 = fpext float %add30 to double
  %call33 = tail call double @atan2(double %conv31, double %conv32) #24
  %conv34 = fptrunc double %call33 to float
  %fAlpha35 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 3
  store float %conv34, float* %fAlpha35, align 4, !tbaa !184
  %conv36 = fpext float %mul to double
  %call37 = tail call double @acos(double %conv36) #24
  %conv38 = fptrunc double %call37 to float
  %fBeta39 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 4
  store float %conv38, float* %fBeta39, align 4, !tbaa !182
  %mul40 = fmul float %call7, %call8
  %conv42 = fpext float %mul40 to double
  %conv44 = fpext float %call9 to double
  %call45 = tail call double @atan2(double %conv42, double %conv44) #24
  %conv46 = fptrunc double %call45 to float
  %fGamma47 = getelementptr inbounds %class.Orientation, %class.Orientation* %this, i64 0, i32 5
  store float %conv46, float* %fGamma47, align 4, !tbaa !183
  br label %if.end48

if.end48:                                         ; preds = %if.else22, %if.then14, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* nocapture %this) unnamed_addr #7 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19CAmbisonicProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %1 = load float*, float** %m_pfTempSample, align 8, !tbaa !186
  %tobool = icmp eq float* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %3 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !188
  %tobool3 = icmp eq float* %3, null
  br i1 %tobool3, label %if.end9, label %delete.notnull7

delete.notnull7:                                  ; preds = %if.end
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #26
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull7, %if.end
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  %5 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !189
  %tobool10 = icmp eq %struct.kiss_fftr_state* %5, null
  br i1 %tobool10, label %if.end13, label %if.then11

if.then11:                                        ; preds = %if.end9
  %6 = bitcast %struct.kiss_fftr_state* %5 to i8*
  tail call void @free(i8* %6) #24
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.end9
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  %7 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !190
  %tobool14 = icmp eq %struct.kiss_fftr_state* %7, null
  br i1 %tobool14, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end13
  %8 = bitcast %struct.kiss_fftr_state* %7 to i8*
  tail call void @free(i8* %8) #24
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end13
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %9 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  %tobool18 = icmp eq %struct.kiss_fft_cpx** %9, null
  br i1 %tobool18, label %if.end34, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end17
  %10 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc
  %isnull31 = icmp eq %struct.kiss_fft_cpx** %.pr, null
  br i1 %isnull31, label %if.end34, label %delete.notnull32

for.body:                                         ; preds = %for.inc, %for.cond.preheader
  %.pr90 = phi %struct.kiss_fft_cpx** [ %9, %for.cond.preheader ], [ %.pr, %for.inc ]
  %i.089 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.inc ]
  %idxprom = zext i32 %i.089 to i64
  %arrayidx = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pr90, i64 %idxprom
  %11 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx, align 8, !tbaa !76
  %tobool21 = icmp eq %struct.kiss_fft_cpx* %11, null
  br i1 %tobool21, label %for.inc, label %delete.notnull27

delete.notnull27:                                 ; preds = %for.body
  %12 = bitcast %struct.kiss_fft_cpx* %11 to i8*
  tail call void @_ZdaPv(i8* %12) #26
  %.pr.pre = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  br label %for.inc

for.inc:                                          ; preds = %delete.notnull27, %for.body
  %.pr = phi %struct.kiss_fft_cpx** [ %.pr90, %for.body ], [ %.pr.pre, %delete.notnull27 ]
  %inc = add i32 %i.089, 1
  %13 = load i32, i32* %10, align 8, !tbaa !97
  %cmp = icmp ugt i32 %inc, %13
  br i1 %cmp, label %for.cond.cleanup, label %for.body

delete.notnull32:                                 ; preds = %for.cond.cleanup
  %14 = bitcast %struct.kiss_fft_cpx** %.pr to i8*
  tail call void @_ZdaPv(i8* %14) #26
  br label %if.end34

if.end34:                                         ; preds = %delete.notnull32, %for.cond.cleanup, %if.end17
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %15 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !192
  %tobool35 = icmp eq %struct.kiss_fft_cpx* %15, null
  br i1 %tobool35, label %if.end41, label %delete.notnull39

delete.notnull39:                                 ; preds = %if.end34
  %16 = bitcast %struct.kiss_fft_cpx* %15 to i8*
  tail call void @_ZdaPv(i8* %16) #26
  br label %if.end41

if.end41:                                         ; preds = %delete.notnull39, %if.end34
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %17 = load float**, float*** %m_pfOverlap, align 8, !tbaa !193
  %tobool42 = icmp eq float** %17, null
  br i1 %tobool42, label %if.end68, label %for.cond45.preheader

for.cond45.preheader:                             ; preds = %if.end41
  %18 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %19 = load i32, i32* %18, align 8, !tbaa !101
  %cmp4687 = icmp eq i32 %19, 0
  br i1 %cmp4687, label %delete.notnull66, label %for.body48

for.cond.cleanup47:                               ; preds = %for.inc61
  %isnull65 = icmp eq float** %.pr85, null
  br i1 %isnull65, label %if.end68, label %delete.notnull66

for.body48:                                       ; preds = %for.inc61, %for.cond45.preheader
  %20 = phi i32 [ %23, %for.inc61 ], [ %19, %for.cond45.preheader ]
  %.pr8592 = phi float** [ %.pr85, %for.inc61 ], [ %17, %for.cond45.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc61 ], [ 0, %for.cond45.preheader ]
  %arrayidx51 = getelementptr inbounds float*, float** %.pr8592, i64 %indvars.iv
  %21 = load float*, float** %arrayidx51, align 8, !tbaa !76
  %tobool52 = icmp eq float* %21, null
  br i1 %tobool52, label %for.inc61, label %delete.notnull58

delete.notnull58:                                 ; preds = %for.body48
  %22 = bitcast float* %21 to i8*
  tail call void @_ZdaPv(i8* %22) #26
  %.pr85.pre = load float**, float*** %m_pfOverlap, align 8, !tbaa !193
  %.pre = load i32, i32* %18, align 8, !tbaa !101
  br label %for.inc61

for.inc61:                                        ; preds = %delete.notnull58, %for.body48
  %23 = phi i32 [ %20, %for.body48 ], [ %.pre, %delete.notnull58 ]
  %.pr85 = phi float** [ %.pr8592, %for.body48 ], [ %.pr85.pre, %delete.notnull58 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %24 = zext i32 %23 to i64
  %cmp46 = icmp ult i64 %indvars.iv.next, %24
  br i1 %cmp46, label %for.body48, label %for.cond.cleanup47

delete.notnull66:                                 ; preds = %for.cond.cleanup47, %for.cond45.preheader
  %.lcssa96 = phi float** [ %.pr85, %for.cond.cleanup47 ], [ %17, %for.cond45.preheader ]
  %25 = bitcast float** %.lcssa96 to i8*
  tail call void @_ZdaPv(i8* %25) #26
  br label %if.end68

if.end68:                                         ; preds = %delete.notnull66, %for.cond.cleanup47, %if.end41
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) #1

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessorD0Ev(%class.CAmbisonicProcessor* %this) unnamed_addr #7 align 2 {
entry:
  tail call void @_ZN19CAmbisonicProcessorD2Ev(%class.CAmbisonicProcessor* %this) #24
  %0 = bitcast %class.CAmbisonicProcessor* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nBlockSize, i32 %nMisc) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !175 {
entry:
  %pfPsychIR = alloca %"class.std::vector.7", align 8
  %ref.tmp = alloca float*, align 8
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !97
  %1 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !100
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !101
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !186
  %tobool4 = icmp eq float* %3, null
  br i1 %tobool4, label %if.end7, label %delete.notnull, !prof !194

delete.notnull:                                   ; preds = %entry
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #26
  %.pre = load i32, i32* %2, align 8, !tbaa !101
  br label %if.end7

if.end7:                                          ; preds = %delete.notnull, %entry
  %5 = phi i32 [ %call.i, %entry ], [ %.pre, %delete.notnull ]
  %conv = zext i32 %5 to i64
  %6 = shl nuw nsw i64 %conv, 2
  %call8 = tail call i8* @_Znam(i64 %6) #25
  %7 = bitcast float** %m_pfTempSample to i8**
  store i8* %call8, i8** %7, align 8, !tbaa !186
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call8, i8 0, i64 %6, i1 false)
  %8 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  store i8 1, i8* %8, align 4, !tbaa !102
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 8
  store i32 %nBlockSize, i32* %m_nBlockSize, align 4, !tbaa !195
  %m_nTaps = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 9
  store i32 101, i32* %m_nTaps, align 8, !tbaa !196
  %cmp = icmp ult i32 %nBlockSize, 101
  %sub = add i32 %nBlockSize, -1
  %cond = select i1 %cmp, i32 %sub, i32 100, !prof !197
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  store i32 %cond, i32* %m_nOverlapLength, align 4, !tbaa !198
  %add = add i32 %nBlockSize, 101
  %add22 = add i32 %add, %cond
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.end7
  %storemerge = phi i32 [ 1, %if.end7 ], [ %shl, %while.cond ]
  %cmp23 = icmp ult i32 %storemerge, %add22
  %shl = shl i32 %storemerge, 1
  br i1 %cmp23, label %while.cond, label %while.end, !prof !199

while.end:                                        ; preds = %while.cond
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 7
  store i32 %storemerge, i32* %m_nFFTSize, align 8, !tbaa !200
  %div = lshr i32 %storemerge, 1
  %add26 = add nuw i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 11
  store i32 %add26, i32* %m_nFFTBins, align 8, !tbaa !201
  %conv28 = uitofp i32 %storemerge to float
  %div29 = fdiv float 1.000000e+00, %conv28
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  store float %div29, float* %m_fFFTScaler, align 4, !tbaa !202
  %9 = shl nuw nsw i64 %conv, 3
  %call32 = tail call i8* @_Znam(i64 %9) #25
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %10 = bitcast float*** %m_pfOverlap to i8**
  store i8* %call32, i8** %10, align 8, !tbaa !193
  %cmp34295 = icmp eq i32 %5, 0
  br i1 %cmp34295, label %for.cond.cleanup, label %for.body.lr.ph, !prof !203

for.body.lr.ph:                                   ; preds = %while.end
  %conv36 = zext i32 %cond to i64
  %11 = shl nuw nsw i64 %conv36, 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %while.end
  %conv40 = zext i32 %storemerge to i64
  %12 = shl nuw nsw i64 %conv40, 2
  %call41 = tail call i8* @_Znam(i64 %12) #25
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %13 = bitcast float** %m_pfScratchBufferA to i8**
  store i8* %call41, i8** %13, align 8, !tbaa !188
  %14 = load i32, i32* %0, align 8, !tbaa !97
  %add42 = add i32 %14, 1
  %conv43 = zext i32 %add42 to i64
  %15 = shl nuw nsw i64 %conv43, 3
  %call44 = tail call i8* @_Znam(i64 %15) #25
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %16 = bitcast %struct.kiss_fft_cpx*** %m_ppcpPsychFilters to i8**
  store i8* %call44, i8** %16, align 8, !tbaa !191
  %conv61 = zext i32 %add26 to i64
  %17 = shl nuw nsw i64 %conv61, 3
  %call62292 = tail call i8* @_Znam(i64 %17) #25
  %18 = bitcast i8* %call44 to i8**
  store i8* %call62292, i8** %18, align 8, !tbaa !76
  %cmp48309 = icmp eq i32 %14, 0
  %call62310 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48309, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge.peel, !prof !204

for.body50.for.body50_crit_edge.peel:             ; preds = %for.cond.cleanup
  %.pre303.peel = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  %arrayidx56.peel = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pre303.peel, i64 1
  %19 = bitcast %struct.kiss_fft_cpx** %arrayidx56.peel to i8**
  store i8* %call62310, i8** %19, align 8, !tbaa !76
  %cmp48.peel = icmp ult i32 %14, 2
  %call62.peel = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48.peel, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge.peel316, !prof !205

for.body50.for.body50_crit_edge.peel316:          ; preds = %for.body50.for.body50_crit_edge.peel
  %.pre303.peel317 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  %arrayidx56.peel319 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pre303.peel317, i64 2
  %20 = bitcast %struct.kiss_fft_cpx** %arrayidx56.peel319 to i8**
  store i8* %call62.peel, i8** %20, align 8, !tbaa !76
  %cmp48.peel321 = icmp ult i32 %14, 3
  %call62.peel322 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48.peel321, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge.peel324, !prof !206

for.body50.for.body50_crit_edge.peel324:          ; preds = %for.body50.for.body50_crit_edge.peel316
  %.pre303.peel325 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  %arrayidx56.peel327 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pre303.peel325, i64 3
  %21 = bitcast %struct.kiss_fft_cpx** %arrayidx56.peel327 to i8**
  store i8* %call62.peel322, i8** %21, align 8, !tbaa !76
  %cmp48.peel329 = icmp ult i32 %14, 4
  %call62.peel330 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48.peel329, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge.peel332, !prof !207

for.body50.for.body50_crit_edge.peel332:          ; preds = %for.body50.for.body50_crit_edge.peel324
  %.pre303.peel333 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  %arrayidx56.peel335 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pre303.peel333, i64 4
  %22 = bitcast %struct.kiss_fft_cpx** %arrayidx56.peel335 to i8**
  store i8* %call62.peel330, i8** %22, align 8, !tbaa !76
  %cmp48.peel337 = icmp ult i32 %14, 5
  %call62.peel338 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48.peel337, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge, !prof !208

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv301 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next302, %for.body ]
  %call37 = tail call i8* @_Znam(i64 %11) #25
  %23 = load float**, float*** %m_pfOverlap, align 8, !tbaa !193
  %arrayidx = getelementptr inbounds float*, float** %23, i64 %indvars.iv301
  %24 = bitcast float** %arrayidx to i8**
  store i8* %call37, i8** %24, align 8, !tbaa !76
  %indvars.iv.next302 = add nuw nsw i64 %indvars.iv301, 1
  %exitcond = icmp eq i64 %indvars.iv.next302, %conv
  br i1 %exitcond, label %for.cond.cleanup, label %for.body, !prof !203

for.cond.cleanup49:                               ; preds = %for.body50.for.body50_crit_edge, %for.body50.for.body50_crit_edge.peel332, %for.body50.for.body50_crit_edge.peel324, %for.body50.for.body50_crit_edge.peel316, %for.body50.for.body50_crit_edge.peel, %for.cond.cleanup
  %call62.lcssa = phi i8* [ %call62310, %for.cond.cleanup ], [ %call62.peel, %for.body50.for.body50_crit_edge.peel ], [ %call62.peel322, %for.body50.for.body50_crit_edge.peel316 ], [ %call62.peel330, %for.body50.for.body50_crit_edge.peel324 ], [ %call62.peel338, %for.body50.for.body50_crit_edge.peel332 ], [ %call62, %for.body50.for.body50_crit_edge ]
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %25 = bitcast %struct.kiss_fft_cpx** %m_pcpScratch to i8**
  store i8* %call62.lcssa, i8** %25, align 8, !tbaa !192
  %26 = bitcast %"class.std::vector.7"* %pfPsychIR to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #24
  %27 = bitcast float** %ref.tmp to i8*
  %28 = bitcast float** %ref.tmp to i8**
  %_M_finish.i = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 1
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 2
  br label %for.body68

for.body50.for.body50_crit_edge:                  ; preds = %for.body50.for.body50_crit_edge, %for.body50.for.body50_crit_edge.peel332
  %call62312 = phi i8* [ %call62, %for.body50.for.body50_crit_edge ], [ %call62.peel338, %for.body50.for.body50_crit_edge.peel332 ]
  %inc58311 = phi i32 [ %inc58, %for.body50.for.body50_crit_edge ], [ 5, %for.body50.for.body50_crit_edge.peel332 ]
  %.pre303 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  %idxprom55 = zext i32 %inc58311 to i64
  %arrayidx56 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %.pre303, i64 %idxprom55
  %29 = bitcast %struct.kiss_fft_cpx** %arrayidx56 to i8**
  store i8* %call62312, i8** %29, align 8, !tbaa !76
  %inc58 = add i32 %inc58311, 1
  %cmp48 = icmp ugt i32 %inc58, %14
  %call62 = tail call i8* @_Znam(i64 %17) #25
  br i1 %cmp48, label %for.cond.cleanup49, label %for.body50.for.body50_crit_edge, !prof !204, !llvm.loop !209

for.cond.cleanup67:                               ; preds = %invoke.cont72
  %30 = bitcast %class.CAmbisonicProcessor* %this to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %30, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 3
  %31 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  invoke void %31(%class.CAmbisonicProcessor* nonnull %this)
          to label %invoke.cont77 unwind label %lpad76

for.body68:                                       ; preds = %invoke.cont72.for.body68_crit_edge, %for.cond.cleanup49
  %32 = phi i32 [ %14, %for.cond.cleanup49 ], [ %39, %invoke.cont72.for.body68_crit_edge ]
  %33 = phi i32 [ 101, %for.cond.cleanup49 ], [ %.pre304, %invoke.cont72.for.body68_crit_edge ]
  %i63.0291 = phi i32 [ 0, %for.cond.cleanup49 ], [ %inc74, %invoke.cont72.for.body68_crit_edge ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #24
  %conv70 = zext i32 %33 to i64
  %34 = shl nuw nsw i64 %conv70, 2
  %call71 = invoke i8* @_Znam(i64 %34) #25
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body68
  store i8* %call71, i8** %28, align 8, !tbaa !76
  %35 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i, align 8, !tbaa !210
  %36 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_end_of_storage.i, align 8, !tbaa !213
  %cmp.i = icmp eq %"class.std::unique_ptr.12"* %35, %36
  br i1 %cmp.i, label %if.else.i, label %if.then.i, !prof !214

if.then.i:                                        ; preds = %invoke.cont
  %37 = ptrtoint i8* %call71 to i64
  %38 = bitcast %"class.std::unique_ptr.12"* %35 to i64*
  store i64 %37, i64* %38, align 8, !tbaa !215
  %incdec.ptr.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %35, i64 1
  store %"class.std::unique_ptr.12"* %incdec.ptr.i, %"class.std::unique_ptr.12"** %_M_finish.i, align 8, !tbaa !210
  br label %invoke.cont72

if.else.i:                                        ; preds = %invoke.cont
  invoke void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_emplace_back_auxIJPfEEEvDpOT_(%"class.std::vector.7"* nonnull %pfPsychIR, float** nonnull dereferenceable(8) %ref.tmp)
          to label %if.else.i.invoke.cont72_crit_edge unwind label %lpad

if.else.i.invoke.cont72_crit_edge:                ; preds = %if.else.i
  %.pre305 = load i32, i32* %0, align 8, !tbaa !97
  br label %invoke.cont72

invoke.cont72:                                    ; preds = %if.else.i.invoke.cont72_crit_edge, %if.then.i
  %39 = phi i32 [ %.pre305, %if.else.i.invoke.cont72_crit_edge ], [ %32, %if.then.i ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #24
  %inc74 = add i32 %i63.0291, 1
  %cmp66 = icmp ugt i32 %inc74, %39
  br i1 %cmp66, label %for.cond.cleanup67, label %invoke.cont72.for.body68_crit_edge, !prof !204

invoke.cont72.for.body68_crit_edge:               ; preds = %invoke.cont72
  %.pre304 = load i32, i32* %m_nTaps, align 8, !tbaa !196
  br label %for.body68

lpad:                                             ; preds = %if.else.i, %for.body68
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  %42 = extractvalue { i8*, i32 } %40, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #24
  br label %ehcleanup214

invoke.cont77:                                    ; preds = %for.cond.cleanup67
  %43 = load i32, i32* %m_nFFTSize, align 8, !tbaa !200
  %call80 = invoke %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %43, i32 0, i8* null, i64* null)
          to label %invoke.cont79 unwind label %lpad76

invoke.cont79:                                    ; preds = %invoke.cont77
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  store %struct.kiss_fftr_state* %call80, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !189
  %44 = load i32, i32* %m_nFFTSize, align 8, !tbaa !200
  %call83 = invoke %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %44, i32 1, i8* null, i64* null)
          to label %invoke.cont82 unwind label %lpad76

invoke.cont82:                                    ; preds = %invoke.cont79
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  store %struct.kiss_fftr_state* %call83, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !190
  %45 = load i32, i32* %0, align 8, !tbaa !97
  %_M_start.i275 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %pfPsychIR, i64 0, i32 0, i32 0, i32 0
  br label %for.cond90.preheader

for.cond90.preheader:                             ; preds = %for.inc211, %invoke.cont82
  %46 = phi i32 [ %45, %invoke.cont82 ], [ %70, %for.inc211 ]
  %i_m.0289 = phi i32 [ 0, %invoke.cont82 ], [ %inc212, %for.inc211 ]
  %47 = load i32, i32* %m_nTaps, align 8, !tbaa !196
  %cmp92286 = icmp eq i32 %47, 0
  br i1 %cmp92286, label %for.cond90.preheader.for.cond.cleanup93_crit_edge, label %for.body94.lr.ph, !prof !217

for.cond90.preheader.for.cond.cleanup93_crit_edge: ; preds = %for.cond90.preheader
  %.pre306 = zext i32 %i_m.0289 to i64
  br label %for.cond.cleanup93

for.body94.lr.ph:                                 ; preds = %for.cond90.preheader
  %48 = load i8, i8* %1, align 4, !tbaa !100, !range !104
  %tobool95 = icmp eq i8 %48, 0
  %idxprom127 = zext i32 %i_m.0289 to i64
  %49 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i275, align 8
  %_M_head_impl.i.i.i.i.i.i273 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %49, i64 %idxprom127, i32 0, i32 0, i32 0, i32 0
  %50 = zext i32 %47 to i64
  br i1 %tobool95, label %for.body94.us, label %for.body94, !prof !218

for.body94.us:                                    ; preds = %for.inc185.us, %for.body94.lr.ph
  %indvars.iv299 = phi i64 [ %indvars.iv.next300, %for.inc185.us ], [ 0, %for.body94.lr.ph ]
  switch i32 %46, label %for.inc185.us [
    i32 1, label %sw.bb141.us
    i32 2, label %sw.bb155.us
    i32 3, label %sw.bb169.us
  ]

sw.bb169.us:                                      ; preds = %for.body94.us
  %arrayidx173.us = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* @_ZL14third_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv299
  br label %for.inc185.us.sink.split

sw.bb155.us:                                      ; preds = %for.body94.us
  %arrayidx159.us = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv299
  br label %for.inc185.us.sink.split

sw.bb141.us:                                      ; preds = %for.body94.us
  %arrayidx145.us = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_2D, i64 0, i64 %idxprom127, i64 %indvars.iv299
  br label %for.inc185.us.sink.split

for.inc185.us.sink.split:                         ; preds = %sw.bb141.us, %sw.bb155.us, %sw.bb169.us
  %arrayidx145.us.sink = phi i16* [ %arrayidx145.us, %sw.bb141.us ], [ %arrayidx159.us, %sw.bb155.us ], [ %arrayidx173.us, %sw.bb169.us ]
  %51 = load i16, i16* %arrayidx145.us.sink, align 2, !tbaa !78
  %conv147.us = sitofp i16 %51 to float
  %mul148.us = fmul float %conv147.us, 2.000000e+00
  %div149.us = fdiv float %mul148.us, 3.276700e+04
  %52 = load float*, float** %_M_head_impl.i.i.i.i.i.i273, align 8, !tbaa !76
  %arrayidx.i270.us = getelementptr inbounds float, float* %52, i64 %indvars.iv299
  store float %div149.us, float* %arrayidx.i270.us, align 4, !tbaa !83
  br label %for.inc185.us

for.inc185.us:                                    ; preds = %for.inc185.us.sink.split, %for.body94.us
  %indvars.iv.next300 = add nuw nsw i64 %indvars.iv299, 1
  %cmp92.us = icmp ult i64 %indvars.iv.next300, %50
  br i1 %cmp92.us, label %for.body94.us, label %for.cond.cleanup93, !prof !219

for.cond.cleanup87:                               ; preds = %for.inc211
  call void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"class.std::vector.7"* nonnull %pfPsychIR) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #24
  ret i1 true

lpad76:                                           ; preds = %invoke.cont79, %invoke.cont77, %for.cond.cleanup67
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = extractvalue { i8*, i32 } %53, 0
  %55 = extractvalue { i8*, i32 } %53, 1
  br label %ehcleanup214

for.cond.cleanup93:                               ; preds = %for.inc185, %for.inc185.us, %for.cond90.preheader.for.cond.cleanup93_crit_edge
  %conv189.pre-phi = phi i64 [ %.pre306, %for.cond90.preheader.for.cond.cleanup93_crit_edge ], [ %idxprom127, %for.inc185.us ], [ %idxprom127, %for.inc185 ]
  %56 = load i8*, i8** %13, align 8, !tbaa !188
  %57 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start.i275, align 8, !tbaa !220
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %57, i64 %conv189.pre-phi, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast float** %_M_head_impl.i.i.i.i.i to i8**
  %59 = load i8*, i8** %58, align 8, !tbaa !76
  %conv193 = zext i32 %47 to i64
  %mul194 = shl nuw nsw i64 %conv193, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %59, i64 %mul194, i1 false)
  %60 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !188
  %61 = load i32, i32* %m_nTaps, align 8, !tbaa !196
  %idxprom197 = zext i32 %61 to i64
  %arrayidx198 = getelementptr inbounds float, float* %60, i64 %idxprom197
  %62 = bitcast float* %arrayidx198 to i8*
  %63 = load i32, i32* %m_nFFTSize, align 8, !tbaa !200
  %sub201 = sub i32 %63, %61
  %conv202 = zext i32 %sub201 to i64
  %mul203 = shl nuw nsw i64 %conv202, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 %mul203, i1 false)
  %64 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !189
  %65 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !188
  %66 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  %arrayidx208 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %66, i64 %conv189.pre-phi
  %67 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx208, align 8, !tbaa !76
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %64, float* %65, %struct.kiss_fft_cpx* %67)
          to label %for.inc211 unwind label %lpad209

for.body94:                                       ; preds = %for.inc185, %for.body94.lr.ph
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc185 ], [ 0, %for.body94.lr.ph ]
  switch i32 %46, label %for.inc185 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb112
    i32 3, label %sw.bb126
  ], !prof !221

sw.bb:                                            ; preds = %for.body94
  %arrayidx101 = getelementptr inbounds [2 x [101 x i16]], [2 x [101 x i16]]* @_ZL14first_order_3D, i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

sw.bb112:                                         ; preds = %for.body94
  %arrayidx116 = getelementptr inbounds [3 x [101 x i16]], [3 x [101 x i16]]* @_ZL15second_order_3D, i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

sw.bb126:                                         ; preds = %for.body94
  %arrayidx130 = getelementptr inbounds [4 x [101 x i16]], [4 x [101 x i16]]* bitcast (<{ [101 x i16], [101 x i16], <{ [89 x i16], [12 x i16] }>, [101 x i16] }>* @_ZL14third_order_3D to [4 x [101 x i16]]*), i64 0, i64 %idxprom127, i64 %indvars.iv
  br label %for.inc185.sink.split

for.inc185.sink.split:                            ; preds = %sw.bb126, %sw.bb112, %sw.bb
  %arrayidx130.sink = phi i16* [ %arrayidx130, %sw.bb126 ], [ %arrayidx116, %sw.bb112 ], [ %arrayidx101, %sw.bb ]
  %68 = load i16, i16* %arrayidx130.sink, align 2, !tbaa !78
  %conv132 = sitofp i16 %68 to float
  %mul133 = fmul float %conv132, 2.000000e+00
  %div134 = fdiv float %mul133, 3.276700e+04
  %69 = load float*, float** %_M_head_impl.i.i.i.i.i.i273, align 8, !tbaa !76
  %arrayidx.i274 = getelementptr inbounds float, float* %69, i64 %indvars.iv
  store float %div134, float* %arrayidx.i274, align 4, !tbaa !83
  br label %for.inc185

for.inc185:                                       ; preds = %for.inc185.sink.split, %for.body94
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp92 = icmp ult i64 %indvars.iv.next, %50
  br i1 %cmp92, label %for.body94, label %for.cond.cleanup93, !prof !219

for.inc211:                                       ; preds = %for.cond.cleanup93
  %inc212 = add i32 %i_m.0289, 1
  %70 = load i32, i32* %0, align 8, !tbaa !97
  %cmp86 = icmp ugt i32 %inc212, %70
  br i1 %cmp86, label %for.cond.cleanup87, label %for.cond90.preheader, !prof !204

lpad209:                                          ; preds = %for.cond.cleanup93
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  %73 = extractvalue { i8*, i32 } %71, 1
  br label %ehcleanup214

ehcleanup214:                                     ; preds = %lpad209, %lpad76, %lpad
  %exn.slot.0 = phi i8* [ %41, %lpad ], [ %72, %lpad209 ], [ %54, %lpad76 ]
  %ehselector.slot.0 = phi i32 [ %42, %lpad ], [ %73, %lpad209 ], [ %55, %lpad76 ]
  call void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"class.std::vector.7"* nonnull %pfPsychIR) #24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #24
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.0, 0
  %lpad.val218 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.0, 1
  resume { i8*, i32 } %lpad.val218
}

declare %struct.kiss_fftr_state* @kiss_fftr_alloc(i32, i32, i8*, i64*) local_unnamed_addr #0

declare void @kiss_fftr(%struct.kiss_fftr_state*, float*, %struct.kiss_fft_cpx*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev(%"class.std::vector.7"* %this) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !175 {
entry:
  %_M_start = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8, !tbaa !220
  %_M_finish = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 1
  %1 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish, align 8, !tbaa !210
  %cmp3.i.i.i = icmp eq %"class.std::unique_ptr.12"* %0, %1
  br i1 %cmp3.i.i.i, label %invoke.cont, label %for.body.i.i.i.peel, !prof !222

for.body.i.i.i.peel:                              ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i.i.i.i.peel = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %2 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.peel, align 8, !tbaa !76
  %cmp.i.i.i.i.i.peel = icmp eq float* %2, null
  br i1 %cmp.i.i.i.i.i.peel, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.peel, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.peel: ; preds = %for.body.i.i.i.peel
  %3 = bitcast float* %2 to i8*
  tail call void @_ZdaPv(i8* %3) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.peel, %for.body.i.i.i.peel
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.peel, align 8, !tbaa !76
  %incdec.ptr.i.i.i.peel = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %0, i64 1
  %cmp.i.i.i.peel = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.peel, %1
  br i1 %cmp.i.i.i.peel, label %invoke.cont.loopexit, label %for.body.i.i.i.peel4, !prof !224

for.body.i.i.i.peel4:                             ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel
  %_M_head_impl.i.i.i.i.i.i.i.i.i.peel5 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.peel, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.peel5, align 8, !tbaa !76
  %cmp.i.i.i.i.i.peel6 = icmp eq float* %4, null
  br i1 %cmp.i.i.i.i.i.peel6, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel8, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.peel7, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.peel7: ; preds = %for.body.i.i.i.peel4
  %5 = bitcast float* %4 to i8*
  tail call void @_ZdaPv(i8* %5) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel8

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel8: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i.peel7, %for.body.i.i.i.peel4
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i.peel5, align 8, !tbaa !76
  %incdec.ptr.i.i.i.peel9 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %0, i64 2
  %cmp.i.i.i.peel10 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.peel9, %1
  br i1 %cmp.i.i.i.peel10, label %invoke.cont.loopexit, label %for.body.i.i.i, !prof !225

for.body.i.i.i:                                   ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel8
  %__first.addr.04.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i ], [ %incdec.ptr.i.i.i.peel9, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel8 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i, align 8, !tbaa !76
  %cmp.i.i.i.i.i = icmp eq float* %6, null
  br i1 %cmp.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i:  ; preds = %for.body.i.i.i
  %7 = bitcast float* %6 to i8*
  tail call void @_ZdaPv(i8* %7) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i, %for.body.i.i.i
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i, align 8, !tbaa !76
  %incdec.ptr.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i, i64 1
  %cmp.i.i.i = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i, %1
  br i1 %cmp.i.i.i, label %invoke.cont.loopexit, label %for.body.i.i.i, !prof !226, !llvm.loop !227

invoke.cont.loopexit:                             ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel8, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i.peel
  %.pre = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8, !tbaa !220
  br label %invoke.cont

invoke.cont:                                      ; preds = %invoke.cont.loopexit, %entry
  %8 = phi %"class.std::unique_ptr.12"* [ %.pre, %invoke.cont.loopexit ], [ %0, %entry ]
  %tobool.i.i = icmp eq %"class.std::unique_ptr.12"* %8, null
  br i1 %tobool.i.i, label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit, label %if.then.i.i, !prof !228

if.then.i.i:                                      ; preds = %invoke.cont
  %9 = bitcast %"class.std::unique_ptr.12"* %8 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit

_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor5ResetEv(%class.CAmbisonicProcessor* nocapture readonly %this) unnamed_addr #7 align 2 !prof !175 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp5 = icmp eq i32 %1, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph, !prof !203

for.body.lr.ph:                                   ; preds = %entry
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %2 = load float**, float*** %m_pfOverlap, align 8, !tbaa !193
  %arrayidx = getelementptr inbounds float*, float** %2, i64 %indvars.iv
  %3 = bitcast float** %arrayidx to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !76
  %5 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !198
  %conv = zext i32 %5 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul, i1 false)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %6 = load i32, i32* %0, align 8, !tbaa !101
  %7 = zext i32 %6 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %7
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !prof !229
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor7RefreshEv(%class.CAmbisonicProcessor* %this) unnamed_addr #9 align 2 !prof !230 {
entry:
  %fAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 3
  %0 = load float, float* %fAlpha, align 4, !tbaa !231
  %call = tail call float @cosf(float %0) #24
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  store float %call, float* %m_fCosAlpha, align 8, !tbaa !232
  %1 = load float, float* %fAlpha, align 4, !tbaa !231
  %call4 = tail call float @sinf(float %1) #24
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  store float %call4, float* %m_fSinAlpha, align 4, !tbaa !233
  %fBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 4
  %2 = load float, float* %fBeta, align 8, !tbaa !234
  %call6 = tail call float @cosf(float %2) #24
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  store float %call6, float* %m_fCosBeta, align 8, !tbaa !235
  %3 = load float, float* %fBeta, align 8, !tbaa !234
  %call9 = tail call float @sinf(float %3) #24
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  store float %call9, float* %m_fSinBeta, align 4, !tbaa !236
  %fGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1, i32 5
  %4 = load float, float* %fGamma, align 4, !tbaa !237
  %call11 = tail call float @cosf(float %4) #24
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  store float %call11, float* %m_fCosGamma, align 8, !tbaa !238
  %5 = load float, float* %fGamma, align 4, !tbaa !237
  %call14 = tail call float @sinf(float %5) #24
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  store float %call14, float* %m_fSinGamma, align 4, !tbaa !239
  %6 = load float, float* %fAlpha, align 4, !tbaa !231
  %mul = fmul float %6, 2.000000e+00
  %call17 = tail call float @cosf(float %mul) #24
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  store float %call17, float* %m_fCos2Alpha, align 8, !tbaa !240
  %7 = load float, float* %fAlpha, align 4, !tbaa !231
  %mul20 = fmul float %7, 2.000000e+00
  %call21 = tail call float @sinf(float %mul20) #24
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  store float %call21, float* %m_fSin2Alpha, align 4, !tbaa !241
  %8 = load float, float* %fBeta, align 8, !tbaa !234
  %mul24 = fmul float %8, 2.000000e+00
  %call25 = tail call float @cosf(float %mul24) #24
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  store float %call25, float* %m_fCos2Beta, align 8, !tbaa !242
  %9 = load float, float* %fBeta, align 8, !tbaa !234
  %mul28 = fmul float %9, 2.000000e+00
  %call29 = tail call float @sinf(float %mul28) #24
  %m_fSin2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 24
  store float %call29, float* %m_fSin2Beta, align 4, !tbaa !243
  %10 = load float, float* %fGamma, align 4, !tbaa !237
  %mul32 = fmul float %10, 2.000000e+00
  %call33 = tail call float @cosf(float %mul32) #24
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  store float %call33, float* %m_fCos2Gamma, align 8, !tbaa !244
  %11 = load float, float* %fGamma, align 4, !tbaa !237
  %mul36 = fmul float %11, 2.000000e+00
  %call37 = tail call float @sinf(float %mul36) #24
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  store float %call37, float* %m_fSin2Gamma, align 4, !tbaa !245
  %12 = load float, float* %fAlpha, align 4, !tbaa !231
  %mul40 = fmul float %12, 3.000000e+00
  %call41 = tail call float @cosf(float %mul40) #24
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 27
  store float %call41, float* %m_fCos3Alpha, align 8, !tbaa !246
  %13 = load float, float* %fAlpha, align 4, !tbaa !231
  %mul44 = fmul float %13, 3.000000e+00
  %call45 = tail call float @sinf(float %mul44) #24
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 28
  store float %call45, float* %m_fSin3Alpha, align 4, !tbaa !247
  %14 = load float, float* %fBeta, align 8, !tbaa !234
  %mul48 = fmul float %14, 3.000000e+00
  %call49 = tail call float @cosf(float %mul48) #24
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 29
  store float %call49, float* %m_fCos3Beta, align 8, !tbaa !248
  %15 = load float, float* %fBeta, align 8, !tbaa !234
  %mul52 = fmul float %15, 3.000000e+00
  %call53 = tail call float @sinf(float %mul52) #24
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 30
  store float %call53, float* %m_fSin3Beta, align 4, !tbaa !249
  %16 = load float, float* %fGamma, align 4, !tbaa !237
  %mul56 = fmul float %16, 3.000000e+00
  %call57 = tail call float @cosf(float %mul56) #24
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 31
  store float %call57, float* %m_fCos3Gamma, align 8, !tbaa !250
  %17 = load float, float* %fGamma, align 4, !tbaa !237
  %mul60 = fmul float %17, 3.000000e+00
  %call61 = tail call float @sinf(float %mul60) #24
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 32
  store float %call61, float* %m_fSin3Gamma, align 4, !tbaa !251
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor14SetOrientationE11Orientation(%class.CAmbisonicProcessor* nocapture %this, %class.Orientation* nocapture readonly byval(%class.Orientation) align 8 %orientation) local_unnamed_addr #7 align 2 !prof !230 {
entry:
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  %0 = bitcast %class.Orientation* %m_orientation to i8*
  %1 = bitcast %class.Orientation* %orientation to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !tbaa.struct !252
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN19CAmbisonicProcessor14GetOrientationEv(%class.Orientation* noalias nocapture sret %agg.result, %class.CAmbisonicProcessor* nocapture readonly %this) local_unnamed_addr #7 align 2 !prof !103 {
entry:
  %m_orientation = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 1
  %0 = bitcast %class.Orientation* %agg.result to i8*
  %1 = bitcast %class.Orientation* %m_orientation to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* nonnull align 8 %1, i64 24, i1 false), !tbaa.struct !252
  ret void
}

; Function Attrs: uwtable
define void @_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 5
  %1 = load i8, i8* %0, align 4, !tbaa !102, !range !104
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8, !tbaa !97
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.end11, label %if.end3

if.end3:                                          ; preds = %if.end
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  %.pr = load i32, i32* %2, align 8, !tbaa !97
  %cmp5 = icmp ugt i32 %.pr, 1
  br i1 %cmp5, label %if.end7, label %if.end11

if.end7:                                          ; preds = %if.end3
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  %.pr19 = load i32, i32* %2, align 8, !tbaa !97
  %cmp9 = icmp ugt i32 %.pr19, 2
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end7
  tail call void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %this, %class.CBFormat* %pBFSrcDst, i32 %nSamples)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end7, %if.end3, %if.end
  ret void
}

; Function Attrs: uwtable
define void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #3 align 2 !prof !230 {
entry:
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 5
  %0 = bitcast float** %m_pfScratchBufferA to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !188
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 7
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !200
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %3 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !101
  %cmp168 = icmp eq i32 %4, 0
  br i1 %cmp168, label %for.cond.cleanup, label %for.body.lr.ph, !prof !253

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 8
  %m_pFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 3
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 14
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 11
  %m_ppcpPsychFilters = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 13
  %m_pIFFT_psych_cfg = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 4
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 10
  %m_pfOverlap = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 6
  %scevgep193 = getelementptr %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 12
  %scevgep193194 = bitcast float* %scevgep193 to i8*
  %uglygep = getelementptr i8, i8* %scevgep193194, i64 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup92, %entry
  ret void

for.body:                                         ; preds = %for.cond.cleanup92, %for.body.lr.ph
  %indvars.iv174 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next175, %for.cond.cleanup92 ]
  %5 = trunc i64 %indvars.iv174 to i32
  %conv2 = uitofp i32 %5 to double
  %call = tail call double @sqrt(double %conv2) #24
  %6 = load i8*, i8** %0, align 8, !tbaa !188
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 %indvars.iv174
  %8 = bitcast float** %arrayidx.i to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !76
  %10 = load i32, i32* %m_nBlockSize, align 4, !tbaa !195
  %conv7 = zext i32 %10 to i64
  %mul8 = shl nuw nsw i64 %conv7, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul8, i1 false)
  %11 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !188
  %12 = load i32, i32* %m_nBlockSize, align 4, !tbaa !195
  %idxprom = zext i32 %12 to i64
  %arrayidx = getelementptr inbounds float, float* %11, i64 %idxprom
  %13 = bitcast float* %arrayidx to i8*
  %14 = load i32, i32* %m_nFFTSize, align 8, !tbaa !200
  %sub = sub i32 %14, %12
  %conv13 = zext i32 %sub to i64
  %mul14 = shl nuw nsw i64 %conv13, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 %mul14, i1 false)
  %15 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pFFT_psych_cfg, align 8, !tbaa !189
  %16 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !188
  %17 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !192
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %15, float* %16, %struct.kiss_fft_cpx* %17)
  %18 = load i32, i32* %m_nFFTBins, align 8, !tbaa !201
  %cmp17159 = icmp eq i32 %18, 0
  br i1 %cmp17159, label %for.cond.cleanup18, label %for.body19.lr.ph, !prof !254

for.body19.lr.ph:                                 ; preds = %for.body
  %conv3 = fptosi double %call to i32
  %19 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !192
  %20 = load %struct.kiss_fft_cpx**, %struct.kiss_fft_cpx*** %m_ppcpPsychFilters, align 8, !tbaa !191
  %idxprom23 = zext i32 %conv3 to i64
  %arrayidx24 = getelementptr inbounds %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %20, i64 %idxprom23
  %21 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %arrayidx24, align 8, !tbaa !76
  br label %for.body19

for.cond.cleanup18:                               ; preds = %for.body19, %for.body
  %22 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %m_pIFFT_psych_cfg, align 8, !tbaa !190
  %23 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %m_pcpScratch, align 8, !tbaa !192
  %24 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !188
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %22, %struct.kiss_fft_cpx* %23, float* %24)
  %25 = load i32, i32* %m_nFFTSize, align 8, !tbaa !200
  %cmp72161 = icmp eq i32 %25, 0
  br i1 %cmp72161, label %for.cond.cleanup18.for.cond.cleanup73_crit_edge, label %for.body74.lr.ph, !prof !255

for.cond.cleanup18.for.cond.cleanup73_crit_edge:  ; preds = %for.cond.cleanup18
  %.pre = load i8*, i8** %0, align 8, !tbaa !188
  br label %for.cond.cleanup73

for.body74.lr.ph:                                 ; preds = %for.cond.cleanup18
  %26 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !188
  %27 = bitcast float* %26 to i8*
  %28 = zext i32 %25 to i64
  %min.iters.check189 = icmp ult i32 %25, 8
  br i1 %min.iters.check189, label %for.body74.preheader, label %vector.memcheck199

for.body74.preheader:                             ; preds = %middle.block187, %vector.memcheck199, %for.body74.lr.ph
  %indvars.iv170.ph = phi i64 [ 0, %vector.memcheck199 ], [ 0, %for.body74.lr.ph ], [ %n.vec202, %middle.block187 ]
  %29 = or i64 %indvars.iv170.ph, 1
  %30 = icmp ugt i64 %29, %28
  %umax = select i1 %30, i64 %29, i64 %28
  %31 = xor i64 %indvars.iv170.ph, -1
  %32 = add nsw i64 %umax, %31
  %xtraiter213 = and i64 %umax, 3
  %lcmp.mod214 = icmp eq i64 %xtraiter213, 0
  br i1 %lcmp.mod214, label %for.body74.prol.loopexit, label %for.body74.prol

for.body74.prol:                                  ; preds = %for.body74.prol, %for.body74.preheader
  %indvars.iv170.prol = phi i64 [ %indvars.iv.next171.prol, %for.body74.prol ], [ %indvars.iv170.ph, %for.body74.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body74.prol ], [ %xtraiter213, %for.body74.preheader ]
  %33 = load float, float* %m_fFFTScaler, align 4, !tbaa !202
  %arrayidx77.prol = getelementptr inbounds float, float* %26, i64 %indvars.iv170.prol
  %34 = load float, float* %arrayidx77.prol, align 4, !tbaa !83
  %mul78.prol = fmul float %33, %34
  store float %mul78.prol, float* %arrayidx77.prol, align 4, !tbaa !83
  %indvars.iv.next171.prol = add nuw nsw i64 %indvars.iv170.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body74.prol.loopexit, label %for.body74.prol, !llvm.loop !256

for.body74.prol.loopexit:                         ; preds = %for.body74.prol, %for.body74.preheader
  %indvars.iv170.unr = phi i64 [ %indvars.iv170.ph, %for.body74.preheader ], [ %indvars.iv.next171.prol, %for.body74.prol ]
  %35 = icmp ult i64 %32, 3
  br i1 %35, label %for.cond.cleanup73, label %for.body74

vector.memcheck199:                               ; preds = %for.body74.lr.ph
  %scevgep191 = getelementptr float, float* %26, i64 %28
  %bound0195 = icmp ugt i8* %uglygep, %27
  %bound1196 = icmp ult float* %m_fFFTScaler, %scevgep191
  %found.conflict197 = and i1 %bound0195, %bound1196
  br i1 %found.conflict197, label %for.body74.preheader, label %vector.ph200

vector.ph200:                                     ; preds = %vector.memcheck199
  %n.vec202 = and i64 %28, 4294967288
  %36 = add nsw i64 %n.vec202, -8
  %37 = lshr exact i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %xtraiter = and i64 %38, 1
  %39 = icmp eq i64 %36, 0
  br i1 %39, label %middle.block187.unr-lcssa, label %vector.ph200.new

vector.ph200.new:                                 ; preds = %vector.ph200
  %unroll_iter = sub nuw nsw i64 %38, %xtraiter
  %40 = load float, float* %m_fFFTScaler, align 4, !tbaa !202, !alias.scope !257
  %41 = insertelement <4 x float> undef, float %40, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = insertelement <4 x float> undef, float %40, i32 0
  %44 = shufflevector <4 x float> %43, <4 x float> undef, <4 x i32> zeroinitializer
  %45 = load float, float* %m_fFFTScaler, align 4, !tbaa !202, !alias.scope !257
  %46 = insertelement <4 x float> undef, float %45, i32 0
  %47 = shufflevector <4 x float> %46, <4 x float> undef, <4 x i32> zeroinitializer
  %48 = insertelement <4 x float> undef, float %45, i32 0
  %49 = shufflevector <4 x float> %48, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body186

vector.body186:                                   ; preds = %vector.body186, %vector.ph200.new
  %index203 = phi i64 [ 0, %vector.ph200.new ], [ %index.next204.1, %vector.body186 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph200.new ], [ %niter.nsub.1, %vector.body186 ]
  %50 = getelementptr inbounds float, float* %26, i64 %index203
  %51 = bitcast float* %50 to <4 x float>*
  %wide.load211 = load <4 x float>, <4 x float>* %51, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %52 = getelementptr inbounds float, float* %50, i64 4
  %53 = bitcast float* %52 to <4 x float>*
  %wide.load212 = load <4 x float>, <4 x float>* %53, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %54 = fmul <4 x float> %42, %wide.load211
  %55 = fmul <4 x float> %44, %wide.load212
  %56 = bitcast float* %50 to <4 x float>*
  store <4 x float> %54, <4 x float>* %56, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %57 = bitcast float* %52 to <4 x float>*
  store <4 x float> %55, <4 x float>* %57, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %index.next204 = or i64 %index203, 8
  %58 = getelementptr inbounds float, float* %26, i64 %index.next204
  %59 = bitcast float* %58 to <4 x float>*
  %wide.load211.1 = load <4 x float>, <4 x float>* %59, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %60 = getelementptr inbounds float, float* %58, i64 4
  %61 = bitcast float* %60 to <4 x float>*
  %wide.load212.1 = load <4 x float>, <4 x float>* %61, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %62 = fmul <4 x float> %47, %wide.load211.1
  %63 = fmul <4 x float> %49, %wide.load212.1
  %64 = bitcast float* %58 to <4 x float>*
  store <4 x float> %62, <4 x float>* %64, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %65 = bitcast float* %60 to <4 x float>*
  store <4 x float> %63, <4 x float>* %65, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %index.next204.1 = add i64 %index203, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block187.unr-lcssa, label %vector.body186, !llvm.loop !262

middle.block187.unr-lcssa:                        ; preds = %vector.body186, %vector.ph200
  %index203.unr = phi i64 [ 0, %vector.ph200 ], [ %index.next204.1, %vector.body186 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block187, label %vector.body186.epil

vector.body186.epil:                              ; preds = %middle.block187.unr-lcssa
  %66 = load float, float* %m_fFFTScaler, align 4, !tbaa !202, !alias.scope !257
  %67 = insertelement <4 x float> undef, float %66, i32 0
  %68 = shufflevector <4 x float> %67, <4 x float> undef, <4 x i32> zeroinitializer
  %69 = insertelement <4 x float> undef, float %66, i32 0
  %70 = shufflevector <4 x float> %69, <4 x float> undef, <4 x i32> zeroinitializer
  %71 = getelementptr inbounds float, float* %26, i64 %index203.unr
  %72 = bitcast float* %71 to <4 x float>*
  %wide.load211.epil = load <4 x float>, <4 x float>* %72, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %73 = getelementptr inbounds float, float* %71, i64 4
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load212.epil = load <4 x float>, <4 x float>* %74, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %75 = fmul <4 x float> %68, %wide.load211.epil
  %76 = fmul <4 x float> %70, %wide.load212.epil
  %77 = bitcast float* %71 to <4 x float>*
  store <4 x float> %75, <4 x float>* %77, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  %78 = bitcast float* %73 to <4 x float>*
  store <4 x float> %76, <4 x float>* %78, align 4, !tbaa !83, !alias.scope !260, !noalias !257
  br label %middle.block187

middle.block187:                                  ; preds = %vector.body186.epil, %middle.block187.unr-lcssa
  %cmp.n206 = icmp eq i64 %n.vec202, %28
  br i1 %cmp.n206, label %for.cond.cleanup73, label %for.body74.preheader

for.body19:                                       ; preds = %for.body19, %for.body19.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next, %for.body19 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %19, i64 %indvars.iv, i32 0
  %79 = load float, float* %r, align 4, !tbaa !263
  %r27 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %21, i64 %indvars.iv, i32 0
  %80 = load float, float* %r27, align 4, !tbaa !263
  %mul28 = fmul float %79, %80
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %19, i64 %indvars.iv, i32 1
  %81 = load float, float* %i, align 4, !tbaa !265
  %i37 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %21, i64 %indvars.iv, i32 1
  %82 = load float, float* %i37, align 4, !tbaa !265
  %mul38 = fmul float %81, %82
  %sub39 = fsub float %mul28, %mul38
  %mul51 = fmul float %79, %82
  %mul62 = fmul float %80, %81
  %add = fadd float %mul62, %mul51
  store float %sub39, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %83 = load i32, i32* %m_nFFTBins, align 8, !tbaa !201
  %84 = zext i32 %83 to i64
  %cmp17 = icmp ult i64 %indvars.iv.next, %84
  br i1 %cmp17, label %for.body19, label %for.cond.cleanup18, !prof !266

for.cond.cleanup73:                               ; preds = %for.body74, %middle.block187, %for.body74.prol.loopexit, %for.cond.cleanup18.for.cond.cleanup73_crit_edge
  %85 = phi i8* [ %.pre, %for.cond.cleanup18.for.cond.cleanup73_crit_edge ], [ %27, %middle.block187 ], [ %27, %for.body74 ], [ %27, %for.body74.prol.loopexit ]
  %86 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i158 = getelementptr inbounds float*, float** %86, i64 %indvars.iv174
  %87 = bitcast float** %arrayidx.i158 to i8**
  %88 = load i8*, i8** %87, align 8, !tbaa !76
  %89 = load i32, i32* %m_nBlockSize, align 4, !tbaa !195
  %conv87 = zext i32 %89 to i64
  %mul88 = shl nuw nsw i64 %conv87, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %85, i64 %mul88, i1 false)
  %90 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !198
  %cmp91163 = icmp eq i32 %90, 0
  %91 = load float**, float*** %m_pfOverlap, align 8, !tbaa !193
  %arrayidx95164 = getelementptr inbounds float*, float** %91, i64 %indvars.iv174
  br i1 %cmp91163, label %for.cond.cleanup73.for.cond.cleanup92_crit_edge, label %for.body93.lr.ph, !prof !267

for.cond.cleanup73.for.cond.cleanup92_crit_edge:  ; preds = %for.cond.cleanup73
  %.phi.trans.insert = bitcast float** %arrayidx95164 to i8**
  %.pre177 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !76
  br label %for.cond.cleanup92

for.body93.lr.ph:                                 ; preds = %for.cond.cleanup73
  %92 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i156 = getelementptr inbounds float*, float** %92, i64 %indvars.iv174
  %93 = load float*, float** %arrayidx.i156, align 8, !tbaa !76
  %94 = zext i32 %90 to i64
  %.pre176 = load float*, float** %arrayidx95164, align 8, !tbaa !76
  %95 = bitcast float* %.pre176 to i8*
  %min.iters.check = icmp ult i32 %90, 8
  br i1 %min.iters.check, label %for.body93.preheader, label %vector.memcheck

for.body93.preheader:                             ; preds = %middle.block, %vector.memcheck, %for.body93.lr.ph
  %indvars.iv172.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body93.lr.ph ], [ %n.vec, %middle.block ]
  %96 = or i64 %indvars.iv172.ph, 1
  %97 = icmp ugt i64 %96, %94
  %umax219 = select i1 %97, i64 %96, i64 %94
  %98 = xor i64 %indvars.iv172.ph, -1
  %99 = add nsw i64 %umax219, %98
  %xtraiter220 = and i64 %umax219, 3
  %lcmp.mod221 = icmp eq i64 %xtraiter220, 0
  br i1 %lcmp.mod221, label %for.body93.prol.loopexit, label %for.body93.prol

for.body93.prol:                                  ; preds = %for.body93.prol, %for.body93.preheader
  %indvars.iv172.prol = phi i64 [ %indvars.iv.next173.prol, %for.body93.prol ], [ %indvars.iv172.ph, %for.body93.preheader ]
  %prol.iter222 = phi i64 [ %prol.iter222.sub, %for.body93.prol ], [ %xtraiter220, %for.body93.preheader ]
  %arrayidx97.prol = getelementptr inbounds float, float* %.pre176, i64 %indvars.iv172.prol
  %100 = load float, float* %arrayidx97.prol, align 4, !tbaa !83
  %arrayidx102.prol = getelementptr inbounds float, float* %93, i64 %indvars.iv172.prol
  %101 = load float, float* %arrayidx102.prol, align 4, !tbaa !83
  %add103.prol = fadd float %100, %101
  store float %add103.prol, float* %arrayidx102.prol, align 4, !tbaa !83
  %indvars.iv.next173.prol = add nuw nsw i64 %indvars.iv172.prol, 1
  %prol.iter222.sub = add i64 %prol.iter222, -1
  %prol.iter222.cmp = icmp eq i64 %prol.iter222.sub, 0
  br i1 %prol.iter222.cmp, label %for.body93.prol.loopexit, label %for.body93.prol, !llvm.loop !268

for.body93.prol.loopexit:                         ; preds = %for.body93.prol, %for.body93.preheader
  %indvars.iv172.unr = phi i64 [ %indvars.iv172.ph, %for.body93.preheader ], [ %indvars.iv.next173.prol, %for.body93.prol ]
  %102 = icmp ult i64 %99, 3
  br i1 %102, label %for.cond.cleanup92, label %for.body93

vector.memcheck:                                  ; preds = %for.body93.lr.ph
  %scevgep = getelementptr float, float* %93, i64 %94
  %scevgep180 = getelementptr float, float* %.pre176, i64 %94
  %bound0 = icmp ult float* %93, %scevgep180
  %bound1 = icmp ult float* %.pre176, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body93.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %94, 4294967288
  %103 = add nsw i64 %n.vec, -8
  %104 = lshr exact i64 %103, 3
  %105 = add nuw nsw i64 %104, 1
  %xtraiter215 = and i64 %105, 1
  %106 = icmp eq i64 %103, 0
  br i1 %106, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter217 = sub nuw nsw i64 %105, %xtraiter215
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter218 = phi i64 [ %unroll_iter217, %vector.ph.new ], [ %niter218.nsub.1, %vector.body ]
  %107 = getelementptr inbounds float, float* %.pre176, i64 %index
  %108 = bitcast float* %107 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %108, align 4, !tbaa !83, !alias.scope !269
  %109 = getelementptr inbounds float, float* %107, i64 4
  %110 = bitcast float* %109 to <4 x float>*
  %wide.load183 = load <4 x float>, <4 x float>* %110, align 4, !tbaa !83, !alias.scope !269
  %111 = getelementptr inbounds float, float* %93, i64 %index
  %112 = bitcast float* %111 to <4 x float>*
  %wide.load184 = load <4 x float>, <4 x float>* %112, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %113 = getelementptr inbounds float, float* %111, i64 4
  %114 = bitcast float* %113 to <4 x float>*
  %wide.load185 = load <4 x float>, <4 x float>* %114, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %115 = fadd <4 x float> %wide.load, %wide.load184
  %116 = fadd <4 x float> %wide.load183, %wide.load185
  %117 = bitcast float* %111 to <4 x float>*
  store <4 x float> %115, <4 x float>* %117, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %118 = bitcast float* %113 to <4 x float>*
  store <4 x float> %116, <4 x float>* %118, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %index.next = or i64 %index, 8
  %119 = getelementptr inbounds float, float* %.pre176, i64 %index.next
  %120 = bitcast float* %119 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %120, align 4, !tbaa !83, !alias.scope !269
  %121 = getelementptr inbounds float, float* %119, i64 4
  %122 = bitcast float* %121 to <4 x float>*
  %wide.load183.1 = load <4 x float>, <4 x float>* %122, align 4, !tbaa !83, !alias.scope !269
  %123 = getelementptr inbounds float, float* %93, i64 %index.next
  %124 = bitcast float* %123 to <4 x float>*
  %wide.load184.1 = load <4 x float>, <4 x float>* %124, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %125 = getelementptr inbounds float, float* %123, i64 4
  %126 = bitcast float* %125 to <4 x float>*
  %wide.load185.1 = load <4 x float>, <4 x float>* %126, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %127 = fadd <4 x float> %wide.load.1, %wide.load184.1
  %128 = fadd <4 x float> %wide.load183.1, %wide.load185.1
  %129 = bitcast float* %123 to <4 x float>*
  store <4 x float> %127, <4 x float>* %129, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %130 = bitcast float* %125 to <4 x float>*
  store <4 x float> %128, <4 x float>* %130, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %index.next.1 = add i64 %index, 16
  %niter218.nsub.1 = add i64 %niter218, -2
  %niter218.ncmp.1 = icmp eq i64 %niter218.nsub.1, 0
  br i1 %niter218.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !274

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod216 = icmp eq i64 %xtraiter215, 0
  br i1 %lcmp.mod216, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %131 = getelementptr inbounds float, float* %.pre176, i64 %index.unr
  %132 = bitcast float* %131 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %132, align 4, !tbaa !83, !alias.scope !269
  %133 = getelementptr inbounds float, float* %131, i64 4
  %134 = bitcast float* %133 to <4 x float>*
  %wide.load183.epil = load <4 x float>, <4 x float>* %134, align 4, !tbaa !83, !alias.scope !269
  %135 = getelementptr inbounds float, float* %93, i64 %index.unr
  %136 = bitcast float* %135 to <4 x float>*
  %wide.load184.epil = load <4 x float>, <4 x float>* %136, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %137 = getelementptr inbounds float, float* %135, i64 4
  %138 = bitcast float* %137 to <4 x float>*
  %wide.load185.epil = load <4 x float>, <4 x float>* %138, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %139 = fadd <4 x float> %wide.load.epil, %wide.load184.epil
  %140 = fadd <4 x float> %wide.load183.epil, %wide.load185.epil
  %141 = bitcast float* %135 to <4 x float>*
  store <4 x float> %139, <4 x float>* %141, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  %142 = bitcast float* %137 to <4 x float>*
  store <4 x float> %140, <4 x float>* %142, align 4, !tbaa !83, !alias.scope !272, !noalias !269
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %94
  br i1 %cmp.n, label %for.cond.cleanup92, label %for.body93.preheader

for.body74:                                       ; preds = %for.body74, %for.body74.prol.loopexit
  %indvars.iv170 = phi i64 [ %indvars.iv.next171.3, %for.body74 ], [ %indvars.iv170.unr, %for.body74.prol.loopexit ]
  %143 = load float, float* %m_fFFTScaler, align 4, !tbaa !202
  %arrayidx77 = getelementptr inbounds float, float* %26, i64 %indvars.iv170
  %144 = load float, float* %arrayidx77, align 4, !tbaa !83
  %mul78 = fmul float %143, %144
  store float %mul78, float* %arrayidx77, align 4, !tbaa !83
  %indvars.iv.next171 = add nuw nsw i64 %indvars.iv170, 1
  %145 = load float, float* %m_fFFTScaler, align 4, !tbaa !202
  %arrayidx77.1 = getelementptr inbounds float, float* %26, i64 %indvars.iv.next171
  %146 = load float, float* %arrayidx77.1, align 4, !tbaa !83
  %mul78.1 = fmul float %145, %146
  store float %mul78.1, float* %arrayidx77.1, align 4, !tbaa !83
  %indvars.iv.next171.1 = add nuw nsw i64 %indvars.iv170, 2
  %147 = load float, float* %m_fFFTScaler, align 4, !tbaa !202
  %arrayidx77.2 = getelementptr inbounds float, float* %26, i64 %indvars.iv.next171.1
  %148 = load float, float* %arrayidx77.2, align 4, !tbaa !83
  %mul78.2 = fmul float %147, %148
  store float %mul78.2, float* %arrayidx77.2, align 4, !tbaa !83
  %indvars.iv.next171.2 = add nuw nsw i64 %indvars.iv170, 3
  %149 = load float, float* %m_fFFTScaler, align 4, !tbaa !202
  %arrayidx77.3 = getelementptr inbounds float, float* %26, i64 %indvars.iv.next171.2
  %150 = load float, float* %arrayidx77.3, align 4, !tbaa !83
  %mul78.3 = fmul float %149, %150
  store float %mul78.3, float* %arrayidx77.3, align 4, !tbaa !83
  %indvars.iv.next171.3 = add nuw nsw i64 %indvars.iv170, 4
  %cmp72.3 = icmp ult i64 %indvars.iv.next171.3, %28
  br i1 %cmp72.3, label %for.body74, label %for.cond.cleanup73, !prof !275, !llvm.loop !276

for.cond.cleanup92:                               ; preds = %for.body93, %middle.block, %for.body93.prol.loopexit, %for.cond.cleanup73.for.cond.cleanup92_crit_edge
  %151 = phi i8* [ %.pre177, %for.cond.cleanup73.for.cond.cleanup92_crit_edge ], [ %95, %middle.block ], [ %95, %for.body93 ], [ %95, %for.body93.prol.loopexit ]
  %152 = load float*, float** %m_pfScratchBufferA, align 8, !tbaa !188
  %153 = load i32, i32* %m_nBlockSize, align 4, !tbaa !195
  %idxprom112 = zext i32 %153 to i64
  %arrayidx113 = getelementptr inbounds float, float* %152, i64 %idxprom112
  %154 = bitcast float* %arrayidx113 to i8*
  %conv115 = zext i32 %90 to i64
  %mul116 = shl nuw nsw i64 %conv115, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %151, i8* align 4 %154, i64 %mul116, i1 false)
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %155 = load i32, i32* %3, align 8, !tbaa !101
  %156 = zext i32 %155 to i64
  %cmp = icmp ult i64 %indvars.iv.next175, %156
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !prof !277

for.body93:                                       ; preds = %for.body93, %for.body93.prol.loopexit
  %indvars.iv172 = phi i64 [ %indvars.iv.next173.3, %for.body93 ], [ %indvars.iv172.unr, %for.body93.prol.loopexit ]
  %arrayidx97 = getelementptr inbounds float, float* %.pre176, i64 %indvars.iv172
  %157 = load float, float* %arrayidx97, align 4, !tbaa !83
  %arrayidx102 = getelementptr inbounds float, float* %93, i64 %indvars.iv172
  %158 = load float, float* %arrayidx102, align 4, !tbaa !83
  %add103 = fadd float %157, %158
  store float %add103, float* %arrayidx102, align 4, !tbaa !83
  %indvars.iv.next173 = add nuw nsw i64 %indvars.iv172, 1
  %arrayidx97.1 = getelementptr inbounds float, float* %.pre176, i64 %indvars.iv.next173
  %159 = load float, float* %arrayidx97.1, align 4, !tbaa !83
  %arrayidx102.1 = getelementptr inbounds float, float* %93, i64 %indvars.iv.next173
  %160 = load float, float* %arrayidx102.1, align 4, !tbaa !83
  %add103.1 = fadd float %159, %160
  store float %add103.1, float* %arrayidx102.1, align 4, !tbaa !83
  %indvars.iv.next173.1 = add nuw nsw i64 %indvars.iv172, 2
  %arrayidx97.2 = getelementptr inbounds float, float* %.pre176, i64 %indvars.iv.next173.1
  %161 = load float, float* %arrayidx97.2, align 4, !tbaa !83
  %arrayidx102.2 = getelementptr inbounds float, float* %93, i64 %indvars.iv.next173.1
  %162 = load float, float* %arrayidx102.2, align 4, !tbaa !83
  %add103.2 = fadd float %161, %162
  store float %add103.2, float* %arrayidx102.2, align 4, !tbaa !83
  %indvars.iv.next173.2 = add nuw nsw i64 %indvars.iv172, 3
  %arrayidx97.3 = getelementptr inbounds float, float* %.pre176, i64 %indvars.iv.next173.2
  %163 = load float, float* %arrayidx97.3, align 4, !tbaa !83
  %arrayidx102.3 = getelementptr inbounds float, float* %93, i64 %indvars.iv.next173.2
  %164 = load float, float* %arrayidx102.3, align 4, !tbaa !83
  %add103.3 = fadd float %163, %164
  store float %add103.3, float* %arrayidx102.3, align 4, !tbaa !83
  %indvars.iv.next173.3 = add nuw nsw i64 %indvars.iv172, 4
  %cmp91.3 = icmp ult i64 %indvars.iv.next173.3, %94
  br i1 %cmp91.3, label %for.body93, label %for.cond.cleanup92, !prof !278, !llvm.loop !279
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder1_3DEP8CBFormatj(%class.CAmbisonicProcessor* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %cmp175 = icmp eq i32 %nSamples, 0
  br i1 %cmp175, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 3
  %1 = load float*, float** %arrayidx.i, align 8, !tbaa !76
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i174 = getelementptr inbounds float*, float** %0, i64 1
  %2 = load float*, float** %arrayidx.i174, align 8, !tbaa !76
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !186
  %arrayidx7 = getelementptr inbounds float, float* %3, i64 1
  %arrayidx.i172 = getelementptr inbounds float*, float** %0, i64 2
  %4 = load float*, float** %arrayidx.i172, align 8, !tbaa !76
  %arrayidx13 = getelementptr inbounds float, float* %3, i64 2
  %5 = bitcast float* %arrayidx13 to i32*
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 3
  %6 = bitcast float* %arrayidx7 to i32*
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %7 = load float, float* %arrayidx, align 4, !tbaa !83
  %8 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %9 = fmul float %7, %8
  %arrayidx5 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %10 = load float, float* %arrayidx5, align 4, !tbaa !83
  %11 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul6 = fmul float %10, %11
  %add = fsub float %mul6, %9
  store float %add, float* %arrayidx7, align 4, !tbaa !83
  %arrayidx11 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %12 = bitcast float* %arrayidx11 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !83
  store i32 %13, i32* %5, align 4, !tbaa !83
  %14 = load float, float* %arrayidx, align 4, !tbaa !83
  %15 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul19 = fmul float %14, %15
  %16 = load float, float* %arrayidx5, align 4, !tbaa !83
  %17 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %mul25 = fmul float %16, %17
  %add26 = fadd float %mul19, %mul25
  store float %add26, float* %arrayidx28, align 4, !tbaa !83
  %18 = bitcast float* %arrayidx5 to i32*
  store float %add, float* %arrayidx5, align 4, !tbaa !83
  %19 = load float, float* %arrayidx13, align 4, !tbaa !83
  %20 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul37 = fmul float %19, %20
  %21 = load float, float* %arrayidx28, align 4, !tbaa !83
  %22 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul40 = fmul float %21, %22
  %add41 = fadd float %mul37, %mul40
  store float %add41, float* %arrayidx11, align 4, !tbaa !83
  %23 = load float, float* %arrayidx28, align 4, !tbaa !83
  %24 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul49 = fmul float %23, %24
  %25 = load float, float* %arrayidx13, align 4, !tbaa !83
  %26 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul53 = fmul float %25, %26
  %sub54 = fsub float %mul49, %mul53
  store float %sub54, float* %arrayidx, align 4, !tbaa !83
  %27 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %28 = fmul float %sub54, %27
  %29 = load float, float* %arrayidx5, align 4, !tbaa !83
  %30 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul69 = fmul float %29, %30
  %add70 = fsub float %mul69, %28
  store float %add70, float* %arrayidx7, align 4, !tbaa !83
  %31 = load i32, i32* %12, align 4, !tbaa !83
  store i32 %31, i32* %5, align 4, !tbaa !83
  %32 = load float, float* %arrayidx, align 4, !tbaa !83
  %33 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul84 = fmul float %32, %33
  %34 = load float, float* %arrayidx5, align 4, !tbaa !83
  %35 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %mul90 = fmul float %34, %35
  %add91 = fadd float %mul84, %mul90
  store float %add91, float* %arrayidx28, align 4, !tbaa !83
  store float %add91, float* %arrayidx, align 4, !tbaa !83
  %36 = load i32, i32* %6, align 4, !tbaa !83
  store i32 %36, i32* %18, align 4, !tbaa !83
  %37 = load i32, i32* %5, align 4, !tbaa !83
  store i32 %37, i32* %12, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree norecurse nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder2_3DEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #12 align 2 !prof !103 {
entry:
  %cmp379 = icmp eq i32 %nSamples, 0
  br i1 %cmp379, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %0 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %0, i64 8
  %1 = load float*, float** %arrayidx.i, align 8, !tbaa !76
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  %arrayidx.i378 = getelementptr inbounds float*, float** %0, i64 4
  %2 = load float*, float** %arrayidx.i378, align 8, !tbaa !76
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %3 = load float*, float** %m_pfTempSample, align 8, !tbaa !186
  %arrayidx8 = getelementptr inbounds float, float* %3, i64 4
  %arrayidx.i376 = getelementptr inbounds float*, float** %0, i64 7
  %4 = load float*, float** %arrayidx.i376, align 8, !tbaa !76
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %arrayidx.i374 = getelementptr inbounds float*, float** %0, i64 5
  %5 = load float*, float** %arrayidx.i374, align 8, !tbaa !76
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %arrayidx22 = getelementptr inbounds float, float* %3, i64 5
  %arrayidx.i372 = getelementptr inbounds float*, float** %0, i64 6
  %6 = load float*, float** %arrayidx.i372, align 8, !tbaa !76
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 6
  %7 = bitcast float* %arrayidx28 to i32*
  %arrayidx43 = getelementptr inbounds float, float* %3, i64 7
  %arrayidx58 = getelementptr inbounds float, float* %3, i64 8
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %8 = bitcast float* %arrayidx43 to i32*
  %9 = bitcast float* %arrayidx22 to i32*
  %10 = bitcast float* %arrayidx58 to i32*
  %11 = bitcast float* %arrayidx8 to i32*
  %wide.trip.count = zext i32 %nSamples to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %1, i64 %indvars.iv
  %12 = load float, float* %arrayidx, align 4, !tbaa !83
  %13 = load float, float* %m_fSin2Alpha, align 4, !tbaa !241
  %14 = fmul float %12, %13
  %arrayidx6 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %15 = load float, float* %arrayidx6, align 4, !tbaa !83
  %16 = load float, float* %m_fCos2Alpha, align 8, !tbaa !240
  %mul7 = fmul float %15, %16
  %add = fsub float %mul7, %14
  store float %add, float* %arrayidx8, align 4, !tbaa !83
  %arrayidx12 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %17 = load float, float* %arrayidx12, align 4, !tbaa !83
  %18 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %19 = fmul float %17, %18
  %arrayidx18 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %20 = load float, float* %arrayidx18, align 4, !tbaa !83
  %21 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul19 = fmul float %20, %21
  %add20 = fsub float %mul19, %19
  store float %add20, float* %arrayidx22, align 4, !tbaa !83
  %arrayidx26 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %22 = bitcast float* %arrayidx26 to i32*
  %23 = load i32, i32* %22, align 4, !tbaa !83
  store i32 %23, i32* %7, align 4, !tbaa !83
  %24 = load float, float* %arrayidx12, align 4, !tbaa !83
  %25 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul34 = fmul float %24, %25
  %26 = load float, float* %arrayidx18, align 4, !tbaa !83
  %27 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %mul40 = fmul float %26, %27
  %add41 = fadd float %mul34, %mul40
  store float %add41, float* %arrayidx43, align 4, !tbaa !83
  %28 = load float, float* %arrayidx, align 4, !tbaa !83
  %29 = load float, float* %m_fCos2Alpha, align 8, !tbaa !240
  %mul49 = fmul float %28, %29
  %30 = load float, float* %arrayidx6, align 4, !tbaa !83
  %31 = load float, float* %m_fSin2Alpha, align 4, !tbaa !241
  %mul55 = fmul float %30, %31
  %add56 = fadd float %mul49, %mul55
  store float %add56, float* %arrayidx58, align 4, !tbaa !83
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %33 = fmul float %32, %add20
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul65 = fmul float %34, %add
  %add66 = fsub float %mul65, %33
  store float %add66, float* %arrayidx6, align 4, !tbaa !83
  %35 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %36 = load float, float* %arrayidx22, align 4, !tbaa !83
  %37 = fmul float %35, %36
  %38 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %39 = load float, float* %arrayidx8, align 4, !tbaa !83
  %mul79 = fmul float %38, %39
  %add80 = fsub float %mul79, %37
  store float %add80, float* %arrayidx18, align 4, !tbaa !83
  %40 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul85 = fmul float %40, 7.500000e-01
  %add86 = fadd float %mul85, 2.500000e-01
  %41 = load float, float* %arrayidx28, align 4, !tbaa !83
  %mul89 = fmul float %41, %add86
  %conv90 = fpext float %mul89 to double
  %42 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %conv94 = fpext float %42 to double
  %square = fmul double %conv94, %conv94
  %mul96 = fmul double %square, 0x3FEBB67AE0000000
  %43 = load float, float* %arrayidx58, align 4, !tbaa !83
  %conv99 = fpext float %43 to double
  %mul100 = fmul double %mul96, %conv99
  %add101 = fadd double %mul100, %conv90
  %mul103 = fmul float %42, 0x3FFBB67AE0000000
  %44 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul105 = fmul float %mul103, %44
  %45 = load float, float* %arrayidx43, align 4, !tbaa !83
  %mul108 = fmul float %mul105, %45
  %conv109 = fpext float %mul108 to double
  %add110 = fadd double %add101, %conv109
  %conv111 = fptrunc double %add110 to float
  store float %conv111, float* %arrayidx26, align 4, !tbaa !83
  %46 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %47 = load float, float* %arrayidx43, align 4, !tbaa !83
  %mul119 = fmul float %46, %47
  %48 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul121 = fmul float %48, 0x3FFBB67AE0000000
  %49 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul123 = fmul float %mul121, %49
  %50 = load float, float* %arrayidx28, align 4, !tbaa !83
  %mul126 = fmul float %mul123, %50
  %sub127 = fsub float %mul119, %mul126
  %mul130 = fmul float %48, %49
  %51 = load float, float* %arrayidx58, align 4, !tbaa !83
  %mul133 = fmul float %mul130, %51
  %add134 = fadd float %sub127, %mul133
  store float %add134, float* %arrayidx12, align 4, !tbaa !83
  %52 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul140 = fmul float %52, 2.500000e-01
  %add141 = fadd float %mul140, 7.500000e-01
  %53 = load float, float* %arrayidx58, align 4, !tbaa !83
  %mul144 = fmul float %53, %add141
  %54 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %55 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul147 = fmul float %54, %55
  %56 = load float, float* %arrayidx43, align 4, !tbaa !83
  %mul150 = fmul float %mul147, %56
  %sub151 = fsub float %mul144, %mul150
  %conv152 = fpext float %sub151 to double
  %conv156 = fpext float %55 to double
  %square324 = fmul double %conv156, %conv156
  %mul158 = fmul double %square324, 0x3FEBB67AE0000000
  %57 = load float, float* %arrayidx28, align 4, !tbaa !83
  %conv161 = fpext float %57 to double
  %mul162 = fmul double %mul158, %conv161
  %add163 = fadd double %mul162, %conv152
  %conv164 = fptrunc double %add163 to float
  store float %conv164, float* %arrayidx, align 4, !tbaa !83
  %58 = load float, float* %m_fSin2Gamma, align 4, !tbaa !245
  %59 = fmul float %58, %conv164
  %60 = load float, float* %arrayidx6, align 4, !tbaa !83
  %61 = load float, float* %m_fCos2Gamma, align 8, !tbaa !244
  %mul179 = fmul float %60, %61
  %add180 = fsub float %mul179, %59
  store float %add180, float* %arrayidx8, align 4, !tbaa !83
  %62 = load float, float* %arrayidx12, align 4, !tbaa !83
  %63 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %64 = fmul float %62, %63
  %65 = load float, float* %arrayidx18, align 4, !tbaa !83
  %66 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul193 = fmul float %65, %66
  %add194 = fsub float %mul193, %64
  store float %add194, float* %arrayidx22, align 4, !tbaa !83
  %67 = load i32, i32* %22, align 4, !tbaa !83
  store i32 %67, i32* %7, align 4, !tbaa !83
  %68 = load float, float* %arrayidx12, align 4, !tbaa !83
  %69 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul208 = fmul float %68, %69
  %70 = load float, float* %arrayidx18, align 4, !tbaa !83
  %71 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %mul214 = fmul float %70, %71
  %add215 = fadd float %mul208, %mul214
  store float %add215, float* %arrayidx43, align 4, !tbaa !83
  %72 = load float, float* %arrayidx, align 4, !tbaa !83
  %73 = load float, float* %m_fCos2Gamma, align 8, !tbaa !244
  %mul223 = fmul float %72, %73
  %74 = load float, float* %arrayidx6, align 4, !tbaa !83
  %75 = load float, float* %m_fSin2Gamma, align 4, !tbaa !245
  %mul229 = fmul float %74, %75
  %add230 = fadd float %mul223, %mul229
  store float %add230, float* %arrayidx58, align 4, !tbaa !83
  store i32 %67, i32* %22, align 4, !tbaa !83
  %76 = load i32, i32* %8, align 4, !tbaa !83
  %77 = bitcast float* %arrayidx12 to i32*
  store i32 %76, i32* %77, align 4, !tbaa !83
  %78 = load i32, i32* %9, align 4, !tbaa !83
  %79 = bitcast float* %arrayidx18 to i32*
  store i32 %78, i32* %79, align 4, !tbaa !83
  %80 = load i32, i32* %10, align 4, !tbaa !83
  %81 = bitcast float* %arrayidx to i32*
  store i32 %80, i32* %81, align 4, !tbaa !83
  %82 = load i32, i32* %11, align 4, !tbaa !83
  %83 = bitcast float* %arrayidx6 to i32*
  store i32 %82, i32* %83, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN19CAmbisonicProcessor16ProcessOrder3_3DEP8CBFormatj(%class.CAmbisonicProcessor* readonly %this, %class.CBFormat* readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #9 align 2 !prof !103 {
entry:
  %cmp685 = icmp eq i32 %nSamples, 0
  br i1 %cmp685, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 28
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 27
  %m_pfTempSample = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 2
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 22
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 21
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 16
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 15
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 23
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 18
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 30
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 29
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 32
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 31
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %this, i64 0, i32 19
  %wide.trip.count = zext i32 %nSamples to i64
  %.pre = load float*, float** %m_pfTempSample, align 8, !tbaa !186
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %0 = phi float* [ %.pre, %for.body.lr.ph ], [ %101, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %1, i64 15
  %2 = load float*, float** %arrayidx.i, align 8, !tbaa !76
  %arrayidx = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %3 = load float, float* %arrayidx, align 4, !tbaa !83
  %4 = load float, float* %m_fSin3Alpha, align 4, !tbaa !247
  %5 = fmul float %3, %4
  %arrayidx.i684 = getelementptr inbounds float*, float** %1, i64 9
  %6 = load float*, float** %arrayidx.i684, align 8, !tbaa !76
  %arrayidx10 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %7 = load float, float* %arrayidx10, align 4, !tbaa !83
  %8 = load float, float* %m_fCos3Alpha, align 8, !tbaa !246
  %mul11 = fmul float %7, %8
  %add = fsub float %mul11, %5
  %arrayidx12 = getelementptr inbounds float, float* %0, i64 9
  store float %add, float* %arrayidx12, align 4, !tbaa !83
  %arrayidx.i682 = getelementptr inbounds float*, float** %1, i64 14
  %9 = load float*, float** %arrayidx.i682, align 8, !tbaa !76
  %arrayidx16 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %10 = load float, float* %arrayidx16, align 4, !tbaa !83
  %11 = load float, float* %m_fSin2Alpha, align 4, !tbaa !241
  %12 = fmul float %10, %11
  %arrayidx.i680 = getelementptr inbounds float*, float** %1, i64 10
  %13 = load float*, float** %arrayidx.i680, align 8, !tbaa !76
  %arrayidx22 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %14 = load float, float* %arrayidx22, align 4, !tbaa !83
  %15 = load float, float* %m_fCos2Alpha, align 8, !tbaa !240
  %mul23 = fmul float %14, %15
  %add24 = fsub float %mul23, %12
  %arrayidx26 = getelementptr inbounds float, float* %0, i64 10
  store float %add24, float* %arrayidx26, align 4, !tbaa !83
  %arrayidx.i678 = getelementptr inbounds float*, float** %1, i64 13
  %16 = load float*, float** %arrayidx.i678, align 8, !tbaa !76
  %arrayidx30 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %17 = load float, float* %arrayidx30, align 4, !tbaa !83
  %18 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %19 = fmul float %17, %18
  %arrayidx.i676 = getelementptr inbounds float*, float** %1, i64 11
  %20 = load float*, float** %arrayidx.i676, align 8, !tbaa !76
  %arrayidx36 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %21 = load float, float* %arrayidx36, align 4, !tbaa !83
  %22 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul37 = fmul float %21, %22
  %add38 = fsub float %mul37, %19
  %arrayidx40 = getelementptr inbounds float, float* %0, i64 11
  store float %add38, float* %arrayidx40, align 4, !tbaa !83
  %arrayidx.i674 = getelementptr inbounds float*, float** %1, i64 12
  %23 = load float*, float** %arrayidx.i674, align 8, !tbaa !76
  %arrayidx44 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %24 = bitcast float* %arrayidx44 to i32*
  %25 = load i32, i32* %24, align 4, !tbaa !83
  %arrayidx46 = getelementptr inbounds float, float* %0, i64 12
  %26 = bitcast float* %arrayidx46 to i32*
  store i32 %25, i32* %26, align 4, !tbaa !83
  %27 = load float, float* %arrayidx30, align 4, !tbaa !83
  %28 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul52 = fmul float %27, %28
  %29 = load float, float* %arrayidx36, align 4, !tbaa !83
  %30 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %mul58 = fmul float %29, %30
  %add59 = fadd float %mul52, %mul58
  %arrayidx61 = getelementptr inbounds float, float* %0, i64 13
  store float %add59, float* %arrayidx61, align 4, !tbaa !83
  %31 = load float, float* %arrayidx16, align 4, !tbaa !83
  %32 = load float, float* %m_fCos2Alpha, align 8, !tbaa !240
  %mul67 = fmul float %31, %32
  %33 = load float, float* %arrayidx22, align 4, !tbaa !83
  %34 = load float, float* %m_fSin2Alpha, align 4, !tbaa !241
  %mul73 = fmul float %33, %34
  %add74 = fadd float %mul67, %mul73
  %arrayidx76 = getelementptr inbounds float, float* %0, i64 14
  store float %add74, float* %arrayidx76, align 4, !tbaa !83
  %35 = load float, float* %arrayidx, align 4, !tbaa !83
  %36 = load float, float* %m_fCos3Alpha, align 8, !tbaa !246
  %mul82 = fmul float %35, %36
  %37 = load float, float* %arrayidx10, align 4, !tbaa !83
  %38 = load float, float* %m_fSin3Alpha, align 4, !tbaa !247
  %mul88 = fmul float %37, %38
  %add89 = fadd float %mul82, %mul88
  %arrayidx91 = getelementptr inbounds float, float* %0, i64 15
  store float %add89, float* %arrayidx91, align 4, !tbaa !83
  %mul94 = fmul float %add, 1.250000e-01
  %39 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul95 = fmul float %39, 3.000000e+00
  %add96 = fadd float %mul95, 5.000000e+00
  %mul97 = fmul float %mul94, %add96
  %mul100 = fmul float %add24, 0x3FF3988E20000000
  %40 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul101 = fmul float %mul100, %40
  %41 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul102 = fmul float %mul101, %41
  %sub103 = fsub float %mul97, %mul102
  %conv104 = fpext float %sub103 to double
  %mul108 = fmul float %add38, 0x3FEEFBDEC0000000
  %conv109 = fpext float %mul108 to double
  %conv111 = fpext float %41 to double
  %square = fmul double %conv111, %conv111
  %mul113 = fmul double %square, %conv109
  %add114 = fadd double %mul113, %conv104
  %conv115 = fptrunc double %add114 to float
  store float %conv115, float* %arrayidx10, align 4, !tbaa !83
  %42 = load float, float* %arrayidx26, align 4, !tbaa !83
  %43 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul123 = fmul float %42, %43
  %44 = load float, float* %arrayidx40, align 4, !tbaa !83
  %mul126 = fmul float %44, 0x3FF94C5840000000
  %45 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul128 = fmul float %mul126, %45
  %46 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul130 = fmul float %mul128, %46
  %sub131 = fsub float %mul123, %mul130
  %47 = load float, float* %arrayidx12, align 4, !tbaa !83
  %mul134 = fmul float %47, 0x3FF3988E20000000
  %mul136 = fmul float %45, %mul134
  %mul138 = fmul float %46, %mul136
  %add139 = fadd float %sub131, %mul138
  store float %add139, float* %arrayidx22, align 4, !tbaa !83
  %48 = load float, float* %arrayidx40, align 4, !tbaa !83
  %mul146 = fmul float %48, 1.250000e-01
  %49 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul148 = fmul float %49, 5.000000e+00
  %add149 = fadd float %mul148, 3.000000e+00
  %mul150 = fmul float %mul146, %add149
  %50 = load float, float* %arrayidx26, align 4, !tbaa !83
  %mul153 = fmul float %50, 0x3FF94C5840000000
  %51 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul155 = fmul float %mul153, %51
  %52 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul157 = fmul float %mul155, %52
  %sub158 = fsub float %mul150, %mul157
  %conv159 = fpext float %sub158 to double
  %53 = load float, float* %arrayidx12, align 4, !tbaa !83
  %mul163 = fmul float %53, 0x3FEEFBDEC0000000
  %conv164 = fpext float %mul163 to double
  %conv166 = fpext float %52 to double
  %square602 = fmul double %conv166, %conv166
  %mul168 = fmul double %square602, %conv164
  %add169 = fadd double %mul168, %conv159
  %conv170 = fptrunc double %add169 to float
  store float %conv170, float* %arrayidx36, align 4, !tbaa !83
  %54 = load float, float* %arrayidx46, align 4, !tbaa !83
  %mul177 = fmul float %54, 2.500000e-01
  %55 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul179 = fmul float %mul177, %55
  %56 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul181 = fmul float %56, 1.500000e+01
  %add182 = fadd float %mul181, -1.000000e+00
  %mul183 = fmul float %mul179, %add182
  %conv184 = fpext float %mul183 to double
  %57 = load float, float* %arrayidx76, align 4, !tbaa !83
  %mul188 = fmul float %57, 0x3FFEFBDEC0000000
  %mul190 = fmul float %55, %mul188
  %conv191 = fpext float %mul190 to double
  %58 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %conv193 = fpext float %58 to double
  %square603 = fmul double %conv193, %conv193
  %mul195 = fmul double %square603, %conv191
  %add196 = fadd double %mul195, %conv184
  %59 = load float, float* %arrayidx91, align 4, !tbaa !83
  %mul200 = fmul float %59, 0x3FE94C5840000000
  %conv201 = fpext float %mul200 to double
  %call204 = tail call double @pow(double %conv193, double 3.000000e+00) #24
  %mul205 = fmul double %call204, %conv201
  %add206 = fadd double %add196, %mul205
  %60 = load float*, float** %m_pfTempSample, align 8, !tbaa !186
  %arrayidx209 = getelementptr inbounds float, float* %60, i64 13
  %61 = load float, float* %arrayidx209, align 4, !tbaa !83
  %mul210 = fmul float %61, 0x3FC3988E20000000
  %62 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %63 = load float, float* %m_fSin3Beta, align 4, !tbaa !249
  %mul212 = fmul float %63, 5.000000e+00
  %add213 = fadd float %62, %mul212
  %mul214 = fmul float %mul210, %add213
  %conv215 = fpext float %mul214 to double
  %add216 = fadd double %add206, %conv215
  %conv217 = fptrunc double %add216 to float
  %64 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i654 = getelementptr inbounds float*, float** %64, i64 12
  %65 = load float*, float** %arrayidx.i654, align 8, !tbaa !76
  %arrayidx221 = getelementptr inbounds float, float* %65, i64 %indvars.iv
  store float %conv217, float* %arrayidx221, align 4, !tbaa !83
  %66 = load float, float* %arrayidx209, align 4, !tbaa !83
  %mul224 = fmul float %66, 6.250000e-02
  %67 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %68 = load float, float* %m_fCos3Beta, align 8, !tbaa !248
  %mul226 = fmul float %68, 1.500000e+01
  %add227 = fadd float %67, %mul226
  %mul228 = fmul float %mul224, %add227
  %arrayidx231 = getelementptr inbounds float, float* %60, i64 14
  %69 = load float, float* %arrayidx231, align 4, !tbaa !83
  %mul232 = fmul float %69, 0x3FD94C5840000000
  %70 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul234 = fmul float %70, 3.000000e+00
  %add235 = fadd float %mul234, 1.000000e+00
  %mul236 = fmul float %mul232, %add235
  %71 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul238 = fmul float %71, %mul236
  %add239 = fadd float %mul228, %mul238
  %conv240 = fpext float %add239 to double
  %arrayidx243 = getelementptr inbounds float, float* %60, i64 15
  %72 = load float, float* %arrayidx243, align 4, !tbaa !83
  %mul244 = fmul float %72, 0x3FEEFBDEC0000000
  %mul246 = fmul float %67, %mul244
  %conv247 = fpext float %mul246 to double
  %conv249 = fpext float %71 to double
  %square604 = fmul double %conv249, %conv249
  %mul251 = fmul double %square604, %conv247
  %add252 = fadd double %mul251, %conv240
  %arrayidx256 = getelementptr inbounds float, float* %60, i64 12
  %73 = load float, float* %arrayidx256, align 4, !tbaa !83
  %conv257 = fpext float %73 to double
  %mul258 = fmul double %conv257, 0x3FC3988E20000000
  %74 = load float, float* %m_fSin3Beta, align 4, !tbaa !249
  %mul261 = fmul float %74, 5.000000e+00
  %add262 = fadd float %71, %mul261
  %conv263 = fpext float %add262 to double
  %mul264 = fmul double %mul258, %conv263
  %sub265 = fsub double %add252, %mul264
  %conv266 = fptrunc double %sub265 to float
  %arrayidx.i652 = getelementptr inbounds float*, float** %64, i64 13
  %75 = load float*, float** %arrayidx.i652, align 8, !tbaa !76
  %arrayidx270 = getelementptr inbounds float, float* %75, i64 %indvars.iv
  store float %conv266, float* %arrayidx270, align 4, !tbaa !83
  %76 = load float, float* %arrayidx231, align 4, !tbaa !83
  %mul273 = fmul float %76, 1.250000e-01
  %77 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul275 = fmul float %77, 5.000000e+00
  %78 = load float, float* %m_fCos3Beta, align 8, !tbaa !248
  %mul277 = fmul float %78, 3.000000e+00
  %add278 = fadd float %mul275, %mul277
  %mul279 = fmul float %mul273, %add278
  %79 = load float, float* %arrayidx243, align 4, !tbaa !83
  %mul283 = fmul float %79, 0x3FD3988E20000000
  %80 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %add285 = fadd float %80, 3.000000e+00
  %mul286 = fmul float %mul283, %add285
  %81 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul288 = fmul float %81, %mul286
  %add289 = fadd float %mul279, %mul288
  %conv290 = fpext float %add289 to double
  %82 = load float, float* %arrayidx256, align 4, !tbaa !83
  %mul294 = fmul float %82, 0x3FFEFBDEC0000000
  %mul296 = fmul float %77, %mul294
  %conv297 = fpext float %mul296 to double
  %conv299 = fpext float %81 to double
  %square605 = fmul double %conv299, %conv299
  %mul301 = fmul double %square605, %conv297
  %add302 = fadd double %mul301, %conv290
  %83 = load float, float* %arrayidx209, align 4, !tbaa !83
  %conv307 = fpext float %83 to double
  %mul308 = fmul double %conv307, 0x3FC94C5840000000
  %84 = load float, float* %m_fSin3Beta, align 4, !tbaa !249
  %mul311 = fmul float %84, 3.000000e+00
  %sub312 = fsub float %81, %mul311
  %conv313 = fpext float %sub312 to double
  %mul314 = fmul double %mul308, %conv313
  %add315 = fadd double %add302, %mul314
  %conv316 = fptrunc double %add315 to float
  %arrayidx.i650 = getelementptr inbounds float*, float** %64, i64 14
  %85 = load float*, float** %arrayidx.i650, align 8, !tbaa !76
  %arrayidx320 = getelementptr inbounds float, float* %85, i64 %indvars.iv
  store float %conv316, float* %arrayidx320, align 4, !tbaa !83
  %86 = load float, float* %arrayidx243, align 4, !tbaa !83
  %mul323 = fmul float %86, 6.250000e-02
  %87 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul325 = fmul float %87, 1.500000e+01
  %88 = load float, float* %m_fCos3Beta, align 8, !tbaa !248
  %add327 = fadd float %mul325, %88
  %mul328 = fmul float %mul323, %add327
  %89 = load float, float* %arrayidx231, align 4, !tbaa !83
  %mul332 = fmul float %89, 0x3FD3988E20000000
  %90 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %add334 = fadd float %90, 3.000000e+00
  %mul335 = fmul float %mul332, %add334
  %91 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul337 = fmul float %91, %mul335
  %sub338 = fsub float %mul328, %mul337
  %conv339 = fpext float %sub338 to double
  %92 = load float, float* %arrayidx209, align 4, !tbaa !83
  %mul343 = fmul float %92, 0x3FEEFBDEC0000000
  %mul345 = fmul float %87, %mul343
  %conv346 = fpext float %mul345 to double
  %conv348 = fpext float %91 to double
  %square606 = fmul double %conv348, %conv348
  %mul350 = fmul double %square606, %conv346
  %add351 = fadd double %mul350, %conv339
  %93 = load float, float* %arrayidx256, align 4, !tbaa !83
  %conv356 = fpext float %93 to double
  %mul357 = fmul double %conv356, 0x3FE94C5840000000
  %call360 = tail call double @pow(double %conv348, double 3.000000e+00) #24
  %mul361 = fmul double %call360, %mul357
  %sub362 = fsub double %add351, %mul361
  %conv363 = fptrunc double %sub362 to float
  %94 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i648 = getelementptr inbounds float*, float** %94, i64 15
  %95 = load float*, float** %arrayidx.i648, align 8, !tbaa !76
  %arrayidx367 = getelementptr inbounds float, float* %95, i64 %indvars.iv
  store float %conv363, float* %arrayidx367, align 4, !tbaa !83
  %96 = load float, float* %m_fSin3Gamma, align 4, !tbaa !251
  %97 = fmul float %96, %conv363
  %arrayidx.i644 = getelementptr inbounds float*, float** %94, i64 9
  %98 = load float*, float** %arrayidx.i644, align 8, !tbaa !76
  %arrayidx377 = getelementptr inbounds float, float* %98, i64 %indvars.iv
  %99 = load float, float* %arrayidx377, align 4, !tbaa !83
  %100 = load float, float* %m_fCos3Gamma, align 8, !tbaa !250
  %mul378 = fmul float %99, %100
  %add379 = fsub float %mul378, %97
  %101 = load float*, float** %m_pfTempSample, align 8, !tbaa !186
  %arrayidx381 = getelementptr inbounds float, float* %101, i64 9
  store float %add379, float* %arrayidx381, align 4, !tbaa !83
  %arrayidx.i642 = getelementptr inbounds float*, float** %94, i64 14
  %102 = load float*, float** %arrayidx.i642, align 8, !tbaa !76
  %arrayidx385 = getelementptr inbounds float, float* %102, i64 %indvars.iv
  %103 = load float, float* %arrayidx385, align 4, !tbaa !83
  %104 = load float, float* %m_fSin2Gamma, align 4, !tbaa !245
  %105 = fmul float %103, %104
  %arrayidx.i640 = getelementptr inbounds float*, float** %94, i64 10
  %106 = load float*, float** %arrayidx.i640, align 8, !tbaa !76
  %arrayidx391 = getelementptr inbounds float, float* %106, i64 %indvars.iv
  %107 = load float, float* %arrayidx391, align 4, !tbaa !83
  %108 = load float, float* %m_fCos2Gamma, align 8, !tbaa !244
  %mul392 = fmul float %107, %108
  %add393 = fsub float %mul392, %105
  %arrayidx395 = getelementptr inbounds float, float* %101, i64 10
  store float %add393, float* %arrayidx395, align 4, !tbaa !83
  %arrayidx.i638 = getelementptr inbounds float*, float** %94, i64 13
  %109 = load float*, float** %arrayidx.i638, align 8, !tbaa !76
  %arrayidx399 = getelementptr inbounds float, float* %109, i64 %indvars.iv
  %110 = load float, float* %arrayidx399, align 4, !tbaa !83
  %111 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %112 = fmul float %110, %111
  %arrayidx.i636 = getelementptr inbounds float*, float** %94, i64 11
  %113 = load float*, float** %arrayidx.i636, align 8, !tbaa !76
  %arrayidx405 = getelementptr inbounds float, float* %113, i64 %indvars.iv
  %114 = load float, float* %arrayidx405, align 4, !tbaa !83
  %115 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul406 = fmul float %114, %115
  %add407 = fsub float %mul406, %112
  %arrayidx409 = getelementptr inbounds float, float* %101, i64 11
  store float %add407, float* %arrayidx409, align 4, !tbaa !83
  %arrayidx.i634 = getelementptr inbounds float*, float** %94, i64 12
  %116 = load float*, float** %arrayidx.i634, align 8, !tbaa !76
  %arrayidx413 = getelementptr inbounds float, float* %116, i64 %indvars.iv
  %117 = bitcast float* %arrayidx413 to i32*
  %118 = load i32, i32* %117, align 4, !tbaa !83
  %arrayidx415 = getelementptr inbounds float, float* %101, i64 12
  %119 = bitcast float* %arrayidx415 to i32*
  store i32 %118, i32* %119, align 4, !tbaa !83
  %120 = load float, float* %arrayidx399, align 4, !tbaa !83
  %121 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul421 = fmul float %120, %121
  %122 = load float, float* %arrayidx405, align 4, !tbaa !83
  %123 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %mul427 = fmul float %122, %123
  %add428 = fadd float %mul421, %mul427
  %arrayidx430 = getelementptr inbounds float, float* %101, i64 13
  store float %add428, float* %arrayidx430, align 4, !tbaa !83
  %124 = load float, float* %arrayidx385, align 4, !tbaa !83
  %125 = load float, float* %m_fCos2Gamma, align 8, !tbaa !244
  %mul436 = fmul float %124, %125
  %126 = load float, float* %arrayidx391, align 4, !tbaa !83
  %127 = load float, float* %m_fSin2Gamma, align 4, !tbaa !245
  %mul442 = fmul float %126, %127
  %add443 = fadd float %mul436, %mul442
  %arrayidx445 = getelementptr inbounds float, float* %101, i64 14
  store float %add443, float* %arrayidx445, align 4, !tbaa !83
  %128 = load float, float* %arrayidx367, align 4, !tbaa !83
  %129 = load float, float* %m_fCos3Gamma, align 8, !tbaa !250
  %mul451 = fmul float %128, %129
  %130 = load float, float* %arrayidx377, align 4, !tbaa !83
  %131 = load float, float* %m_fSin3Gamma, align 4, !tbaa !251
  %mul457 = fmul float %130, %131
  %add458 = fadd float %mul451, %mul457
  %arrayidx460 = getelementptr inbounds float, float* %101, i64 15
  store float %add458, float* %arrayidx460, align 4, !tbaa !83
  store float %add379, float* %arrayidx377, align 4, !tbaa !83
  %132 = bitcast float* %arrayidx395 to i32*
  %133 = load i32, i32* %132, align 4, !tbaa !83
  %134 = bitcast float* %arrayidx391 to i32*
  store i32 %133, i32* %134, align 4, !tbaa !83
  %135 = bitcast float* %arrayidx409 to i32*
  %136 = load i32, i32* %135, align 4, !tbaa !83
  %137 = bitcast float* %arrayidx405 to i32*
  store i32 %136, i32* %137, align 4, !tbaa !83
  %138 = load i32, i32* %119, align 4, !tbaa !83
  store i32 %138, i32* %117, align 4, !tbaa !83
  %139 = bitcast float* %arrayidx430 to i32*
  %140 = load i32, i32* %139, align 4, !tbaa !83
  %141 = bitcast float* %arrayidx399 to i32*
  store i32 %140, i32* %141, align 4, !tbaa !83
  %142 = bitcast float* %arrayidx445 to i32*
  %143 = load i32, i32* %142, align 4, !tbaa !83
  %144 = bitcast float* %arrayidx385 to i32*
  store i32 %143, i32* %144, align 4, !tbaa !83
  %145 = bitcast float* %arrayidx460 to i32*
  %146 = load i32, i32* %145, align 4, !tbaa !83
  %147 = bitcast float* %arrayidx367 to i32*
  store i32 %146, i32* %147, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nounwind
declare double @pow(double, double) local_unnamed_addr #10

declare void @kiss_fftri(%struct.kiss_fftr_state*, %struct.kiss_fft_cpx*, float*) local_unnamed_addr #0

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerC2Ev(%class.CAmbisonicSpeaker* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !135 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !100
  %3 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !101
  %4 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !102
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1
  %fDistance.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 3, i32 2
  %5 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i, align 8, !tbaa !107
  %m_fGain.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerD2Ev(%class.CAmbisonicSpeaker* nocapture %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !116
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i, !prof !154

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !116
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i, !prof !154

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeakerD0Ev(%class.CAmbisonicSpeaker* %this) unnamed_addr #7 align 2 {
entry:
  tail call void @_ZN17CAmbisonicSpeakerD2Ev(%class.CAmbisonicSpeaker* %this) #24
  %0 = bitcast %class.CAmbisonicSpeaker* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicSpeaker9ConfigureEjbj(%class.CAmbisonicSpeaker* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !135 {
entry:
  %ref.tmp.i = alloca float, align 4
  %ref.tmp5.i = alloca float, align 4
  %frombool.i.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !97
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  store i8 %frombool.i.i, i8* %1, align 4, !tbaa !100
  %call.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  store i32 %call.i.i, i32* %2, align 8, !tbaa !101
  %m_pfCoeff.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1
  %conv.i = zext i32 %call.i.i to i64
  %3 = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #24
  store float 0.000000e+00, float* %ref.tmp.i, align 4, !tbaa !83
  %_M_finish.i.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %4 = bitcast float** %_M_finish.i.i.i to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !113
  %6 = bitcast %"class.std::vector.0"* %m_pfCoeff.i to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !116
  %sub.ptr.sub.i.i.i = sub i64 %5, %7
  %sub.ptr.div.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i, 2
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i.i.i, %conv.i
  %8 = inttoptr i64 %7 to float*
  br i1 %cmp.i.i, label %if.then.i.i, label %if.else.i.i, !prof !117

if.then.i.i:                                      ; preds = %entry
  %9 = inttoptr i64 %5 to float*
  %sub.i.i = sub nsw i64 %conv.i, %sub.ptr.div.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i, float* %9, i64 %sub.i.i, float* nonnull dereferenceable(4) %ref.tmp.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.else.i.i:                                      ; preds = %entry
  %cmp8.i.i = icmp ugt i64 %sub.ptr.div.i.i.i, %conv.i
  br i1 %cmp8.i.i, label %if.then9.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

if.then9.i.i:                                     ; preds = %if.else.i.i
  %add.ptr.i.i = getelementptr inbounds float, float* %8, i64 %conv.i
  store float* %add.ptr.i.i, float** %_M_finish.i.i.i, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i:          ; preds = %if.then9.i.i, %if.else.i.i, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #24
  %m_pfOrderWeights.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2
  %10 = load i32, i32* %0, align 8, !tbaa !97
  %add.i = add i32 %10, 1
  %conv4.i = zext i32 %add.i to i64
  %11 = bitcast float* %ref.tmp5.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #24
  store float 1.000000e+00, float* %ref.tmp5.i, align 4, !tbaa !83
  %_M_finish.i.i6.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast float** %_M_finish.i.i6.i to i64*
  %13 = load i64, i64* %12, align 8, !tbaa !113
  %14 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !116
  %sub.ptr.sub.i.i7.i = sub i64 %13, %15
  %sub.ptr.div.i.i8.i = ashr exact i64 %sub.ptr.sub.i.i7.i, 2
  %cmp.i9.i = icmp ult i64 %sub.ptr.div.i.i8.i, %conv4.i
  %16 = inttoptr i64 %15 to float*
  br i1 %cmp.i9.i, label %if.then.i11.i, label %if.else.i13.i, !prof !117

if.then.i11.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %17 = inttoptr i64 %13 to float*
  %sub.i10.i = sub nsw i64 %conv4.i, %sub.ptr.div.i.i8.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i, float* %17, i64 %sub.i10.i, float* nonnull dereferenceable(4) %ref.tmp5.i)
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.else.i13.i:                                    ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i
  %cmp8.i12.i = icmp ugt i64 %sub.ptr.div.i.i8.i, %conv4.i
  br i1 %cmp8.i12.i, label %if.then9.i15.i, label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

if.then9.i15.i:                                   ; preds = %if.else.i13.i
  %add.ptr.i14.i = getelementptr inbounds float, float* %16, i64 %conv4.i
  store float* %add.ptr.i14.i, float** %_M_finish.i.i6.i, align 8, !tbaa !113
  br label %_ZN16CAmbisonicSource9ConfigureEjbj.exit

_ZN16CAmbisonicSource9ConfigureEjbj.exit:         ; preds = %if.then9.i15.i, %if.else.i13.i, %if.then.i11.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #24
  ret i1 true
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN17CAmbisonicSpeaker7RefreshEv(%class.CAmbisonicSpeaker* readonly %this) unnamed_addr #9 align 2 !prof !280 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0
  tail call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf(%class.CAmbisonicSpeaker* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, i32 %nSamples, float* nocapture %pfDst) local_unnamed_addr #7 align 2 !prof !103 {
entry:
  %0 = bitcast float* %pfDst to i8*
  %conv = zext i32 %nSamples to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 %mul, i1 false)
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 4
  %2 = load i32, i32* %1, align 8, !tbaa !101
  %cmp63 = icmp eq i32 %2, 0
  br i1 %cmp63, label %for.end34, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 0, i32 2
  %_M_start.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %this, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %cmp1255 = icmp eq i32 %nSamples, 0
  br i1 %cmp1255, label %for.body, label %for.body.us.preheader

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %4 = add i32 %nSamples, -1
  %xtraiter = and i32 %nSamples, 3
  %5 = icmp ult i32 %4, 3
  %unroll_iter = sub i32 %nSamples, %xtraiter
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  %xtraiter119 = and i32 %nSamples, 3
  %6 = icmp ult i32 %4, 3
  %unroll_iter122 = sub i32 %nSamples, %xtraiter119
  %lcmp.mod121 = icmp eq i32 %xtraiter119, 0
  br label %for.body.us

for.body.us:                                      ; preds = %if.end.us, %for.body.us.preheader
  %7 = phi i32 [ %27, %if.end.us ], [ %2, %for.body.us.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end.us ], [ 0, %for.body.us.preheader ]
  %8 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i.us = getelementptr inbounds float*, float** %8, i64 %indvars.iv
  %9 = load float*, float** %arrayidx.i.us, align 8, !tbaa !76
  %10 = load i8, i8* %3, align 4, !tbaa !100, !range !104
  %tobool.us = icmp eq i8 %10, 0
  %11 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i.us = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %12 = load float, float* %add.ptr.i.us, align 4, !tbaa !83
  br i1 %tobool.us, label %for.body24.us.preheader, label %if.then.us

if.then.us:                                       ; preds = %for.body.us
  %conv5.us = fpext float %12 to double
  %13 = trunc i64 %indvars.iv to i32
  %conv6.us = uitofp i32 %13 to double
  %call7.us = tail call double @sqrt(double %conv6.us) #24
  %14 = tail call double @llvm.floor.f64(double %call7.us)
  %mul8.us = fmul double %14, 2.000000e+00
  %add.us = fadd double %mul8.us, 1.000000e+00
  %mul9.us = fmul double %add.us, %conv5.us
  %conv10.us = fptrunc double %mul9.us to float
  br i1 %5, label %if.end.us.loopexit112.unr-lcssa, label %for.body13.us

for.body13.us:                                    ; preds = %for.body13.us, %if.then.us
  %out.057.us = phi float* [ %incdec.ptr15.us.3, %for.body13.us ], [ %pfDst, %if.then.us ]
  %in.056.us = phi float* [ %incdec.ptr.us.3, %for.body13.us ], [ %9, %if.then.us ]
  %niter = phi i32 [ %niter.nsub.3, %for.body13.us ], [ %unroll_iter, %if.then.us ]
  %incdec.ptr.us = getelementptr inbounds float, float* %in.056.us, i64 1
  %15 = load float, float* %in.056.us, align 4, !tbaa !83
  %mul14.us = fmul float %15, %conv10.us
  %incdec.ptr15.us = getelementptr inbounds float, float* %out.057.us, i64 1
  %16 = load float, float* %out.057.us, align 4, !tbaa !83
  %add16.us = fadd float %16, %mul14.us
  store float %add16.us, float* %out.057.us, align 4, !tbaa !83
  %incdec.ptr.us.1 = getelementptr inbounds float, float* %in.056.us, i64 2
  %17 = load float, float* %incdec.ptr.us, align 4, !tbaa !83
  %mul14.us.1 = fmul float %17, %conv10.us
  %incdec.ptr15.us.1 = getelementptr inbounds float, float* %out.057.us, i64 2
  %18 = load float, float* %incdec.ptr15.us, align 4, !tbaa !83
  %add16.us.1 = fadd float %18, %mul14.us.1
  store float %add16.us.1, float* %incdec.ptr15.us, align 4, !tbaa !83
  %incdec.ptr.us.2 = getelementptr inbounds float, float* %in.056.us, i64 3
  %19 = load float, float* %incdec.ptr.us.1, align 4, !tbaa !83
  %mul14.us.2 = fmul float %19, %conv10.us
  %incdec.ptr15.us.2 = getelementptr inbounds float, float* %out.057.us, i64 3
  %20 = load float, float* %incdec.ptr15.us.1, align 4, !tbaa !83
  %add16.us.2 = fadd float %20, %mul14.us.2
  store float %add16.us.2, float* %incdec.ptr15.us.1, align 4, !tbaa !83
  %incdec.ptr.us.3 = getelementptr inbounds float, float* %in.056.us, i64 4
  %21 = load float, float* %incdec.ptr.us.2, align 4, !tbaa !83
  %mul14.us.3 = fmul float %21, %conv10.us
  %incdec.ptr15.us.3 = getelementptr inbounds float, float* %out.057.us, i64 4
  %22 = load float, float* %incdec.ptr15.us.2, align 4, !tbaa !83
  %add16.us.3 = fadd float %22, %mul14.us.3
  store float %add16.us.3, float* %incdec.ptr15.us.2, align 4, !tbaa !83
  %niter.nsub.3 = add i32 %niter, -4
  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %if.end.us.loopexit112.unr-lcssa, label %for.body13.us

for.body24.us.preheader:                          ; preds = %for.body.us
  %mul21.us = fmul float %12, 2.000000e+00
  br i1 %6, label %if.end.us.loopexit.unr-lcssa, label %for.body24.us

if.end.us.loopexit112.unr-lcssa:                  ; preds = %for.body13.us, %if.then.us
  %out.057.us.unr = phi float* [ %pfDst, %if.then.us ], [ %incdec.ptr15.us.3, %for.body13.us ]
  %in.056.us.unr = phi float* [ %9, %if.then.us ], [ %incdec.ptr.us.3, %for.body13.us ]
  br i1 %lcmp.mod, label %if.end.us.loopexit112, label %for.body13.us.epil

for.body13.us.epil:                               ; preds = %for.body13.us.epil, %if.end.us.loopexit112.unr-lcssa
  %out.057.us.epil = phi float* [ %incdec.ptr15.us.epil, %for.body13.us.epil ], [ %out.057.us.unr, %if.end.us.loopexit112.unr-lcssa ]
  %in.056.us.epil = phi float* [ %incdec.ptr.us.epil, %for.body13.us.epil ], [ %in.056.us.unr, %if.end.us.loopexit112.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.sub, %for.body13.us.epil ], [ %xtraiter, %if.end.us.loopexit112.unr-lcssa ]
  %incdec.ptr.us.epil = getelementptr inbounds float, float* %in.056.us.epil, i64 1
  %23 = load float, float* %in.056.us.epil, align 4, !tbaa !83
  %mul14.us.epil = fmul float %23, %conv10.us
  %incdec.ptr15.us.epil = getelementptr inbounds float, float* %out.057.us.epil, i64 1
  %24 = load float, float* %out.057.us.epil, align 4, !tbaa !83
  %add16.us.epil = fadd float %24, %mul14.us.epil
  store float %add16.us.epil, float* %out.057.us.epil, align 4, !tbaa !83
  %epil.iter.sub = add i32 %epil.iter, -1
  %epil.iter.cmp = icmp eq i32 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %if.end.us.loopexit112, label %for.body13.us.epil, !llvm.loop !281

if.end.us.loopexit112:                            ; preds = %for.body13.us.epil, %if.end.us.loopexit112.unr-lcssa
  %.pre = load i32, i32* %1, align 8, !tbaa !101
  br label %if.end.us

if.end.us.loopexit.unr-lcssa:                     ; preds = %for.body24.us, %for.body24.us.preheader
  %out.161.us.unr = phi float* [ %pfDst, %for.body24.us.preheader ], [ %incdec.ptr27.us.3, %for.body24.us ]
  %in.160.us.unr = phi float* [ %9, %for.body24.us.preheader ], [ %incdec.ptr25.us.3, %for.body24.us ]
  br i1 %lcmp.mod121, label %if.end.us, label %for.body24.us.epil

for.body24.us.epil:                               ; preds = %for.body24.us.epil, %if.end.us.loopexit.unr-lcssa
  %out.161.us.epil = phi float* [ %incdec.ptr27.us.epil, %for.body24.us.epil ], [ %out.161.us.unr, %if.end.us.loopexit.unr-lcssa ]
  %in.160.us.epil = phi float* [ %incdec.ptr25.us.epil, %for.body24.us.epil ], [ %in.160.us.unr, %if.end.us.loopexit.unr-lcssa ]
  %epil.iter120 = phi i32 [ %epil.iter120.sub, %for.body24.us.epil ], [ %xtraiter119, %if.end.us.loopexit.unr-lcssa ]
  %incdec.ptr25.us.epil = getelementptr inbounds float, float* %in.160.us.epil, i64 1
  %25 = load float, float* %in.160.us.epil, align 4, !tbaa !83
  %mul26.us.epil = fmul float %mul21.us, %25
  %incdec.ptr27.us.epil = getelementptr inbounds float, float* %out.161.us.epil, i64 1
  %26 = load float, float* %out.161.us.epil, align 4, !tbaa !83
  %add28.us.epil = fadd float %26, %mul26.us.epil
  store float %add28.us.epil, float* %out.161.us.epil, align 4, !tbaa !83
  %epil.iter120.sub = add i32 %epil.iter120, -1
  %epil.iter120.cmp = icmp eq i32 %epil.iter120.sub, 0
  br i1 %epil.iter120.cmp, label %if.end.us, label %for.body24.us.epil, !llvm.loop !282

if.end.us:                                        ; preds = %for.body24.us.epil, %if.end.us.loopexit.unr-lcssa, %if.end.us.loopexit112
  %27 = phi i32 [ %.pre, %if.end.us.loopexit112 ], [ %7, %for.body24.us.epil ], [ %7, %if.end.us.loopexit.unr-lcssa ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %28 = zext i32 %27 to i64
  %cmp.us = icmp ult i64 %indvars.iv.next, %28
  br i1 %cmp.us, label %for.body.us, label %for.end34

for.body24.us:                                    ; preds = %for.body24.us, %for.body24.us.preheader
  %out.161.us = phi float* [ %incdec.ptr27.us.3, %for.body24.us ], [ %pfDst, %for.body24.us.preheader ]
  %in.160.us = phi float* [ %incdec.ptr25.us.3, %for.body24.us ], [ %9, %for.body24.us.preheader ]
  %niter123 = phi i32 [ %niter123.nsub.3, %for.body24.us ], [ %unroll_iter122, %for.body24.us.preheader ]
  %incdec.ptr25.us = getelementptr inbounds float, float* %in.160.us, i64 1
  %29 = load float, float* %in.160.us, align 4, !tbaa !83
  %mul26.us = fmul float %mul21.us, %29
  %incdec.ptr27.us = getelementptr inbounds float, float* %out.161.us, i64 1
  %30 = load float, float* %out.161.us, align 4, !tbaa !83
  %add28.us = fadd float %30, %mul26.us
  store float %add28.us, float* %out.161.us, align 4, !tbaa !83
  %incdec.ptr25.us.1 = getelementptr inbounds float, float* %in.160.us, i64 2
  %31 = load float, float* %incdec.ptr25.us, align 4, !tbaa !83
  %mul26.us.1 = fmul float %mul21.us, %31
  %incdec.ptr27.us.1 = getelementptr inbounds float, float* %out.161.us, i64 2
  %32 = load float, float* %incdec.ptr27.us, align 4, !tbaa !83
  %add28.us.1 = fadd float %32, %mul26.us.1
  store float %add28.us.1, float* %incdec.ptr27.us, align 4, !tbaa !83
  %incdec.ptr25.us.2 = getelementptr inbounds float, float* %in.160.us, i64 3
  %33 = load float, float* %incdec.ptr25.us.1, align 4, !tbaa !83
  %mul26.us.2 = fmul float %mul21.us, %33
  %incdec.ptr27.us.2 = getelementptr inbounds float, float* %out.161.us, i64 3
  %34 = load float, float* %incdec.ptr27.us.1, align 4, !tbaa !83
  %add28.us.2 = fadd float %34, %mul26.us.2
  store float %add28.us.2, float* %incdec.ptr27.us.1, align 4, !tbaa !83
  %incdec.ptr25.us.3 = getelementptr inbounds float, float* %in.160.us, i64 4
  %35 = load float, float* %incdec.ptr25.us.2, align 4, !tbaa !83
  %mul26.us.3 = fmul float %mul21.us, %35
  %incdec.ptr27.us.3 = getelementptr inbounds float, float* %out.161.us, i64 4
  %36 = load float, float* %incdec.ptr27.us.2, align 4, !tbaa !83
  %add28.us.3 = fadd float %36, %mul26.us.3
  store float %add28.us.3, float* %incdec.ptr27.us.2, align 4, !tbaa !83
  %niter123.nsub.3 = add i32 %niter123, -4
  %niter123.ncmp.3 = icmp eq i32 %niter123.nsub.3, 0
  br i1 %niter123.ncmp.3, label %if.end.us.loopexit.unr-lcssa, label %for.body24.us

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %37 = phi i32 [ %39, %if.end ], [ %2, %for.body.lr.ph ]
  %niChannel.064 = phi i32 [ %inc33, %if.end ], [ 0, %for.body.lr.ph ]
  %38 = load i8, i8* %3, align 4, !tbaa !100, !range !104
  %tobool = icmp eq i8 %38, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %conv6 = uitofp i32 %niChannel.064 to double
  %call7 = tail call double @sqrt(double %conv6) #24
  %.pre115 = load i32, i32* %1, align 8, !tbaa !101
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %39 = phi i32 [ %.pre115, %if.then ], [ %37, %for.body ]
  %inc33 = add nuw i32 %niChannel.064, 1
  %cmp = icmp ult i32 %inc33, %39
  br i1 %cmp, label %for.body, label %for.end34

for.end34:                                        ; preds = %if.end, %if.end.us, %entry
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #15

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN17CAmbisonicDecoderC2Ev(%class.CAmbisonicDecoder* nocapture %this) unnamed_addr #5 align 2 !prof !283 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !100
  %3 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !101
  %4 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  %5 = bitcast i32* %m_nSpeakerSetUp to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoderD2Ev(%class.CAmbisonicDecoder* nocapture %this) unnamed_addr #7 align 2 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %tobool = icmp eq %class.CAmbisonicSpeaker* %1, null
  br i1 %tobool, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 -1, i32 0, i32 3, i32 2
  %3 = bitcast float* %2 to i8*
  %4 = bitcast float* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %arraydestroy.isempty = icmp eq i64 %5, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %5
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body, %arraydestroy.body.preheader
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element, %arraydestroy.body ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  tail call void @_ZN17CAmbisonicSpeakerD2Ev(%class.CAmbisonicSpeaker* nonnull %arraydestroy.element) #24
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %1
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %arraydestroy.body, %delete.notnull
  tail call void @_ZdaPv(i8* nonnull %3) #26
  br label %if.end

if.end:                                           ; preds = %arraydestroy.done3, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoderD0Ev(%class.CAmbisonicDecoder* %this) unnamed_addr #7 align 2 {
entry:
  tail call void @_ZN17CAmbisonicDecoderD2Ev(%class.CAmbisonicDecoder* %this) #24
  %0 = bitcast %class.CAmbisonicDecoder* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSpeakerSetUp, i32 %nSpeakers) local_unnamed_addr #3 align 2 !prof !283 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !97
  %1 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !100
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !101
  tail call void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers)
  %3 = bitcast %class.CAmbisonicDecoder* %this to void (%class.CAmbisonicDecoder*)***
  %vtable = load void (%class.CAmbisonicDecoder*)**, void (%class.CAmbisonicDecoder*)*** %3, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vtable, i64 4
  %4 = load void (%class.CAmbisonicDecoder*)*, void (%class.CAmbisonicDecoder*)** %vfn, align 8
  tail call void %4(%class.CAmbisonicDecoder* %this)
  ret i1 true
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder12SpeakerSetUpEij(%class.CAmbisonicDecoder* %this, i32 %nSpeakerSetUp, i32 %nSpeakers) local_unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !283 {
entry:
  %ref.tmp.i.i1753 = alloca float, align 4
  %ref.tmp5.i.i1754 = alloca float, align 4
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  store i32 %nSpeakerSetUp, i32* %m_nSpeakerSetUp, align 8, !tbaa !286
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %tobool = icmp eq %class.CAmbisonicSpeaker* %0, null
  br i1 %tobool, label %if.end, label %delete.notnull, !prof !287

delete.notnull:                                   ; preds = %entry
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 -1, i32 0, i32 3, i32 2
  %2 = bitcast float* %1 to i8*
  %3 = bitcast float* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %arraydestroy.isempty = icmp eq i64 %4, 0
  br i1 %arraydestroy.isempty, label %arraydestroy.done3, label %arraydestroy.body.preheader

arraydestroy.body.preheader:                      ; preds = %delete.notnull
  %delete.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %4
  br label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body, %arraydestroy.body.preheader
  %arraydestroy.elementPast = phi %class.CAmbisonicSpeaker* [ %arraydestroy.element, %arraydestroy.body ], [ %delete.end, %arraydestroy.body.preheader ]
  %arraydestroy.element = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arraydestroy.elementPast, i64 -1
  tail call void @_ZN17CAmbisonicSpeakerD2Ev(%class.CAmbisonicSpeaker* nonnull %arraydestroy.element) #24
  %arraydestroy.done = icmp eq %class.CAmbisonicSpeaker* %arraydestroy.element, %0
  br i1 %arraydestroy.done, label %arraydestroy.done3, label %arraydestroy.body

arraydestroy.done3:                               ; preds = %arraydestroy.body, %delete.notnull
  tail call void @_ZdaPv(i8* nonnull %2) #26
  %.pr = load i32, i32* %m_nSpeakerSetUp, align 8, !tbaa !286
  br label %if.end

if.end:                                           ; preds = %arraydestroy.done3, %entry
  %5 = phi i32 [ %nSpeakerSetUp, %entry ], [ %.pr, %arraydestroy.done3 ]
  switch i32 %5, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb18
    i32 1, label %sw.bb52
    i32 2, label %sw.bb103
    i32 3, label %sw.bb170
    i32 4, label %sw.bb252
    i32 5, label %for.body374.lr.ph
    i32 6, label %for.body423.lr.ph
    i32 7, label %for.body475.lr.ph
    i32 8, label %for.body527.lr.ph
    i32 9, label %for.body579.lr.ph
    i32 10, label %for.body631.lr.ph
    i32 11, label %sw.bb658
    i32 12, label %sw.bb751
    i32 13, label %sw.bb1087
    i32 14, label %sw.bb1181
  ], !prof !288

sw.bb:                                            ; preds = %if.end
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 %nSpeakers, i32* %m_nSpeakers, align 4, !tbaa !289
  %conv = zext i32 %nSpeakers to i64
  %6 = mul nuw nsw i64 %conv, 88
  %7 = add nuw nsw i64 %6, 8
  %call = tail call i8* @_Znam(i64 %7) #25
  %8 = bitcast i8* %call to i64*
  store i64 %conv, i64* %8, align 16
  %9 = getelementptr inbounds i8, i8* %call, i64 8
  %10 = bitcast i8* %9 to %class.CAmbisonicSpeaker*
  %isempty = icmp eq i32 %nSpeakers, 0
  br i1 %isempty, label %arrayctor.cont.thread, label %new.ctorloop

arrayctor.cont.thread:                            ; preds = %sw.bb
  %11 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %9, i8** %11, align 8, !tbaa !284
  br label %sw.epilog

new.ctorloop:                                     ; preds = %sw.bb
  %arrayctor.end = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %10, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %arrayctor.loop, %new.ctorloop
  %arrayctor.cur = phi %class.CAmbisonicSpeaker* [ %10, %new.ctorloop ], [ %arrayctor.next, %arrayctor.loop ]
  %12 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8, !tbaa !97
  %14 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 2
  store i8 0, i8* %14, align 4, !tbaa !100
  %15 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %15, align 8, !tbaa !101
  %16 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %16, align 4, !tbaa !102
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 3, i32 2
  %17 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !107
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !tbaa !68
  %arrayctor.next = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %class.CAmbisonicSpeaker* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %arrayctor.loop
  %.pre = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %phitmp = icmp eq i32 %.pre, 0
  %18 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %9, i8** %18, align 8, !tbaa !284
  br i1 %phitmp, label %sw.epilog, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %arrayctor.cont
  %19 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %21 = load i32, i32* %19, align 8, !tbaa !97
  %22 = load i8, i8* %20, align 4, !tbaa !100, !range !104
  %tobool161793 = icmp ne i8 %22, 0
  %23 = bitcast i8* %9 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1794 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %23, align 8, !tbaa !68
  %vfn1795 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1794, i64 2
  %24 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1795, align 8
  %call171796 = tail call zeroext i1 %24(%class.CAmbisonicSpeaker* nonnull %10, i32 %21, i1 zeroext %tobool161793, i32 0)
  %25 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %cmp1797 = icmp ugt i32 %25, 1
  br i1 %cmp1797, label %for.body.for.body_crit_edge, label %sw.epilog

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %indvars.iv.next17191798 = phi i64 [ %indvars.iv.next1719, %for.body.for.body_crit_edge ], [ 1, %for.body.lr.ph ]
  %.pre1742 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %.pre1742, i64 %indvars.iv.next17191798
  %26 = load i32, i32* %19, align 8, !tbaa !97
  %27 = load i8, i8* %20, align 4, !tbaa !100, !range !104
  %tobool16 = icmp ne i8 %27, 0
  %28 = bitcast %class.CAmbisonicSpeaker* %arrayidx to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %28, align 8, !tbaa !68
  %vfn = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable, i64 2
  %29 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn, align 8
  %call17 = tail call zeroext i1 %29(%class.CAmbisonicSpeaker* nonnull %arrayidx, i32 %26, i1 zeroext %tobool16, i32 0)
  %indvars.iv.next1719 = add nuw nsw i64 %indvars.iv.next17191798, 1
  %30 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %31 = zext i32 %30 to i64
  %cmp = icmp ult i64 %indvars.iv.next1719, %31
  br i1 %cmp, label %for.body.for.body_crit_edge, label %sw.epilog

sw.bb18:                                          ; preds = %if.end
  %m_nSpeakers19 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 1, i32* %m_nSpeakers19, align 4, !tbaa !289
  %call22 = tail call i8* @_Znam(i64 96) #25
  %32 = bitcast i8* %call22 to i64*
  store i64 1, i64* %32, align 16
  %33 = getelementptr inbounds i8, i8* %call22, i64 8
  %34 = bitcast i8* %33 to i32 (...)***
  %35 = getelementptr inbounds i8, i8* %call22, i64 16
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds i8, i8* %call22, i64 20
  %38 = getelementptr inbounds i8, i8* %call22, i64 24
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 8, !tbaa !101
  %40 = getelementptr inbounds i8, i8* %call22, i64 28
  store i8 0, i8* %40, align 4, !tbaa !102
  %m_pfCoeff.i.i1610 = getelementptr inbounds i8, i8* %call22, i64 32
  %fDistance.i.i1611 = getelementptr inbounds i8, i8* %call22, i64 88
  %41 = bitcast i8* %fDistance.i.i1611 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1610, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %41, align 8, !tbaa !107
  %m_fGain.i.i1612 = getelementptr inbounds i8, i8* %call22, i64 92
  %42 = bitcast i8* %m_fGain.i.i1612 to float*
  store float 1.000000e+00, float* %42, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8, !tbaa !68
  %43 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %33, i8** %43, align 8, !tbaa !284
  %44 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8, !tbaa !97
  %46 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %47 = load i8, i8* %46, align 4, !tbaa !100, !range !104
  %tobool44 = icmp ne i8 %47, 0
  store i32 %45, i32* %36, align 8, !tbaa !97
  store i8 %47, i8* %37, align 4, !tbaa !100
  %call.i.i.i = tail call i32 @_Z17OrderToComponentsjb(i32 %45, i1 zeroext %tobool44)
  store i32 %call.i.i.i, i32* %39, align 8, !tbaa !101
  %conv.i.i = zext i32 %call.i.i.i to i64
  %48 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !83
  %_M_finish.i.i.i.i = getelementptr inbounds i8, i8* %call22, i64 40
  %49 = bitcast i8* %_M_finish.i.i.i.i to float**
  %50 = bitcast i8* %_M_finish.i.i.i.i to i64*
  %51 = load i64, i64* %50, align 8, !tbaa !113
  %52 = bitcast i8* %m_pfCoeff.i.i1610 to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !116
  %sub.ptr.sub.i.i.i.i = sub i64 %51, %53
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %54 = inttoptr i64 %53 to float*
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i, !prof !117

if.then.i.i.i:                                    ; preds = %sw.bb18
  %55 = bitcast i8* %m_pfCoeff.i.i1610 to %"class.std::vector.0"*
  %56 = inttoptr i64 %51 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %55, float* %56, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.else.i.i.i:                                    ; preds = %sw.bb18
  %cmp8.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp8.i.i.i, label %if.then9.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then9.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %54, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %49, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then9.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %48) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds i8, i8* %call22, i64 56
  %57 = load i32, i32* %36, align 8, !tbaa !97
  %add.i.i = add i32 %57, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %58 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !83
  %_M_finish.i.i6.i.i = getelementptr inbounds i8, i8* %call22, i64 64
  %59 = bitcast i8* %_M_finish.i.i6.i.i to float**
  %60 = bitcast i8* %_M_finish.i.i6.i.i to i64*
  %61 = load i64, i64* %60, align 8, !tbaa !113
  %62 = bitcast i8* %m_pfOrderWeights.i.i to i64*
  %63 = load i64, i64* %62, align 8, !tbaa !116
  %sub.ptr.sub.i.i7.i.i = sub i64 %61, %63
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %64 = inttoptr i64 %63 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i, !prof !117

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %65 = bitcast i8* %m_pfOrderWeights.i.i to %"class.std::vector.0"*
  %66 = inttoptr i64 %61 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %65, float* %66, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp8.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp8.i12.i.i, label %if.then9.i15.i.i, label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

if.then9.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %64, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %59, align 8, !tbaa !113
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit

_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit:        ; preds = %if.then9.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #24
  %67 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %68 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %67, align 8, !tbaa !284
  %69 = bitcast %class.CAmbisonicSource* %68 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable50 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %69, align 8, !tbaa !68
  %vfn51 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable50, i64 5
  %70 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn51, align 8
  tail call void %70(%class.CAmbisonicSource* %68, <2 x float> zeroinitializer, float 1.000000e+00)
  br label %sw.epilog

sw.bb52:                                          ; preds = %if.end
  %m_nSpeakers53 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 2, i32* %m_nSpeakers53, align 4, !tbaa !289
  %call56 = tail call i8* @_Znam(i64 184) #25
  %71 = bitcast i8* %call56 to i64*
  store i64 2, i64* %71, align 16
  %72 = getelementptr inbounds i8, i8* %call56, i64 8
  %73 = bitcast i8* %72 to i32 (...)***
  %74 = getelementptr inbounds i8, i8* %call56, i64 16
  %75 = bitcast i8* %74 to i32*
  store i32 0, i32* %75, align 8, !tbaa !97
  %76 = getelementptr inbounds i8, i8* %call56, i64 20
  store i8 0, i8* %76, align 4, !tbaa !100
  %77 = getelementptr inbounds i8, i8* %call56, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !tbaa !101
  %79 = getelementptr inbounds i8, i8* %call56, i64 28
  store i8 0, i8* %79, align 4, !tbaa !102
  %m_pfCoeff.i.i1613 = getelementptr inbounds i8, i8* %call56, i64 32
  %fDistance.i.i1614 = getelementptr inbounds i8, i8* %call56, i64 88
  %80 = bitcast i8* %fDistance.i.i1614 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1613, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %80, align 8, !tbaa !107
  %m_fGain.i.i1615 = getelementptr inbounds i8, i8* %call56, i64 92
  %81 = bitcast i8* %m_fGain.i.i1615 to float*
  store float 1.000000e+00, float* %81, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8, !tbaa !68
  %arrayctor.next70 = getelementptr inbounds i8, i8* %call56, i64 96
  %82 = bitcast i8* %arrayctor.next70 to i32 (...)***
  %83 = getelementptr inbounds i8, i8* %call56, i64 104
  %84 = bitcast i8* %83 to i32*
  store i32 0, i32* %84, align 8, !tbaa !97
  %85 = getelementptr inbounds i8, i8* %call56, i64 108
  store i8 0, i8* %85, align 4, !tbaa !100
  %86 = getelementptr inbounds i8, i8* %call56, i64 112
  %87 = bitcast i8* %86 to i32*
  store i32 0, i32* %87, align 8, !tbaa !101
  %88 = getelementptr inbounds i8, i8* %call56, i64 116
  store i8 0, i8* %88, align 4, !tbaa !102
  %m_pfCoeff.i.i1613.1 = getelementptr inbounds i8, i8* %call56, i64 120
  %fDistance.i.i1614.1 = getelementptr inbounds i8, i8* %call56, i64 176
  %89 = bitcast i8* %fDistance.i.i1614.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1613.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %89, align 8, !tbaa !107
  %m_fGain.i.i1615.1 = getelementptr inbounds i8, i8* %call56, i64 180
  %90 = bitcast i8* %m_fGain.i.i1615.1 to float*
  store float 1.000000e+00, float* %90, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8, !tbaa !68
  %91 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %72, i8** %91, align 8, !tbaa !284
  %call74 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1527 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call74, i32 0
  %92 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %93 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %94 = load i32, i32* %93, align 8, !tbaa !97
  %95 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %96 = load i8, i8* %95, align 4, !tbaa !100, !range !104
  %tobool79 = icmp ne i8 %96, 0
  %97 = bitcast %class.CAmbisonicSpeaker* %92 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable80 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %97, align 8, !tbaa !68
  %vfn81 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable80, i64 2
  %98 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn81, align 8
  %call82 = tail call zeroext i1 %98(%class.CAmbisonicSpeaker* %92, i32 %94, i1 zeroext %tobool79, i32 0)
  %99 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %100 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %99, align 8, !tbaa !284
  %101 = bitcast %class.CAmbisonicSource* %100 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable86 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %101, align 8, !tbaa !68
  %vfn87 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable86, i64 5
  %102 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn87, align 8
  tail call void %102(%class.CAmbisonicSource* %100, <2 x float> %polPosition.sroa.0.0.vec.insert1527, float 1.000000e+00)
  %call88 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1525 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1527, float %call88, i32 0
  %103 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx91 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %103, i64 1
  %104 = load i32, i32* %93, align 8, !tbaa !97
  %105 = load i8, i8* %95, align 4, !tbaa !100, !range !104
  %tobool94 = icmp ne i8 %105, 0
  %106 = bitcast %class.CAmbisonicSpeaker* %arrayidx91 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable95 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %106, align 8, !tbaa !68
  %vfn96 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable95, i64 2
  %107 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn96, align 8
  %call97 = tail call zeroext i1 %107(%class.CAmbisonicSpeaker* nonnull %arrayidx91, i32 %104, i1 zeroext %tobool94, i32 0)
  %108 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %109 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %108, i64 1, i32 0
  %110 = bitcast %class.CAmbisonicSource* %109 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable101 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %110, align 8, !tbaa !68
  %vfn102 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable101, i64 5
  %111 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn102, align 8
  tail call void %111(%class.CAmbisonicSource* nonnull %109, <2 x float> %polPosition.sroa.0.0.vec.insert1525, float 1.000000e+00)
  br label %sw.epilog

sw.bb103:                                         ; preds = %if.end
  %m_nSpeakers104 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 3, i32* %m_nSpeakers104, align 4, !tbaa !289
  %call107 = tail call i8* @_Znam(i64 272) #25
  %112 = bitcast i8* %call107 to i64*
  store i64 3, i64* %112, align 16
  %113 = getelementptr inbounds i8, i8* %call107, i64 8
  %114 = bitcast i8* %113 to i32 (...)***
  %115 = getelementptr inbounds i8, i8* %call107, i64 16
  %116 = bitcast i8* %115 to i32*
  store i32 0, i32* %116, align 8, !tbaa !97
  %117 = getelementptr inbounds i8, i8* %call107, i64 20
  store i8 0, i8* %117, align 4, !tbaa !100
  %118 = getelementptr inbounds i8, i8* %call107, i64 24
  %119 = bitcast i8* %118 to i32*
  store i32 0, i32* %119, align 8, !tbaa !101
  %120 = getelementptr inbounds i8, i8* %call107, i64 28
  store i8 0, i8* %120, align 4, !tbaa !102
  %m_pfCoeff.i.i1616 = getelementptr inbounds i8, i8* %call107, i64 32
  %fDistance.i.i1617 = getelementptr inbounds i8, i8* %call107, i64 88
  %121 = bitcast i8* %fDistance.i.i1617 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %121, align 8, !tbaa !107
  %m_fGain.i.i1618 = getelementptr inbounds i8, i8* %call107, i64 92
  %122 = bitcast i8* %m_fGain.i.i1618 to float*
  store float 1.000000e+00, float* %122, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8, !tbaa !68
  %arrayctor.next121 = getelementptr inbounds i8, i8* %call107, i64 96
  %123 = bitcast i8* %arrayctor.next121 to i32 (...)***
  %124 = getelementptr inbounds i8, i8* %call107, i64 104
  %125 = bitcast i8* %124 to i32*
  store i32 0, i32* %125, align 8, !tbaa !97
  %126 = getelementptr inbounds i8, i8* %call107, i64 108
  store i8 0, i8* %126, align 4, !tbaa !100
  %127 = getelementptr inbounds i8, i8* %call107, i64 112
  %128 = bitcast i8* %127 to i32*
  store i32 0, i32* %128, align 8, !tbaa !101
  %129 = getelementptr inbounds i8, i8* %call107, i64 116
  store i8 0, i8* %129, align 4, !tbaa !102
  %m_pfCoeff.i.i1616.1 = getelementptr inbounds i8, i8* %call107, i64 120
  %fDistance.i.i1617.1 = getelementptr inbounds i8, i8* %call107, i64 176
  %130 = bitcast i8* %fDistance.i.i1617.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %130, align 8, !tbaa !107
  %m_fGain.i.i1618.1 = getelementptr inbounds i8, i8* %call107, i64 180
  %131 = bitcast i8* %m_fGain.i.i1618.1 to float*
  store float 1.000000e+00, float* %131, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8, !tbaa !68
  %arrayctor.next121.1 = getelementptr inbounds i8, i8* %call107, i64 184
  %132 = bitcast i8* %arrayctor.next121.1 to i32 (...)***
  %133 = getelementptr inbounds i8, i8* %call107, i64 192
  %134 = bitcast i8* %133 to i32*
  store i32 0, i32* %134, align 8, !tbaa !97
  %135 = getelementptr inbounds i8, i8* %call107, i64 196
  store i8 0, i8* %135, align 4, !tbaa !100
  %136 = getelementptr inbounds i8, i8* %call107, i64 200
  %137 = bitcast i8* %136 to i32*
  store i32 0, i32* %137, align 8, !tbaa !101
  %138 = getelementptr inbounds i8, i8* %call107, i64 204
  store i8 0, i8* %138, align 4, !tbaa !102
  %m_pfCoeff.i.i1616.2 = getelementptr inbounds i8, i8* %call107, i64 208
  %fDistance.i.i1617.2 = getelementptr inbounds i8, i8* %call107, i64 264
  %139 = bitcast i8* %fDistance.i.i1617.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1616.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %139, align 8, !tbaa !107
  %m_fGain.i.i1618.2 = getelementptr inbounds i8, i8* %call107, i64 268
  %140 = bitcast i8* %m_fGain.i.i1618.2 to float*
  store float 1.000000e+00, float* %140, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8, !tbaa !68
  %141 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %113, i8** %141, align 8, !tbaa !284
  %call125 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1523 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call125, i32 0
  %142 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %143 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %144 = load i32, i32* %143, align 8, !tbaa !97
  %145 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %146 = load i8, i8* %145, align 4, !tbaa !100, !range !104
  %tobool131 = icmp ne i8 %146, 0
  %147 = bitcast %class.CAmbisonicSpeaker* %142 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %147, align 8, !tbaa !68
  %vfn133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable132, i64 2
  %148 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn133, align 8
  %call134 = tail call zeroext i1 %148(%class.CAmbisonicSpeaker* %142, i32 %144, i1 zeroext %tobool131, i32 0)
  %149 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %150 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %149, align 8, !tbaa !284
  %151 = bitcast %class.CAmbisonicSource* %150 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable138 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %151, align 8, !tbaa !68
  %vfn139 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable138, i64 5
  %152 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn139, align 8
  tail call void %152(%class.CAmbisonicSource* %150, <2 x float> %polPosition.sroa.0.0.vec.insert1523, float 1.000000e+00)
  %call140 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1521 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1523, float %call140, i32 0
  %153 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx143 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %153, i64 1
  %154 = load i32, i32* %143, align 8, !tbaa !97
  %155 = load i8, i8* %145, align 4, !tbaa !100, !range !104
  %tobool146 = icmp ne i8 %155, 0
  %156 = bitcast %class.CAmbisonicSpeaker* %arrayidx143 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable147 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %156, align 8, !tbaa !68
  %vfn148 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable147, i64 2
  %157 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn148, align 8
  %call149 = tail call zeroext i1 %157(%class.CAmbisonicSpeaker* nonnull %arrayidx143, i32 %154, i1 zeroext %tobool146, i32 0)
  %158 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %159 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %158, i64 1, i32 0
  %160 = bitcast %class.CAmbisonicSource* %159 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable153 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %160, align 8, !tbaa !68
  %vfn154 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable153, i64 5
  %161 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn154, align 8
  tail call void %161(%class.CAmbisonicSource* nonnull %159, <2 x float> %polPosition.sroa.0.0.vec.insert1521, float 1.000000e+00)
  %call155 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1519 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1521, float %call155, i32 0
  %162 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx158 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %162, i64 2
  %163 = load i32, i32* %143, align 8, !tbaa !97
  %164 = load i8, i8* %145, align 4, !tbaa !100, !range !104
  %tobool161 = icmp ne i8 %164, 0
  %165 = bitcast %class.CAmbisonicSpeaker* %arrayidx158 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable162 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %165, align 8, !tbaa !68
  %vfn163 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable162, i64 2
  %166 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn163, align 8
  %call164 = tail call zeroext i1 %166(%class.CAmbisonicSpeaker* nonnull %arrayidx158, i32 %163, i1 zeroext %tobool161, i32 0)
  %167 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %168 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %167, i64 2, i32 0
  %169 = bitcast %class.CAmbisonicSource* %168 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable168 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %169, align 8, !tbaa !68
  %vfn169 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable168, i64 5
  %170 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn169, align 8
  tail call void %170(%class.CAmbisonicSource* nonnull %168, <2 x float> %polPosition.sroa.0.0.vec.insert1519, float 1.000000e+00)
  br label %sw.epilog

sw.bb170:                                         ; preds = %if.end
  %m_nSpeakers171 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 4, i32* %m_nSpeakers171, align 4, !tbaa !289
  %call174 = tail call i8* @_Znam(i64 360) #25
  %171 = bitcast i8* %call174 to i64*
  store i64 4, i64* %171, align 16
  %172 = getelementptr inbounds i8, i8* %call174, i64 8
  %173 = bitcast i8* %172 to i32 (...)***
  %174 = getelementptr inbounds i8, i8* %call174, i64 16
  %175 = bitcast i8* %174 to i32*
  store i32 0, i32* %175, align 8, !tbaa !97
  %176 = getelementptr inbounds i8, i8* %call174, i64 20
  store i8 0, i8* %176, align 4, !tbaa !100
  %177 = getelementptr inbounds i8, i8* %call174, i64 24
  %178 = bitcast i8* %177 to i32*
  store i32 0, i32* %178, align 8, !tbaa !101
  %179 = getelementptr inbounds i8, i8* %call174, i64 28
  store i8 0, i8* %179, align 4, !tbaa !102
  %m_pfCoeff.i.i1622 = getelementptr inbounds i8, i8* %call174, i64 32
  %fDistance.i.i1623 = getelementptr inbounds i8, i8* %call174, i64 88
  %180 = bitcast i8* %fDistance.i.i1623 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1622, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %180, align 8, !tbaa !107
  %m_fGain.i.i1624 = getelementptr inbounds i8, i8* %call174, i64 92
  %181 = bitcast i8* %m_fGain.i.i1624 to float*
  store float 1.000000e+00, float* %181, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8, !tbaa !68
  %arrayctor.next188 = getelementptr inbounds i8, i8* %call174, i64 96
  %182 = bitcast i8* %arrayctor.next188 to i32 (...)***
  %183 = getelementptr inbounds i8, i8* %call174, i64 104
  %184 = bitcast i8* %183 to i32*
  store i32 0, i32* %184, align 8, !tbaa !97
  %185 = getelementptr inbounds i8, i8* %call174, i64 108
  store i8 0, i8* %185, align 4, !tbaa !100
  %186 = getelementptr inbounds i8, i8* %call174, i64 112
  %187 = bitcast i8* %186 to i32*
  store i32 0, i32* %187, align 8, !tbaa !101
  %188 = getelementptr inbounds i8, i8* %call174, i64 116
  store i8 0, i8* %188, align 4, !tbaa !102
  %m_pfCoeff.i.i1622.1 = getelementptr inbounds i8, i8* %call174, i64 120
  %fDistance.i.i1623.1 = getelementptr inbounds i8, i8* %call174, i64 176
  %189 = bitcast i8* %fDistance.i.i1623.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1622.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %189, align 8, !tbaa !107
  %m_fGain.i.i1624.1 = getelementptr inbounds i8, i8* %call174, i64 180
  %190 = bitcast i8* %m_fGain.i.i1624.1 to float*
  store float 1.000000e+00, float* %190, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8, !tbaa !68
  %arrayctor.next188.1 = getelementptr inbounds i8, i8* %call174, i64 184
  %191 = bitcast i8* %arrayctor.next188.1 to i32 (...)***
  %192 = getelementptr inbounds i8, i8* %call174, i64 192
  %193 = bitcast i8* %192 to i32*
  store i32 0, i32* %193, align 8, !tbaa !97
  %194 = getelementptr inbounds i8, i8* %call174, i64 196
  store i8 0, i8* %194, align 4, !tbaa !100
  %195 = getelementptr inbounds i8, i8* %call174, i64 200
  %196 = bitcast i8* %195 to i32*
  store i32 0, i32* %196, align 8, !tbaa !101
  %197 = getelementptr inbounds i8, i8* %call174, i64 204
  store i8 0, i8* %197, align 4, !tbaa !102
  %m_pfCoeff.i.i1622.2 = getelementptr inbounds i8, i8* %call174, i64 208
  %fDistance.i.i1623.2 = getelementptr inbounds i8, i8* %call174, i64 264
  %198 = bitcast i8* %fDistance.i.i1623.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1622.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %198, align 8, !tbaa !107
  %m_fGain.i.i1624.2 = getelementptr inbounds i8, i8* %call174, i64 268
  %199 = bitcast i8* %m_fGain.i.i1624.2 to float*
  store float 1.000000e+00, float* %199, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %191, align 8, !tbaa !68
  %arrayctor.next188.2 = getelementptr inbounds i8, i8* %call174, i64 272
  %200 = bitcast i8* %arrayctor.next188.2 to i32 (...)***
  %201 = getelementptr inbounds i8, i8* %call174, i64 280
  %202 = bitcast i8* %201 to i32*
  store i32 0, i32* %202, align 8, !tbaa !97
  %203 = getelementptr inbounds i8, i8* %call174, i64 284
  store i8 0, i8* %203, align 4, !tbaa !100
  %204 = getelementptr inbounds i8, i8* %call174, i64 288
  %205 = bitcast i8* %204 to i32*
  store i32 0, i32* %205, align 8, !tbaa !101
  %206 = getelementptr inbounds i8, i8* %call174, i64 292
  store i8 0, i8* %206, align 4, !tbaa !102
  %m_pfCoeff.i.i1622.3 = getelementptr inbounds i8, i8* %call174, i64 296
  %fDistance.i.i1623.3 = getelementptr inbounds i8, i8* %call174, i64 352
  %207 = bitcast i8* %fDistance.i.i1623.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1622.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %207, align 8, !tbaa !107
  %m_fGain.i.i1624.3 = getelementptr inbounds i8, i8* %call174, i64 356
  %208 = bitcast i8* %m_fGain.i.i1624.3 to float*
  store float 1.000000e+00, float* %208, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %200, align 8, !tbaa !68
  %209 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %172, i8** %209, align 8, !tbaa !284
  %call192 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1517 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call192, i32 0
  %210 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %211 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %212 = load i32, i32* %211, align 8, !tbaa !97
  %213 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %214 = load i8, i8* %213, align 4, !tbaa !100, !range !104
  %tobool198 = icmp ne i8 %214, 0
  %215 = bitcast %class.CAmbisonicSpeaker* %210 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable199 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %215, align 8, !tbaa !68
  %vfn200 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable199, i64 2
  %216 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn200, align 8
  %call201 = tail call zeroext i1 %216(%class.CAmbisonicSpeaker* %210, i32 %212, i1 zeroext %tobool198, i32 0)
  %217 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %218 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %217, align 8, !tbaa !284
  %219 = bitcast %class.CAmbisonicSource* %218 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable205 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %219, align 8, !tbaa !68
  %vfn206 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable205, i64 5
  %220 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn206, align 8
  tail call void %220(%class.CAmbisonicSource* %218, <2 x float> %polPosition.sroa.0.0.vec.insert1517, float 1.000000e+00)
  %call207 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1515 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1517, float %call207, i32 0
  %221 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx210 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %221, i64 1
  %222 = load i32, i32* %211, align 8, !tbaa !97
  %223 = load i8, i8* %213, align 4, !tbaa !100, !range !104
  %tobool213 = icmp ne i8 %223, 0
  %224 = bitcast %class.CAmbisonicSpeaker* %arrayidx210 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable214 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %224, align 8, !tbaa !68
  %vfn215 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable214, i64 2
  %225 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn215, align 8
  %call216 = tail call zeroext i1 %225(%class.CAmbisonicSpeaker* nonnull %arrayidx210, i32 %222, i1 zeroext %tobool213, i32 0)
  %226 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %227 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %226, i64 1, i32 0
  %228 = bitcast %class.CAmbisonicSource* %227 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable220 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %228, align 8, !tbaa !68
  %vfn221 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable220, i64 5
  %229 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn221, align 8
  tail call void %229(%class.CAmbisonicSource* nonnull %227, <2 x float> %polPosition.sroa.0.0.vec.insert1515, float 1.000000e+00)
  %call222 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1513 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1515, float %call222, i32 0
  %230 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx225 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %230, i64 2
  %231 = load i32, i32* %211, align 8, !tbaa !97
  %232 = load i8, i8* %213, align 4, !tbaa !100, !range !104
  %tobool228 = icmp ne i8 %232, 0
  %233 = bitcast %class.CAmbisonicSpeaker* %arrayidx225 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable229 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %233, align 8, !tbaa !68
  %vfn230 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable229, i64 2
  %234 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn230, align 8
  %call231 = tail call zeroext i1 %234(%class.CAmbisonicSpeaker* nonnull %arrayidx225, i32 %231, i1 zeroext %tobool228, i32 0)
  %235 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %236 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %235, i64 2, i32 0
  %237 = bitcast %class.CAmbisonicSource* %236 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable235 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %237, align 8, !tbaa !68
  %vfn236 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable235, i64 5
  %238 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn236, align 8
  tail call void %238(%class.CAmbisonicSource* nonnull %236, <2 x float> %polPosition.sroa.0.0.vec.insert1513, float 1.000000e+00)
  %call237 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1511 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1513, float %call237, i32 0
  %239 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx240 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %239, i64 3
  %240 = load i32, i32* %211, align 8, !tbaa !97
  %241 = load i8, i8* %213, align 4, !tbaa !100, !range !104
  %tobool243 = icmp ne i8 %241, 0
  %242 = bitcast %class.CAmbisonicSpeaker* %arrayidx240 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable244 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %242, align 8, !tbaa !68
  %vfn245 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable244, i64 2
  %243 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn245, align 8
  %call246 = tail call zeroext i1 %243(%class.CAmbisonicSpeaker* nonnull %arrayidx240, i32 %240, i1 zeroext %tobool243, i32 0)
  %244 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %245 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %244, i64 3, i32 0
  %246 = bitcast %class.CAmbisonicSource* %245 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable250 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %246, align 8, !tbaa !68
  %vfn251 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable250, i64 5
  %247 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn251, align 8
  tail call void %247(%class.CAmbisonicSource* nonnull %245, <2 x float> %polPosition.sroa.0.0.vec.insert1511, float 1.000000e+00)
  br label %sw.epilog

sw.bb252:                                         ; preds = %if.end
  %m_nSpeakers253 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 5, i32* %m_nSpeakers253, align 4, !tbaa !289
  %call256 = tail call i8* @_Znam(i64 448) #25
  %248 = bitcast i8* %call256 to i64*
  store i64 5, i64* %248, align 16
  %249 = getelementptr inbounds i8, i8* %call256, i64 8
  %250 = bitcast i8* %249 to i32 (...)***
  %251 = getelementptr inbounds i8, i8* %call256, i64 16
  %252 = bitcast i8* %251 to i32*
  store i32 0, i32* %252, align 8, !tbaa !97
  %253 = getelementptr inbounds i8, i8* %call256, i64 20
  store i8 0, i8* %253, align 4, !tbaa !100
  %254 = getelementptr inbounds i8, i8* %call256, i64 24
  %255 = bitcast i8* %254 to i32*
  store i32 0, i32* %255, align 8, !tbaa !101
  %256 = getelementptr inbounds i8, i8* %call256, i64 28
  store i8 0, i8* %256, align 4, !tbaa !102
  %m_pfCoeff.i.i1625 = getelementptr inbounds i8, i8* %call256, i64 32
  %fDistance.i.i1626 = getelementptr inbounds i8, i8* %call256, i64 88
  %257 = bitcast i8* %fDistance.i.i1626 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %257, align 8, !tbaa !107
  %m_fGain.i.i1627 = getelementptr inbounds i8, i8* %call256, i64 92
  %258 = bitcast i8* %m_fGain.i.i1627 to float*
  store float 1.000000e+00, float* %258, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %250, align 8, !tbaa !68
  %arrayctor.next270 = getelementptr inbounds i8, i8* %call256, i64 96
  %259 = bitcast i8* %arrayctor.next270 to i32 (...)***
  %260 = getelementptr inbounds i8, i8* %call256, i64 104
  %261 = bitcast i8* %260 to i32*
  store i32 0, i32* %261, align 8, !tbaa !97
  %262 = getelementptr inbounds i8, i8* %call256, i64 108
  store i8 0, i8* %262, align 4, !tbaa !100
  %263 = getelementptr inbounds i8, i8* %call256, i64 112
  %264 = bitcast i8* %263 to i32*
  store i32 0, i32* %264, align 8, !tbaa !101
  %265 = getelementptr inbounds i8, i8* %call256, i64 116
  store i8 0, i8* %265, align 4, !tbaa !102
  %m_pfCoeff.i.i1625.1 = getelementptr inbounds i8, i8* %call256, i64 120
  %fDistance.i.i1626.1 = getelementptr inbounds i8, i8* %call256, i64 176
  %266 = bitcast i8* %fDistance.i.i1626.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %266, align 8, !tbaa !107
  %m_fGain.i.i1627.1 = getelementptr inbounds i8, i8* %call256, i64 180
  %267 = bitcast i8* %m_fGain.i.i1627.1 to float*
  store float 1.000000e+00, float* %267, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %259, align 8, !tbaa !68
  %arrayctor.next270.1 = getelementptr inbounds i8, i8* %call256, i64 184
  %268 = bitcast i8* %arrayctor.next270.1 to i32 (...)***
  %269 = getelementptr inbounds i8, i8* %call256, i64 192
  %270 = bitcast i8* %269 to i32*
  store i32 0, i32* %270, align 8, !tbaa !97
  %271 = getelementptr inbounds i8, i8* %call256, i64 196
  store i8 0, i8* %271, align 4, !tbaa !100
  %272 = getelementptr inbounds i8, i8* %call256, i64 200
  %273 = bitcast i8* %272 to i32*
  store i32 0, i32* %273, align 8, !tbaa !101
  %274 = getelementptr inbounds i8, i8* %call256, i64 204
  store i8 0, i8* %274, align 4, !tbaa !102
  %m_pfCoeff.i.i1625.2 = getelementptr inbounds i8, i8* %call256, i64 208
  %fDistance.i.i1626.2 = getelementptr inbounds i8, i8* %call256, i64 264
  %275 = bitcast i8* %fDistance.i.i1626.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %275, align 8, !tbaa !107
  %m_fGain.i.i1627.2 = getelementptr inbounds i8, i8* %call256, i64 268
  %276 = bitcast i8* %m_fGain.i.i1627.2 to float*
  store float 1.000000e+00, float* %276, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %268, align 8, !tbaa !68
  %arrayctor.next270.2 = getelementptr inbounds i8, i8* %call256, i64 272
  %277 = bitcast i8* %arrayctor.next270.2 to i32 (...)***
  %278 = getelementptr inbounds i8, i8* %call256, i64 280
  %279 = bitcast i8* %278 to i32*
  store i32 0, i32* %279, align 8, !tbaa !97
  %280 = getelementptr inbounds i8, i8* %call256, i64 284
  store i8 0, i8* %280, align 4, !tbaa !100
  %281 = getelementptr inbounds i8, i8* %call256, i64 288
  %282 = bitcast i8* %281 to i32*
  store i32 0, i32* %282, align 8, !tbaa !101
  %283 = getelementptr inbounds i8, i8* %call256, i64 292
  store i8 0, i8* %283, align 4, !tbaa !102
  %m_pfCoeff.i.i1625.3 = getelementptr inbounds i8, i8* %call256, i64 296
  %fDistance.i.i1626.3 = getelementptr inbounds i8, i8* %call256, i64 352
  %284 = bitcast i8* %fDistance.i.i1626.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %284, align 8, !tbaa !107
  %m_fGain.i.i1627.3 = getelementptr inbounds i8, i8* %call256, i64 356
  %285 = bitcast i8* %m_fGain.i.i1627.3 to float*
  store float 1.000000e+00, float* %285, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %277, align 8, !tbaa !68
  %arrayctor.next270.3 = getelementptr inbounds i8, i8* %call256, i64 360
  %286 = bitcast i8* %arrayctor.next270.3 to i32 (...)***
  %287 = getelementptr inbounds i8, i8* %call256, i64 368
  %288 = bitcast i8* %287 to i32*
  store i32 0, i32* %288, align 8, !tbaa !97
  %289 = getelementptr inbounds i8, i8* %call256, i64 372
  store i8 0, i8* %289, align 4, !tbaa !100
  %290 = getelementptr inbounds i8, i8* %call256, i64 376
  %291 = bitcast i8* %290 to i32*
  store i32 0, i32* %291, align 8, !tbaa !101
  %292 = getelementptr inbounds i8, i8* %call256, i64 380
  store i8 0, i8* %292, align 4, !tbaa !102
  %m_pfCoeff.i.i1625.4 = getelementptr inbounds i8, i8* %call256, i64 384
  %fDistance.i.i1626.4 = getelementptr inbounds i8, i8* %call256, i64 440
  %293 = bitcast i8* %fDistance.i.i1626.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1625.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %293, align 8, !tbaa !107
  %m_fGain.i.i1627.4 = getelementptr inbounds i8, i8* %call256, i64 444
  %294 = bitcast i8* %m_fGain.i.i1627.4 to float*
  store float 1.000000e+00, float* %294, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %286, align 8, !tbaa !68
  %295 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %249, i8** %295, align 8, !tbaa !284
  %call274 = tail call float @_Z16DegreesToRadiansf(float 3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1509 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call274, i32 0
  %296 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %297 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %298 = load i32, i32* %297, align 8, !tbaa !97
  %299 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %300 = load i8, i8* %299, align 4, !tbaa !100, !range !104
  %tobool280 = icmp ne i8 %300, 0
  %301 = bitcast %class.CAmbisonicSpeaker* %296 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable281 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %301, align 8, !tbaa !68
  %vfn282 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable281, i64 2
  %302 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn282, align 8
  %call283 = tail call zeroext i1 %302(%class.CAmbisonicSpeaker* %296, i32 %298, i1 zeroext %tobool280, i32 0)
  %303 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %304 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %303, align 8, !tbaa !284
  %305 = bitcast %class.CAmbisonicSource* %304 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable287 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %305, align 8, !tbaa !68
  %vfn288 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable287, i64 5
  %306 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn288, align 8
  tail call void %306(%class.CAmbisonicSource* %304, <2 x float> %polPosition.sroa.0.0.vec.insert1509, float 1.000000e+00)
  %call289 = tail call float @_Z16DegreesToRadiansf(float -3.000000e+01)
  %polPosition.sroa.0.0.vec.insert1507 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1509, float %call289, i32 0
  %307 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx292 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %307, i64 1
  %308 = load i32, i32* %297, align 8, !tbaa !97
  %309 = load i8, i8* %299, align 4, !tbaa !100, !range !104
  %tobool295 = icmp ne i8 %309, 0
  %310 = bitcast %class.CAmbisonicSpeaker* %arrayidx292 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable296 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %310, align 8, !tbaa !68
  %vfn297 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable296, i64 2
  %311 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn297, align 8
  %call298 = tail call zeroext i1 %311(%class.CAmbisonicSpeaker* nonnull %arrayidx292, i32 %308, i1 zeroext %tobool295, i32 0)
  %312 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %313 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %312, i64 1, i32 0
  %314 = bitcast %class.CAmbisonicSource* %313 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable302 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %314, align 8, !tbaa !68
  %vfn303 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable302, i64 5
  %315 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn303, align 8
  tail call void %315(%class.CAmbisonicSource* nonnull %313, <2 x float> %polPosition.sroa.0.0.vec.insert1507, float 1.000000e+00)
  %call304 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1505 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1507, float %call304, i32 0
  %316 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx307 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %316, i64 2
  %317 = load i32, i32* %297, align 8, !tbaa !97
  %318 = load i8, i8* %299, align 4, !tbaa !100, !range !104
  %tobool310 = icmp ne i8 %318, 0
  %319 = bitcast %class.CAmbisonicSpeaker* %arrayidx307 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable311 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %319, align 8, !tbaa !68
  %vfn312 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable311, i64 2
  %320 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn312, align 8
  %call313 = tail call zeroext i1 %320(%class.CAmbisonicSpeaker* nonnull %arrayidx307, i32 %317, i1 zeroext %tobool310, i32 0)
  %321 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %322 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %321, i64 2, i32 0
  %323 = bitcast %class.CAmbisonicSource* %322 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable317 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %323, align 8, !tbaa !68
  %vfn318 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable317, i64 5
  %324 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn318, align 8
  tail call void %324(%class.CAmbisonicSource* nonnull %322, <2 x float> %polPosition.sroa.0.0.vec.insert1505, float 1.000000e+00)
  %call319 = tail call float @_Z16DegreesToRadiansf(float 1.100000e+02)
  %polPosition.sroa.0.0.vec.insert = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1505, float %call319, i32 0
  %325 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx322 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %325, i64 3
  %326 = load i32, i32* %297, align 8, !tbaa !97
  %327 = load i8, i8* %299, align 4, !tbaa !100, !range !104
  %tobool325 = icmp ne i8 %327, 0
  %328 = bitcast %class.CAmbisonicSpeaker* %arrayidx322 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable326 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %328, align 8, !tbaa !68
  %vfn327 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable326, i64 2
  %329 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn327, align 8
  %call328 = tail call zeroext i1 %329(%class.CAmbisonicSpeaker* nonnull %arrayidx322, i32 %326, i1 zeroext %tobool325, i32 0)
  %330 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %331 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %330, i64 3, i32 0
  %332 = bitcast %class.CAmbisonicSource* %331 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable332 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %332, align 8, !tbaa !68
  %vfn333 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable332, i64 5
  %333 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn333, align 8
  tail call void %333(%class.CAmbisonicSource* nonnull %331, <2 x float> %polPosition.sroa.0.0.vec.insert, float 1.000000e+00)
  %call334 = tail call float @_Z16DegreesToRadiansf(float -1.100000e+02)
  %polPosition.sroa.0.0.vec.insert1501 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert, float %call334, i32 0
  %334 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx337 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %334, i64 4
  %335 = load i32, i32* %297, align 8, !tbaa !97
  %336 = load i8, i8* %299, align 4, !tbaa !100, !range !104
  %tobool340 = icmp ne i8 %336, 0
  %337 = bitcast %class.CAmbisonicSpeaker* %arrayidx337 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable341 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %337, align 8, !tbaa !68
  %vfn342 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable341, i64 2
  %338 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn342, align 8
  %call343 = tail call zeroext i1 %338(%class.CAmbisonicSpeaker* nonnull %arrayidx337, i32 %335, i1 zeroext %tobool340, i32 0)
  %339 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %340 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %339, i64 4, i32 0
  %341 = bitcast %class.CAmbisonicSource* %340 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable347 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %341, align 8, !tbaa !68
  %vfn348 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable347, i64 5
  %342 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn348, align 8
  tail call void %342(%class.CAmbisonicSource* nonnull %340, <2 x float> %polPosition.sroa.0.0.vec.insert1501, float 1.000000e+00)
  br label %sw.epilog

for.body374.lr.ph:                                ; preds = %if.end
  %m_nSpeakers350 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 5, i32* %m_nSpeakers350, align 4, !tbaa !289
  %call353 = tail call i8* @_Znam(i64 448) #25
  %343 = bitcast i8* %call353 to i64*
  store i64 5, i64* %343, align 16
  %344 = getelementptr inbounds i8, i8* %call353, i64 8
  %345 = bitcast i8* %344 to i32 (...)***
  %346 = getelementptr inbounds i8, i8* %call353, i64 16
  %347 = bitcast i8* %346 to i32*
  store i32 0, i32* %347, align 8, !tbaa !97
  %348 = getelementptr inbounds i8, i8* %call353, i64 20
  store i8 0, i8* %348, align 4, !tbaa !100
  %349 = getelementptr inbounds i8, i8* %call353, i64 24
  %350 = bitcast i8* %349 to i32*
  store i32 0, i32* %350, align 8, !tbaa !101
  %351 = getelementptr inbounds i8, i8* %call353, i64 28
  store i8 0, i8* %351, align 4, !tbaa !102
  %m_pfCoeff.i.i1631 = getelementptr inbounds i8, i8* %call353, i64 32
  %fDistance.i.i1632 = getelementptr inbounds i8, i8* %call353, i64 88
  %352 = bitcast i8* %fDistance.i.i1632 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %352, align 8, !tbaa !107
  %m_fGain.i.i1633 = getelementptr inbounds i8, i8* %call353, i64 92
  %353 = bitcast i8* %m_fGain.i.i1633 to float*
  store float 1.000000e+00, float* %353, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %345, align 8, !tbaa !68
  %arrayctor.next367 = getelementptr inbounds i8, i8* %call353, i64 96
  %354 = bitcast i8* %arrayctor.next367 to i32 (...)***
  %355 = getelementptr inbounds i8, i8* %call353, i64 104
  %356 = bitcast i8* %355 to i32*
  store i32 0, i32* %356, align 8, !tbaa !97
  %357 = getelementptr inbounds i8, i8* %call353, i64 108
  store i8 0, i8* %357, align 4, !tbaa !100
  %358 = getelementptr inbounds i8, i8* %call353, i64 112
  %359 = bitcast i8* %358 to i32*
  store i32 0, i32* %359, align 8, !tbaa !101
  %360 = getelementptr inbounds i8, i8* %call353, i64 116
  store i8 0, i8* %360, align 4, !tbaa !102
  %m_pfCoeff.i.i1631.1 = getelementptr inbounds i8, i8* %call353, i64 120
  %fDistance.i.i1632.1 = getelementptr inbounds i8, i8* %call353, i64 176
  %361 = bitcast i8* %fDistance.i.i1632.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %361, align 8, !tbaa !107
  %m_fGain.i.i1633.1 = getelementptr inbounds i8, i8* %call353, i64 180
  %362 = bitcast i8* %m_fGain.i.i1633.1 to float*
  store float 1.000000e+00, float* %362, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %354, align 8, !tbaa !68
  %arrayctor.next367.1 = getelementptr inbounds i8, i8* %call353, i64 184
  %363 = bitcast i8* %arrayctor.next367.1 to i32 (...)***
  %364 = getelementptr inbounds i8, i8* %call353, i64 192
  %365 = bitcast i8* %364 to i32*
  store i32 0, i32* %365, align 8, !tbaa !97
  %366 = getelementptr inbounds i8, i8* %call353, i64 196
  store i8 0, i8* %366, align 4, !tbaa !100
  %367 = getelementptr inbounds i8, i8* %call353, i64 200
  %368 = bitcast i8* %367 to i32*
  store i32 0, i32* %368, align 8, !tbaa !101
  %369 = getelementptr inbounds i8, i8* %call353, i64 204
  store i8 0, i8* %369, align 4, !tbaa !102
  %m_pfCoeff.i.i1631.2 = getelementptr inbounds i8, i8* %call353, i64 208
  %fDistance.i.i1632.2 = getelementptr inbounds i8, i8* %call353, i64 264
  %370 = bitcast i8* %fDistance.i.i1632.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %370, align 8, !tbaa !107
  %m_fGain.i.i1633.2 = getelementptr inbounds i8, i8* %call353, i64 268
  %371 = bitcast i8* %m_fGain.i.i1633.2 to float*
  store float 1.000000e+00, float* %371, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %363, align 8, !tbaa !68
  %arrayctor.next367.2 = getelementptr inbounds i8, i8* %call353, i64 272
  %372 = bitcast i8* %arrayctor.next367.2 to i32 (...)***
  %373 = getelementptr inbounds i8, i8* %call353, i64 280
  %374 = bitcast i8* %373 to i32*
  store i32 0, i32* %374, align 8, !tbaa !97
  %375 = getelementptr inbounds i8, i8* %call353, i64 284
  store i8 0, i8* %375, align 4, !tbaa !100
  %376 = getelementptr inbounds i8, i8* %call353, i64 288
  %377 = bitcast i8* %376 to i32*
  store i32 0, i32* %377, align 8, !tbaa !101
  %378 = getelementptr inbounds i8, i8* %call353, i64 292
  store i8 0, i8* %378, align 4, !tbaa !102
  %m_pfCoeff.i.i1631.3 = getelementptr inbounds i8, i8* %call353, i64 296
  %fDistance.i.i1632.3 = getelementptr inbounds i8, i8* %call353, i64 352
  %379 = bitcast i8* %fDistance.i.i1632.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %379, align 8, !tbaa !107
  %m_fGain.i.i1633.3 = getelementptr inbounds i8, i8* %call353, i64 356
  %380 = bitcast i8* %m_fGain.i.i1633.3 to float*
  store float 1.000000e+00, float* %380, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %372, align 8, !tbaa !68
  %arrayctor.next367.3 = getelementptr inbounds i8, i8* %call353, i64 360
  %381 = bitcast i8* %arrayctor.next367.3 to i32 (...)***
  %382 = getelementptr inbounds i8, i8* %call353, i64 368
  %383 = bitcast i8* %382 to i32*
  store i32 0, i32* %383, align 8, !tbaa !97
  %384 = getelementptr inbounds i8, i8* %call353, i64 372
  store i8 0, i8* %384, align 4, !tbaa !100
  %385 = getelementptr inbounds i8, i8* %call353, i64 376
  %386 = bitcast i8* %385 to i32*
  store i32 0, i32* %386, align 8, !tbaa !101
  %387 = getelementptr inbounds i8, i8* %call353, i64 380
  store i8 0, i8* %387, align 4, !tbaa !102
  %m_pfCoeff.i.i1631.4 = getelementptr inbounds i8, i8* %call353, i64 384
  %fDistance.i.i1632.4 = getelementptr inbounds i8, i8* %call353, i64 440
  %388 = bitcast i8* %fDistance.i.i1632.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1631.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %388, align 8, !tbaa !107
  %m_fGain.i.i1633.4 = getelementptr inbounds i8, i8* %call353, i64 444
  %389 = bitcast i8* %m_fGain.i.i1633.4 to float*
  store float 1.000000e+00, float* %389, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %381, align 8, !tbaa !68
  %390 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %344, i8** %390, align 8, !tbaa !284
  %391 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %392 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body374

for.body374:                                      ; preds = %for.body374, %for.body374.lr.ph
  %indvars.iv1720 = phi i64 [ 0, %for.body374.lr.ph ], [ %indvars.iv.next1721, %for.body374 ]
  %393 = phi i32 [ 5, %for.body374.lr.ph ], [ %404, %for.body374 ]
  %polPosition.sroa.0.01673 = phi <2 x float> [ zeroinitializer, %for.body374.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1499, %for.body374 ]
  %394 = trunc i64 %indvars.iv1720 to i32
  %conv375 = uitofp i32 %394 to float
  %mul = fmul float %conv375, 3.600000e+02
  %conv377 = uitofp i32 %393 to float
  %div = fdiv float %mul, %conv377
  %call378 = tail call float @_Z16DegreesToRadiansf(float %div)
  %sub = fsub float -0.000000e+00, %call378
  %polPosition.sroa.0.0.vec.insert1499 = insertelement <2 x float> %polPosition.sroa.0.01673, float %sub, i32 0
  %395 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx382 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %395, i64 %indvars.iv1720
  %396 = load i32, i32* %391, align 8, !tbaa !97
  %397 = load i8, i8* %392, align 4, !tbaa !100, !range !104
  %tobool385 = icmp ne i8 %397, 0
  %398 = bitcast %class.CAmbisonicSpeaker* %arrayidx382 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable386 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %398, align 8, !tbaa !68
  %vfn387 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable386, i64 2
  %399 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn387, align 8
  %call388 = tail call zeroext i1 %399(%class.CAmbisonicSpeaker* %arrayidx382, i32 %396, i1 zeroext %tobool385, i32 0)
  %400 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %401 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %400, i64 %indvars.iv1720, i32 0
  %402 = bitcast %class.CAmbisonicSource* %401 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable393 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %402, align 8, !tbaa !68
  %vfn394 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable393, i64 5
  %403 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn394, align 8
  tail call void %403(%class.CAmbisonicSource* %401, <2 x float> %polPosition.sroa.0.0.vec.insert1499, float 1.000000e+00)
  %indvars.iv.next1721 = add nuw nsw i64 %indvars.iv1720, 1
  %404 = load i32, i32* %m_nSpeakers350, align 4, !tbaa !289
  %405 = zext i32 %404 to i64
  %cmp373 = icmp ult i64 %indvars.iv.next1721, %405
  br i1 %cmp373, label %for.body374, label %sw.epilog

for.body423.lr.ph:                                ; preds = %if.end
  %m_nSpeakers399 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 6, i32* %m_nSpeakers399, align 4, !tbaa !289
  %call402 = tail call i8* @_Znam(i64 536) #25
  %406 = bitcast i8* %call402 to i64*
  store i64 6, i64* %406, align 16
  %407 = getelementptr inbounds i8, i8* %call402, i64 8
  %408 = bitcast i8* %407 to i32 (...)***
  %409 = getelementptr inbounds i8, i8* %call402, i64 16
  %410 = bitcast i8* %409 to i32*
  store i32 0, i32* %410, align 8, !tbaa !97
  %411 = getelementptr inbounds i8, i8* %call402, i64 20
  store i8 0, i8* %411, align 4, !tbaa !100
  %412 = getelementptr inbounds i8, i8* %call402, i64 24
  %413 = bitcast i8* %412 to i32*
  store i32 0, i32* %413, align 8, !tbaa !101
  %414 = getelementptr inbounds i8, i8* %call402, i64 28
  store i8 0, i8* %414, align 4, !tbaa !102
  %m_pfCoeff.i.i1634 = getelementptr inbounds i8, i8* %call402, i64 32
  %fDistance.i.i1635 = getelementptr inbounds i8, i8* %call402, i64 88
  %415 = bitcast i8* %fDistance.i.i1635 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %415, align 8, !tbaa !107
  %m_fGain.i.i1636 = getelementptr inbounds i8, i8* %call402, i64 92
  %416 = bitcast i8* %m_fGain.i.i1636 to float*
  store float 1.000000e+00, float* %416, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %408, align 8, !tbaa !68
  %arrayctor.next416 = getelementptr inbounds i8, i8* %call402, i64 96
  %417 = bitcast i8* %arrayctor.next416 to i32 (...)***
  %418 = getelementptr inbounds i8, i8* %call402, i64 104
  %419 = bitcast i8* %418 to i32*
  store i32 0, i32* %419, align 8, !tbaa !97
  %420 = getelementptr inbounds i8, i8* %call402, i64 108
  store i8 0, i8* %420, align 4, !tbaa !100
  %421 = getelementptr inbounds i8, i8* %call402, i64 112
  %422 = bitcast i8* %421 to i32*
  store i32 0, i32* %422, align 8, !tbaa !101
  %423 = getelementptr inbounds i8, i8* %call402, i64 116
  store i8 0, i8* %423, align 4, !tbaa !102
  %m_pfCoeff.i.i1634.1 = getelementptr inbounds i8, i8* %call402, i64 120
  %fDistance.i.i1635.1 = getelementptr inbounds i8, i8* %call402, i64 176
  %424 = bitcast i8* %fDistance.i.i1635.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %424, align 8, !tbaa !107
  %m_fGain.i.i1636.1 = getelementptr inbounds i8, i8* %call402, i64 180
  %425 = bitcast i8* %m_fGain.i.i1636.1 to float*
  store float 1.000000e+00, float* %425, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %417, align 8, !tbaa !68
  %arrayctor.next416.1 = getelementptr inbounds i8, i8* %call402, i64 184
  %426 = bitcast i8* %arrayctor.next416.1 to i32 (...)***
  %427 = getelementptr inbounds i8, i8* %call402, i64 192
  %428 = bitcast i8* %427 to i32*
  store i32 0, i32* %428, align 8, !tbaa !97
  %429 = getelementptr inbounds i8, i8* %call402, i64 196
  store i8 0, i8* %429, align 4, !tbaa !100
  %430 = getelementptr inbounds i8, i8* %call402, i64 200
  %431 = bitcast i8* %430 to i32*
  store i32 0, i32* %431, align 8, !tbaa !101
  %432 = getelementptr inbounds i8, i8* %call402, i64 204
  store i8 0, i8* %432, align 4, !tbaa !102
  %m_pfCoeff.i.i1634.2 = getelementptr inbounds i8, i8* %call402, i64 208
  %fDistance.i.i1635.2 = getelementptr inbounds i8, i8* %call402, i64 264
  %433 = bitcast i8* %fDistance.i.i1635.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %433, align 8, !tbaa !107
  %m_fGain.i.i1636.2 = getelementptr inbounds i8, i8* %call402, i64 268
  %434 = bitcast i8* %m_fGain.i.i1636.2 to float*
  store float 1.000000e+00, float* %434, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %426, align 8, !tbaa !68
  %arrayctor.next416.2 = getelementptr inbounds i8, i8* %call402, i64 272
  %435 = bitcast i8* %arrayctor.next416.2 to i32 (...)***
  %436 = getelementptr inbounds i8, i8* %call402, i64 280
  %437 = bitcast i8* %436 to i32*
  store i32 0, i32* %437, align 8, !tbaa !97
  %438 = getelementptr inbounds i8, i8* %call402, i64 284
  store i8 0, i8* %438, align 4, !tbaa !100
  %439 = getelementptr inbounds i8, i8* %call402, i64 288
  %440 = bitcast i8* %439 to i32*
  store i32 0, i32* %440, align 8, !tbaa !101
  %441 = getelementptr inbounds i8, i8* %call402, i64 292
  store i8 0, i8* %441, align 4, !tbaa !102
  %m_pfCoeff.i.i1634.3 = getelementptr inbounds i8, i8* %call402, i64 296
  %fDistance.i.i1635.3 = getelementptr inbounds i8, i8* %call402, i64 352
  %442 = bitcast i8* %fDistance.i.i1635.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %442, align 8, !tbaa !107
  %m_fGain.i.i1636.3 = getelementptr inbounds i8, i8* %call402, i64 356
  %443 = bitcast i8* %m_fGain.i.i1636.3 to float*
  store float 1.000000e+00, float* %443, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %435, align 8, !tbaa !68
  %arrayctor.next416.3 = getelementptr inbounds i8, i8* %call402, i64 360
  %444 = bitcast i8* %arrayctor.next416.3 to i32 (...)***
  %445 = getelementptr inbounds i8, i8* %call402, i64 368
  %446 = bitcast i8* %445 to i32*
  store i32 0, i32* %446, align 8, !tbaa !97
  %447 = getelementptr inbounds i8, i8* %call402, i64 372
  store i8 0, i8* %447, align 4, !tbaa !100
  %448 = getelementptr inbounds i8, i8* %call402, i64 376
  %449 = bitcast i8* %448 to i32*
  store i32 0, i32* %449, align 8, !tbaa !101
  %450 = getelementptr inbounds i8, i8* %call402, i64 380
  store i8 0, i8* %450, align 4, !tbaa !102
  %m_pfCoeff.i.i1634.4 = getelementptr inbounds i8, i8* %call402, i64 384
  %fDistance.i.i1635.4 = getelementptr inbounds i8, i8* %call402, i64 440
  %451 = bitcast i8* %fDistance.i.i1635.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %451, align 8, !tbaa !107
  %m_fGain.i.i1636.4 = getelementptr inbounds i8, i8* %call402, i64 444
  %452 = bitcast i8* %m_fGain.i.i1636.4 to float*
  store float 1.000000e+00, float* %452, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %444, align 8, !tbaa !68
  %arrayctor.next416.4 = getelementptr inbounds i8, i8* %call402, i64 448
  %453 = bitcast i8* %arrayctor.next416.4 to i32 (...)***
  %454 = getelementptr inbounds i8, i8* %call402, i64 456
  %455 = bitcast i8* %454 to i32*
  store i32 0, i32* %455, align 8, !tbaa !97
  %456 = getelementptr inbounds i8, i8* %call402, i64 460
  store i8 0, i8* %456, align 4, !tbaa !100
  %457 = getelementptr inbounds i8, i8* %call402, i64 464
  %458 = bitcast i8* %457 to i32*
  store i32 0, i32* %458, align 8, !tbaa !101
  %459 = getelementptr inbounds i8, i8* %call402, i64 468
  store i8 0, i8* %459, align 4, !tbaa !102
  %m_pfCoeff.i.i1634.5 = getelementptr inbounds i8, i8* %call402, i64 472
  %fDistance.i.i1635.5 = getelementptr inbounds i8, i8* %call402, i64 528
  %460 = bitcast i8* %fDistance.i.i1635.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1634.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %460, align 8, !tbaa !107
  %m_fGain.i.i1636.5 = getelementptr inbounds i8, i8* %call402, i64 532
  %461 = bitcast i8* %m_fGain.i.i1636.5 to float*
  store float 1.000000e+00, float* %461, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %453, align 8, !tbaa !68
  %462 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %407, i8** %462, align 8, !tbaa !284
  %463 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %464 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body423

for.body423:                                      ; preds = %for.body423, %for.body423.lr.ph
  %indvars.iv1722 = phi i64 [ 0, %for.body423.lr.ph ], [ %indvars.iv.next1723, %for.body423 ]
  %465 = phi i32 [ 6, %for.body423.lr.ph ], [ %476, %for.body423 ]
  %polPosition.sroa.0.11676 = phi <2 x float> [ zeroinitializer, %for.body423.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1497, %for.body423 ]
  %466 = trunc i64 %indvars.iv1722 to i32
  %conv424 = uitofp i32 %466 to float
  %mul425 = fmul float %conv424, 3.600000e+02
  %conv427 = uitofp i32 %465 to float
  %div428 = fdiv float %mul425, %conv427
  %add = fadd float %div428, 3.000000e+01
  %call429 = tail call float @_Z16DegreesToRadiansf(float %add)
  %sub430 = fsub float -0.000000e+00, %call429
  %polPosition.sroa.0.0.vec.insert1497 = insertelement <2 x float> %polPosition.sroa.0.11676, float %sub430, i32 0
  %467 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx434 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %467, i64 %indvars.iv1722
  %468 = load i32, i32* %463, align 8, !tbaa !97
  %469 = load i8, i8* %464, align 4, !tbaa !100, !range !104
  %tobool437 = icmp ne i8 %469, 0
  %470 = bitcast %class.CAmbisonicSpeaker* %arrayidx434 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable438 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %470, align 8, !tbaa !68
  %vfn439 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable438, i64 2
  %471 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn439, align 8
  %call440 = tail call zeroext i1 %471(%class.CAmbisonicSpeaker* %arrayidx434, i32 %468, i1 zeroext %tobool437, i32 0)
  %472 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %473 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %472, i64 %indvars.iv1722, i32 0
  %474 = bitcast %class.CAmbisonicSource* %473 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable445 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %474, align 8, !tbaa !68
  %vfn446 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable445, i64 5
  %475 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn446, align 8
  tail call void %475(%class.CAmbisonicSource* %473, <2 x float> %polPosition.sroa.0.0.vec.insert1497, float 1.000000e+00)
  %indvars.iv.next1723 = add nuw nsw i64 %indvars.iv1722, 1
  %476 = load i32, i32* %m_nSpeakers399, align 4, !tbaa !289
  %477 = zext i32 %476 to i64
  %cmp422 = icmp ult i64 %indvars.iv.next1723, %477
  br i1 %cmp422, label %for.body423, label %sw.epilog

for.body475.lr.ph:                                ; preds = %if.end
  %m_nSpeakers451 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 6, i32* %m_nSpeakers451, align 4, !tbaa !289
  %call454 = tail call i8* @_Znam(i64 536) #25
  %478 = bitcast i8* %call454 to i64*
  store i64 6, i64* %478, align 16
  %479 = getelementptr inbounds i8, i8* %call454, i64 8
  %480 = bitcast i8* %479 to i32 (...)***
  %481 = getelementptr inbounds i8, i8* %call454, i64 16
  %482 = bitcast i8* %481 to i32*
  store i32 0, i32* %482, align 8, !tbaa !97
  %483 = getelementptr inbounds i8, i8* %call454, i64 20
  store i8 0, i8* %483, align 4, !tbaa !100
  %484 = getelementptr inbounds i8, i8* %call454, i64 24
  %485 = bitcast i8* %484 to i32*
  store i32 0, i32* %485, align 8, !tbaa !101
  %486 = getelementptr inbounds i8, i8* %call454, i64 28
  store i8 0, i8* %486, align 4, !tbaa !102
  %m_pfCoeff.i.i1637 = getelementptr inbounds i8, i8* %call454, i64 32
  %fDistance.i.i1638 = getelementptr inbounds i8, i8* %call454, i64 88
  %487 = bitcast i8* %fDistance.i.i1638 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %487, align 8, !tbaa !107
  %m_fGain.i.i1639 = getelementptr inbounds i8, i8* %call454, i64 92
  %488 = bitcast i8* %m_fGain.i.i1639 to float*
  store float 1.000000e+00, float* %488, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %480, align 8, !tbaa !68
  %arrayctor.next468 = getelementptr inbounds i8, i8* %call454, i64 96
  %489 = bitcast i8* %arrayctor.next468 to i32 (...)***
  %490 = getelementptr inbounds i8, i8* %call454, i64 104
  %491 = bitcast i8* %490 to i32*
  store i32 0, i32* %491, align 8, !tbaa !97
  %492 = getelementptr inbounds i8, i8* %call454, i64 108
  store i8 0, i8* %492, align 4, !tbaa !100
  %493 = getelementptr inbounds i8, i8* %call454, i64 112
  %494 = bitcast i8* %493 to i32*
  store i32 0, i32* %494, align 8, !tbaa !101
  %495 = getelementptr inbounds i8, i8* %call454, i64 116
  store i8 0, i8* %495, align 4, !tbaa !102
  %m_pfCoeff.i.i1637.1 = getelementptr inbounds i8, i8* %call454, i64 120
  %fDistance.i.i1638.1 = getelementptr inbounds i8, i8* %call454, i64 176
  %496 = bitcast i8* %fDistance.i.i1638.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %496, align 8, !tbaa !107
  %m_fGain.i.i1639.1 = getelementptr inbounds i8, i8* %call454, i64 180
  %497 = bitcast i8* %m_fGain.i.i1639.1 to float*
  store float 1.000000e+00, float* %497, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %489, align 8, !tbaa !68
  %arrayctor.next468.1 = getelementptr inbounds i8, i8* %call454, i64 184
  %498 = bitcast i8* %arrayctor.next468.1 to i32 (...)***
  %499 = getelementptr inbounds i8, i8* %call454, i64 192
  %500 = bitcast i8* %499 to i32*
  store i32 0, i32* %500, align 8, !tbaa !97
  %501 = getelementptr inbounds i8, i8* %call454, i64 196
  store i8 0, i8* %501, align 4, !tbaa !100
  %502 = getelementptr inbounds i8, i8* %call454, i64 200
  %503 = bitcast i8* %502 to i32*
  store i32 0, i32* %503, align 8, !tbaa !101
  %504 = getelementptr inbounds i8, i8* %call454, i64 204
  store i8 0, i8* %504, align 4, !tbaa !102
  %m_pfCoeff.i.i1637.2 = getelementptr inbounds i8, i8* %call454, i64 208
  %fDistance.i.i1638.2 = getelementptr inbounds i8, i8* %call454, i64 264
  %505 = bitcast i8* %fDistance.i.i1638.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %505, align 8, !tbaa !107
  %m_fGain.i.i1639.2 = getelementptr inbounds i8, i8* %call454, i64 268
  %506 = bitcast i8* %m_fGain.i.i1639.2 to float*
  store float 1.000000e+00, float* %506, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %498, align 8, !tbaa !68
  %arrayctor.next468.2 = getelementptr inbounds i8, i8* %call454, i64 272
  %507 = bitcast i8* %arrayctor.next468.2 to i32 (...)***
  %508 = getelementptr inbounds i8, i8* %call454, i64 280
  %509 = bitcast i8* %508 to i32*
  store i32 0, i32* %509, align 8, !tbaa !97
  %510 = getelementptr inbounds i8, i8* %call454, i64 284
  store i8 0, i8* %510, align 4, !tbaa !100
  %511 = getelementptr inbounds i8, i8* %call454, i64 288
  %512 = bitcast i8* %511 to i32*
  store i32 0, i32* %512, align 8, !tbaa !101
  %513 = getelementptr inbounds i8, i8* %call454, i64 292
  store i8 0, i8* %513, align 4, !tbaa !102
  %m_pfCoeff.i.i1637.3 = getelementptr inbounds i8, i8* %call454, i64 296
  %fDistance.i.i1638.3 = getelementptr inbounds i8, i8* %call454, i64 352
  %514 = bitcast i8* %fDistance.i.i1638.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %514, align 8, !tbaa !107
  %m_fGain.i.i1639.3 = getelementptr inbounds i8, i8* %call454, i64 356
  %515 = bitcast i8* %m_fGain.i.i1639.3 to float*
  store float 1.000000e+00, float* %515, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %507, align 8, !tbaa !68
  %arrayctor.next468.3 = getelementptr inbounds i8, i8* %call454, i64 360
  %516 = bitcast i8* %arrayctor.next468.3 to i32 (...)***
  %517 = getelementptr inbounds i8, i8* %call454, i64 368
  %518 = bitcast i8* %517 to i32*
  store i32 0, i32* %518, align 8, !tbaa !97
  %519 = getelementptr inbounds i8, i8* %call454, i64 372
  store i8 0, i8* %519, align 4, !tbaa !100
  %520 = getelementptr inbounds i8, i8* %call454, i64 376
  %521 = bitcast i8* %520 to i32*
  store i32 0, i32* %521, align 8, !tbaa !101
  %522 = getelementptr inbounds i8, i8* %call454, i64 380
  store i8 0, i8* %522, align 4, !tbaa !102
  %m_pfCoeff.i.i1637.4 = getelementptr inbounds i8, i8* %call454, i64 384
  %fDistance.i.i1638.4 = getelementptr inbounds i8, i8* %call454, i64 440
  %523 = bitcast i8* %fDistance.i.i1638.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %523, align 8, !tbaa !107
  %m_fGain.i.i1639.4 = getelementptr inbounds i8, i8* %call454, i64 444
  %524 = bitcast i8* %m_fGain.i.i1639.4 to float*
  store float 1.000000e+00, float* %524, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %516, align 8, !tbaa !68
  %arrayctor.next468.4 = getelementptr inbounds i8, i8* %call454, i64 448
  %525 = bitcast i8* %arrayctor.next468.4 to i32 (...)***
  %526 = getelementptr inbounds i8, i8* %call454, i64 456
  %527 = bitcast i8* %526 to i32*
  store i32 0, i32* %527, align 8, !tbaa !97
  %528 = getelementptr inbounds i8, i8* %call454, i64 460
  store i8 0, i8* %528, align 4, !tbaa !100
  %529 = getelementptr inbounds i8, i8* %call454, i64 464
  %530 = bitcast i8* %529 to i32*
  store i32 0, i32* %530, align 8, !tbaa !101
  %531 = getelementptr inbounds i8, i8* %call454, i64 468
  store i8 0, i8* %531, align 4, !tbaa !102
  %m_pfCoeff.i.i1637.5 = getelementptr inbounds i8, i8* %call454, i64 472
  %fDistance.i.i1638.5 = getelementptr inbounds i8, i8* %call454, i64 528
  %532 = bitcast i8* %fDistance.i.i1638.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1637.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %532, align 8, !tbaa !107
  %m_fGain.i.i1639.5 = getelementptr inbounds i8, i8* %call454, i64 532
  %533 = bitcast i8* %m_fGain.i.i1639.5 to float*
  store float 1.000000e+00, float* %533, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %525, align 8, !tbaa !68
  %534 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %479, i8** %534, align 8, !tbaa !284
  %535 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %536 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body475

for.body475:                                      ; preds = %for.body475, %for.body475.lr.ph
  %indvars.iv1724 = phi i64 [ 0, %for.body475.lr.ph ], [ %indvars.iv.next1725, %for.body475 ]
  %537 = phi i32 [ 6, %for.body475.lr.ph ], [ %548, %for.body475 ]
  %polPosition.sroa.0.21679 = phi <2 x float> [ zeroinitializer, %for.body475.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1495, %for.body475 ]
  %538 = trunc i64 %indvars.iv1724 to i32
  %conv476 = uitofp i32 %538 to float
  %mul477 = fmul float %conv476, 3.600000e+02
  %conv479 = uitofp i32 %537 to float
  %div480 = fdiv float %mul477, %conv479
  %call481 = tail call float @_Z16DegreesToRadiansf(float %div480)
  %sub482 = fsub float -0.000000e+00, %call481
  %polPosition.sroa.0.0.vec.insert1495 = insertelement <2 x float> %polPosition.sroa.0.21679, float %sub482, i32 0
  %539 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx486 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %539, i64 %indvars.iv1724
  %540 = load i32, i32* %535, align 8, !tbaa !97
  %541 = load i8, i8* %536, align 4, !tbaa !100, !range !104
  %tobool489 = icmp ne i8 %541, 0
  %542 = bitcast %class.CAmbisonicSpeaker* %arrayidx486 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable490 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %542, align 8, !tbaa !68
  %vfn491 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable490, i64 2
  %543 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn491, align 8
  %call492 = tail call zeroext i1 %543(%class.CAmbisonicSpeaker* %arrayidx486, i32 %540, i1 zeroext %tobool489, i32 0)
  %544 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %545 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %544, i64 %indvars.iv1724, i32 0
  %546 = bitcast %class.CAmbisonicSource* %545 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable497 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %546, align 8, !tbaa !68
  %vfn498 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable497, i64 5
  %547 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn498, align 8
  tail call void %547(%class.CAmbisonicSource* %545, <2 x float> %polPosition.sroa.0.0.vec.insert1495, float 1.000000e+00)
  %indvars.iv.next1725 = add nuw nsw i64 %indvars.iv1724, 1
  %548 = load i32, i32* %m_nSpeakers451, align 4, !tbaa !289
  %549 = zext i32 %548 to i64
  %cmp474 = icmp ult i64 %indvars.iv.next1725, %549
  br i1 %cmp474, label %for.body475, label %sw.epilog

for.body527.lr.ph:                                ; preds = %if.end
  %m_nSpeakers503 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers503, align 4, !tbaa !289
  %call506 = tail call i8* @_Znam(i64 712) #25
  %550 = bitcast i8* %call506 to i64*
  store i64 8, i64* %550, align 16
  %551 = getelementptr inbounds i8, i8* %call506, i64 8
  %552 = bitcast i8* %551 to i32 (...)***
  %553 = getelementptr inbounds i8, i8* %call506, i64 16
  %554 = bitcast i8* %553 to i32*
  store i32 0, i32* %554, align 8, !tbaa !97
  %555 = getelementptr inbounds i8, i8* %call506, i64 20
  store i8 0, i8* %555, align 4, !tbaa !100
  %556 = getelementptr inbounds i8, i8* %call506, i64 24
  %557 = bitcast i8* %556 to i32*
  store i32 0, i32* %557, align 8, !tbaa !101
  %558 = getelementptr inbounds i8, i8* %call506, i64 28
  store i8 0, i8* %558, align 4, !tbaa !102
  %m_pfCoeff.i.i1640 = getelementptr inbounds i8, i8* %call506, i64 32
  %fDistance.i.i1641 = getelementptr inbounds i8, i8* %call506, i64 88
  %559 = bitcast i8* %fDistance.i.i1641 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %559, align 8, !tbaa !107
  %m_fGain.i.i1642 = getelementptr inbounds i8, i8* %call506, i64 92
  %560 = bitcast i8* %m_fGain.i.i1642 to float*
  store float 1.000000e+00, float* %560, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %552, align 8, !tbaa !68
  %arrayctor.next520 = getelementptr inbounds i8, i8* %call506, i64 96
  %561 = bitcast i8* %arrayctor.next520 to i32 (...)***
  %562 = getelementptr inbounds i8, i8* %call506, i64 104
  %563 = bitcast i8* %562 to i32*
  store i32 0, i32* %563, align 8, !tbaa !97
  %564 = getelementptr inbounds i8, i8* %call506, i64 108
  store i8 0, i8* %564, align 4, !tbaa !100
  %565 = getelementptr inbounds i8, i8* %call506, i64 112
  %566 = bitcast i8* %565 to i32*
  store i32 0, i32* %566, align 8, !tbaa !101
  %567 = getelementptr inbounds i8, i8* %call506, i64 116
  store i8 0, i8* %567, align 4, !tbaa !102
  %m_pfCoeff.i.i1640.1 = getelementptr inbounds i8, i8* %call506, i64 120
  %fDistance.i.i1641.1 = getelementptr inbounds i8, i8* %call506, i64 176
  %568 = bitcast i8* %fDistance.i.i1641.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %568, align 8, !tbaa !107
  %m_fGain.i.i1642.1 = getelementptr inbounds i8, i8* %call506, i64 180
  %569 = bitcast i8* %m_fGain.i.i1642.1 to float*
  store float 1.000000e+00, float* %569, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %561, align 8, !tbaa !68
  %arrayctor.next520.1 = getelementptr inbounds i8, i8* %call506, i64 184
  %570 = bitcast i8* %arrayctor.next520.1 to i32 (...)***
  %571 = getelementptr inbounds i8, i8* %call506, i64 192
  %572 = bitcast i8* %571 to i32*
  store i32 0, i32* %572, align 8, !tbaa !97
  %573 = getelementptr inbounds i8, i8* %call506, i64 196
  store i8 0, i8* %573, align 4, !tbaa !100
  %574 = getelementptr inbounds i8, i8* %call506, i64 200
  %575 = bitcast i8* %574 to i32*
  store i32 0, i32* %575, align 8, !tbaa !101
  %576 = getelementptr inbounds i8, i8* %call506, i64 204
  store i8 0, i8* %576, align 4, !tbaa !102
  %m_pfCoeff.i.i1640.2 = getelementptr inbounds i8, i8* %call506, i64 208
  %fDistance.i.i1641.2 = getelementptr inbounds i8, i8* %call506, i64 264
  %577 = bitcast i8* %fDistance.i.i1641.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %577, align 8, !tbaa !107
  %m_fGain.i.i1642.2 = getelementptr inbounds i8, i8* %call506, i64 268
  %578 = bitcast i8* %m_fGain.i.i1642.2 to float*
  store float 1.000000e+00, float* %578, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %570, align 8, !tbaa !68
  %arrayctor.next520.2 = getelementptr inbounds i8, i8* %call506, i64 272
  %579 = bitcast i8* %arrayctor.next520.2 to i32 (...)***
  %580 = getelementptr inbounds i8, i8* %call506, i64 280
  %581 = bitcast i8* %580 to i32*
  store i32 0, i32* %581, align 8, !tbaa !97
  %582 = getelementptr inbounds i8, i8* %call506, i64 284
  store i8 0, i8* %582, align 4, !tbaa !100
  %583 = getelementptr inbounds i8, i8* %call506, i64 288
  %584 = bitcast i8* %583 to i32*
  store i32 0, i32* %584, align 8, !tbaa !101
  %585 = getelementptr inbounds i8, i8* %call506, i64 292
  store i8 0, i8* %585, align 4, !tbaa !102
  %m_pfCoeff.i.i1640.3 = getelementptr inbounds i8, i8* %call506, i64 296
  %fDistance.i.i1641.3 = getelementptr inbounds i8, i8* %call506, i64 352
  %586 = bitcast i8* %fDistance.i.i1641.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %586, align 8, !tbaa !107
  %m_fGain.i.i1642.3 = getelementptr inbounds i8, i8* %call506, i64 356
  %587 = bitcast i8* %m_fGain.i.i1642.3 to float*
  store float 1.000000e+00, float* %587, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %579, align 8, !tbaa !68
  %arrayctor.next520.3 = getelementptr inbounds i8, i8* %call506, i64 360
  %588 = bitcast i8* %arrayctor.next520.3 to i32 (...)***
  %589 = getelementptr inbounds i8, i8* %call506, i64 368
  %590 = bitcast i8* %589 to i32*
  store i32 0, i32* %590, align 8, !tbaa !97
  %591 = getelementptr inbounds i8, i8* %call506, i64 372
  store i8 0, i8* %591, align 4, !tbaa !100
  %592 = getelementptr inbounds i8, i8* %call506, i64 376
  %593 = bitcast i8* %592 to i32*
  store i32 0, i32* %593, align 8, !tbaa !101
  %594 = getelementptr inbounds i8, i8* %call506, i64 380
  store i8 0, i8* %594, align 4, !tbaa !102
  %m_pfCoeff.i.i1640.4 = getelementptr inbounds i8, i8* %call506, i64 384
  %fDistance.i.i1641.4 = getelementptr inbounds i8, i8* %call506, i64 440
  %595 = bitcast i8* %fDistance.i.i1641.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %595, align 8, !tbaa !107
  %m_fGain.i.i1642.4 = getelementptr inbounds i8, i8* %call506, i64 444
  %596 = bitcast i8* %m_fGain.i.i1642.4 to float*
  store float 1.000000e+00, float* %596, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %588, align 8, !tbaa !68
  %arrayctor.next520.4 = getelementptr inbounds i8, i8* %call506, i64 448
  %597 = bitcast i8* %arrayctor.next520.4 to i32 (...)***
  %598 = getelementptr inbounds i8, i8* %call506, i64 456
  %599 = bitcast i8* %598 to i32*
  store i32 0, i32* %599, align 8, !tbaa !97
  %600 = getelementptr inbounds i8, i8* %call506, i64 460
  store i8 0, i8* %600, align 4, !tbaa !100
  %601 = getelementptr inbounds i8, i8* %call506, i64 464
  %602 = bitcast i8* %601 to i32*
  store i32 0, i32* %602, align 8, !tbaa !101
  %603 = getelementptr inbounds i8, i8* %call506, i64 468
  store i8 0, i8* %603, align 4, !tbaa !102
  %m_pfCoeff.i.i1640.5 = getelementptr inbounds i8, i8* %call506, i64 472
  %fDistance.i.i1641.5 = getelementptr inbounds i8, i8* %call506, i64 528
  %604 = bitcast i8* %fDistance.i.i1641.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %604, align 8, !tbaa !107
  %m_fGain.i.i1642.5 = getelementptr inbounds i8, i8* %call506, i64 532
  %605 = bitcast i8* %m_fGain.i.i1642.5 to float*
  store float 1.000000e+00, float* %605, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %597, align 8, !tbaa !68
  %arrayctor.next520.5 = getelementptr inbounds i8, i8* %call506, i64 536
  %606 = bitcast i8* %arrayctor.next520.5 to i32 (...)***
  %607 = getelementptr inbounds i8, i8* %call506, i64 544
  %608 = bitcast i8* %607 to i32*
  store i32 0, i32* %608, align 8, !tbaa !97
  %609 = getelementptr inbounds i8, i8* %call506, i64 548
  store i8 0, i8* %609, align 4, !tbaa !100
  %610 = getelementptr inbounds i8, i8* %call506, i64 552
  %611 = bitcast i8* %610 to i32*
  store i32 0, i32* %611, align 8, !tbaa !101
  %612 = getelementptr inbounds i8, i8* %call506, i64 556
  store i8 0, i8* %612, align 4, !tbaa !102
  %m_pfCoeff.i.i1640.6 = getelementptr inbounds i8, i8* %call506, i64 560
  %fDistance.i.i1641.6 = getelementptr inbounds i8, i8* %call506, i64 616
  %613 = bitcast i8* %fDistance.i.i1641.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %613, align 8, !tbaa !107
  %m_fGain.i.i1642.6 = getelementptr inbounds i8, i8* %call506, i64 620
  %614 = bitcast i8* %m_fGain.i.i1642.6 to float*
  store float 1.000000e+00, float* %614, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %606, align 8, !tbaa !68
  %arrayctor.next520.6 = getelementptr inbounds i8, i8* %call506, i64 624
  %615 = bitcast i8* %arrayctor.next520.6 to i32 (...)***
  %616 = getelementptr inbounds i8, i8* %call506, i64 632
  %617 = bitcast i8* %616 to i32*
  store i32 0, i32* %617, align 8, !tbaa !97
  %618 = getelementptr inbounds i8, i8* %call506, i64 636
  store i8 0, i8* %618, align 4, !tbaa !100
  %619 = getelementptr inbounds i8, i8* %call506, i64 640
  %620 = bitcast i8* %619 to i32*
  store i32 0, i32* %620, align 8, !tbaa !101
  %621 = getelementptr inbounds i8, i8* %call506, i64 644
  store i8 0, i8* %621, align 4, !tbaa !102
  %m_pfCoeff.i.i1640.7 = getelementptr inbounds i8, i8* %call506, i64 648
  %fDistance.i.i1641.7 = getelementptr inbounds i8, i8* %call506, i64 704
  %622 = bitcast i8* %fDistance.i.i1641.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1640.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %622, align 8, !tbaa !107
  %m_fGain.i.i1642.7 = getelementptr inbounds i8, i8* %call506, i64 708
  %623 = bitcast i8* %m_fGain.i.i1642.7 to float*
  store float 1.000000e+00, float* %623, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %615, align 8, !tbaa !68
  %624 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %551, i8** %624, align 8, !tbaa !284
  %625 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %626 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body527

for.body527:                                      ; preds = %for.body527, %for.body527.lr.ph
  %indvars.iv1726 = phi i64 [ 0, %for.body527.lr.ph ], [ %indvars.iv.next1727, %for.body527 ]
  %627 = phi i32 [ 8, %for.body527.lr.ph ], [ %638, %for.body527 ]
  %polPosition.sroa.0.31682 = phi <2 x float> [ zeroinitializer, %for.body527.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1493, %for.body527 ]
  %628 = trunc i64 %indvars.iv1726 to i32
  %conv528 = uitofp i32 %628 to float
  %mul529 = fmul float %conv528, 3.600000e+02
  %conv531 = uitofp i32 %627 to float
  %div532 = fdiv float %mul529, %conv531
  %call533 = tail call float @_Z16DegreesToRadiansf(float %div532)
  %sub534 = fsub float -0.000000e+00, %call533
  %polPosition.sroa.0.0.vec.insert1493 = insertelement <2 x float> %polPosition.sroa.0.31682, float %sub534, i32 0
  %629 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx538 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %629, i64 %indvars.iv1726
  %630 = load i32, i32* %625, align 8, !tbaa !97
  %631 = load i8, i8* %626, align 4, !tbaa !100, !range !104
  %tobool541 = icmp ne i8 %631, 0
  %632 = bitcast %class.CAmbisonicSpeaker* %arrayidx538 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable542 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %632, align 8, !tbaa !68
  %vfn543 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable542, i64 2
  %633 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn543, align 8
  %call544 = tail call zeroext i1 %633(%class.CAmbisonicSpeaker* %arrayidx538, i32 %630, i1 zeroext %tobool541, i32 0)
  %634 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %635 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %634, i64 %indvars.iv1726, i32 0
  %636 = bitcast %class.CAmbisonicSource* %635 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable549 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %636, align 8, !tbaa !68
  %vfn550 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable549, i64 5
  %637 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn550, align 8
  tail call void %637(%class.CAmbisonicSource* %635, <2 x float> %polPosition.sroa.0.0.vec.insert1493, float 1.000000e+00)
  %indvars.iv.next1727 = add nuw nsw i64 %indvars.iv1726, 1
  %638 = load i32, i32* %m_nSpeakers503, align 4, !tbaa !289
  %639 = zext i32 %638 to i64
  %cmp526 = icmp ult i64 %indvars.iv.next1727, %639
  br i1 %cmp526, label %for.body527, label %sw.epilog

for.body579.lr.ph:                                ; preds = %if.end
  %m_nSpeakers555 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 10, i32* %m_nSpeakers555, align 4, !tbaa !289
  %call558 = tail call i8* @_Znam(i64 888) #25
  %640 = bitcast i8* %call558 to i64*
  store i64 10, i64* %640, align 16
  %641 = getelementptr inbounds i8, i8* %call558, i64 8
  %642 = bitcast i8* %641 to i32 (...)***
  %643 = getelementptr inbounds i8, i8* %call558, i64 16
  %644 = bitcast i8* %643 to i32*
  store i32 0, i32* %644, align 8, !tbaa !97
  %645 = getelementptr inbounds i8, i8* %call558, i64 20
  store i8 0, i8* %645, align 4, !tbaa !100
  %646 = getelementptr inbounds i8, i8* %call558, i64 24
  %647 = bitcast i8* %646 to i32*
  store i32 0, i32* %647, align 8, !tbaa !101
  %648 = getelementptr inbounds i8, i8* %call558, i64 28
  store i8 0, i8* %648, align 4, !tbaa !102
  %m_pfCoeff.i.i1646 = getelementptr inbounds i8, i8* %call558, i64 32
  %fDistance.i.i1647 = getelementptr inbounds i8, i8* %call558, i64 88
  %649 = bitcast i8* %fDistance.i.i1647 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %649, align 8, !tbaa !107
  %m_fGain.i.i1648 = getelementptr inbounds i8, i8* %call558, i64 92
  %650 = bitcast i8* %m_fGain.i.i1648 to float*
  store float 1.000000e+00, float* %650, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %642, align 8, !tbaa !68
  %arrayctor.next572 = getelementptr inbounds i8, i8* %call558, i64 96
  %651 = bitcast i8* %arrayctor.next572 to i32 (...)***
  %652 = getelementptr inbounds i8, i8* %call558, i64 104
  %653 = bitcast i8* %652 to i32*
  store i32 0, i32* %653, align 8, !tbaa !97
  %654 = getelementptr inbounds i8, i8* %call558, i64 108
  store i8 0, i8* %654, align 4, !tbaa !100
  %655 = getelementptr inbounds i8, i8* %call558, i64 112
  %656 = bitcast i8* %655 to i32*
  store i32 0, i32* %656, align 8, !tbaa !101
  %657 = getelementptr inbounds i8, i8* %call558, i64 116
  store i8 0, i8* %657, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.1 = getelementptr inbounds i8, i8* %call558, i64 120
  %fDistance.i.i1647.1 = getelementptr inbounds i8, i8* %call558, i64 176
  %658 = bitcast i8* %fDistance.i.i1647.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %658, align 8, !tbaa !107
  %m_fGain.i.i1648.1 = getelementptr inbounds i8, i8* %call558, i64 180
  %659 = bitcast i8* %m_fGain.i.i1648.1 to float*
  store float 1.000000e+00, float* %659, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %651, align 8, !tbaa !68
  %arrayctor.next572.1 = getelementptr inbounds i8, i8* %call558, i64 184
  %660 = bitcast i8* %arrayctor.next572.1 to i32 (...)***
  %661 = getelementptr inbounds i8, i8* %call558, i64 192
  %662 = bitcast i8* %661 to i32*
  store i32 0, i32* %662, align 8, !tbaa !97
  %663 = getelementptr inbounds i8, i8* %call558, i64 196
  store i8 0, i8* %663, align 4, !tbaa !100
  %664 = getelementptr inbounds i8, i8* %call558, i64 200
  %665 = bitcast i8* %664 to i32*
  store i32 0, i32* %665, align 8, !tbaa !101
  %666 = getelementptr inbounds i8, i8* %call558, i64 204
  store i8 0, i8* %666, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.2 = getelementptr inbounds i8, i8* %call558, i64 208
  %fDistance.i.i1647.2 = getelementptr inbounds i8, i8* %call558, i64 264
  %667 = bitcast i8* %fDistance.i.i1647.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %667, align 8, !tbaa !107
  %m_fGain.i.i1648.2 = getelementptr inbounds i8, i8* %call558, i64 268
  %668 = bitcast i8* %m_fGain.i.i1648.2 to float*
  store float 1.000000e+00, float* %668, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %660, align 8, !tbaa !68
  %arrayctor.next572.2 = getelementptr inbounds i8, i8* %call558, i64 272
  %669 = bitcast i8* %arrayctor.next572.2 to i32 (...)***
  %670 = getelementptr inbounds i8, i8* %call558, i64 280
  %671 = bitcast i8* %670 to i32*
  store i32 0, i32* %671, align 8, !tbaa !97
  %672 = getelementptr inbounds i8, i8* %call558, i64 284
  store i8 0, i8* %672, align 4, !tbaa !100
  %673 = getelementptr inbounds i8, i8* %call558, i64 288
  %674 = bitcast i8* %673 to i32*
  store i32 0, i32* %674, align 8, !tbaa !101
  %675 = getelementptr inbounds i8, i8* %call558, i64 292
  store i8 0, i8* %675, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.3 = getelementptr inbounds i8, i8* %call558, i64 296
  %fDistance.i.i1647.3 = getelementptr inbounds i8, i8* %call558, i64 352
  %676 = bitcast i8* %fDistance.i.i1647.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %676, align 8, !tbaa !107
  %m_fGain.i.i1648.3 = getelementptr inbounds i8, i8* %call558, i64 356
  %677 = bitcast i8* %m_fGain.i.i1648.3 to float*
  store float 1.000000e+00, float* %677, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %669, align 8, !tbaa !68
  %arrayctor.next572.3 = getelementptr inbounds i8, i8* %call558, i64 360
  %678 = bitcast i8* %arrayctor.next572.3 to i32 (...)***
  %679 = getelementptr inbounds i8, i8* %call558, i64 368
  %680 = bitcast i8* %679 to i32*
  store i32 0, i32* %680, align 8, !tbaa !97
  %681 = getelementptr inbounds i8, i8* %call558, i64 372
  store i8 0, i8* %681, align 4, !tbaa !100
  %682 = getelementptr inbounds i8, i8* %call558, i64 376
  %683 = bitcast i8* %682 to i32*
  store i32 0, i32* %683, align 8, !tbaa !101
  %684 = getelementptr inbounds i8, i8* %call558, i64 380
  store i8 0, i8* %684, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.4 = getelementptr inbounds i8, i8* %call558, i64 384
  %fDistance.i.i1647.4 = getelementptr inbounds i8, i8* %call558, i64 440
  %685 = bitcast i8* %fDistance.i.i1647.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %685, align 8, !tbaa !107
  %m_fGain.i.i1648.4 = getelementptr inbounds i8, i8* %call558, i64 444
  %686 = bitcast i8* %m_fGain.i.i1648.4 to float*
  store float 1.000000e+00, float* %686, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %678, align 8, !tbaa !68
  %arrayctor.next572.4 = getelementptr inbounds i8, i8* %call558, i64 448
  %687 = bitcast i8* %arrayctor.next572.4 to i32 (...)***
  %688 = getelementptr inbounds i8, i8* %call558, i64 456
  %689 = bitcast i8* %688 to i32*
  store i32 0, i32* %689, align 8, !tbaa !97
  %690 = getelementptr inbounds i8, i8* %call558, i64 460
  store i8 0, i8* %690, align 4, !tbaa !100
  %691 = getelementptr inbounds i8, i8* %call558, i64 464
  %692 = bitcast i8* %691 to i32*
  store i32 0, i32* %692, align 8, !tbaa !101
  %693 = getelementptr inbounds i8, i8* %call558, i64 468
  store i8 0, i8* %693, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.5 = getelementptr inbounds i8, i8* %call558, i64 472
  %fDistance.i.i1647.5 = getelementptr inbounds i8, i8* %call558, i64 528
  %694 = bitcast i8* %fDistance.i.i1647.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %694, align 8, !tbaa !107
  %m_fGain.i.i1648.5 = getelementptr inbounds i8, i8* %call558, i64 532
  %695 = bitcast i8* %m_fGain.i.i1648.5 to float*
  store float 1.000000e+00, float* %695, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %687, align 8, !tbaa !68
  %arrayctor.next572.5 = getelementptr inbounds i8, i8* %call558, i64 536
  %696 = bitcast i8* %arrayctor.next572.5 to i32 (...)***
  %697 = getelementptr inbounds i8, i8* %call558, i64 544
  %698 = bitcast i8* %697 to i32*
  store i32 0, i32* %698, align 8, !tbaa !97
  %699 = getelementptr inbounds i8, i8* %call558, i64 548
  store i8 0, i8* %699, align 4, !tbaa !100
  %700 = getelementptr inbounds i8, i8* %call558, i64 552
  %701 = bitcast i8* %700 to i32*
  store i32 0, i32* %701, align 8, !tbaa !101
  %702 = getelementptr inbounds i8, i8* %call558, i64 556
  store i8 0, i8* %702, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.6 = getelementptr inbounds i8, i8* %call558, i64 560
  %fDistance.i.i1647.6 = getelementptr inbounds i8, i8* %call558, i64 616
  %703 = bitcast i8* %fDistance.i.i1647.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %703, align 8, !tbaa !107
  %m_fGain.i.i1648.6 = getelementptr inbounds i8, i8* %call558, i64 620
  %704 = bitcast i8* %m_fGain.i.i1648.6 to float*
  store float 1.000000e+00, float* %704, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %696, align 8, !tbaa !68
  %arrayctor.next572.6 = getelementptr inbounds i8, i8* %call558, i64 624
  %705 = bitcast i8* %arrayctor.next572.6 to i32 (...)***
  %706 = getelementptr inbounds i8, i8* %call558, i64 632
  %707 = bitcast i8* %706 to i32*
  store i32 0, i32* %707, align 8, !tbaa !97
  %708 = getelementptr inbounds i8, i8* %call558, i64 636
  store i8 0, i8* %708, align 4, !tbaa !100
  %709 = getelementptr inbounds i8, i8* %call558, i64 640
  %710 = bitcast i8* %709 to i32*
  store i32 0, i32* %710, align 8, !tbaa !101
  %711 = getelementptr inbounds i8, i8* %call558, i64 644
  store i8 0, i8* %711, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.7 = getelementptr inbounds i8, i8* %call558, i64 648
  %fDistance.i.i1647.7 = getelementptr inbounds i8, i8* %call558, i64 704
  %712 = bitcast i8* %fDistance.i.i1647.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %712, align 8, !tbaa !107
  %m_fGain.i.i1648.7 = getelementptr inbounds i8, i8* %call558, i64 708
  %713 = bitcast i8* %m_fGain.i.i1648.7 to float*
  store float 1.000000e+00, float* %713, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %705, align 8, !tbaa !68
  %arrayctor.next572.7 = getelementptr inbounds i8, i8* %call558, i64 712
  %714 = bitcast i8* %arrayctor.next572.7 to i32 (...)***
  %715 = getelementptr inbounds i8, i8* %call558, i64 720
  %716 = bitcast i8* %715 to i32*
  store i32 0, i32* %716, align 8, !tbaa !97
  %717 = getelementptr inbounds i8, i8* %call558, i64 724
  store i8 0, i8* %717, align 4, !tbaa !100
  %718 = getelementptr inbounds i8, i8* %call558, i64 728
  %719 = bitcast i8* %718 to i32*
  store i32 0, i32* %719, align 8, !tbaa !101
  %720 = getelementptr inbounds i8, i8* %call558, i64 732
  store i8 0, i8* %720, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.8 = getelementptr inbounds i8, i8* %call558, i64 736
  %fDistance.i.i1647.8 = getelementptr inbounds i8, i8* %call558, i64 792
  %721 = bitcast i8* %fDistance.i.i1647.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %721, align 8, !tbaa !107
  %m_fGain.i.i1648.8 = getelementptr inbounds i8, i8* %call558, i64 796
  %722 = bitcast i8* %m_fGain.i.i1648.8 to float*
  store float 1.000000e+00, float* %722, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %714, align 8, !tbaa !68
  %arrayctor.next572.8 = getelementptr inbounds i8, i8* %call558, i64 800
  %723 = bitcast i8* %arrayctor.next572.8 to i32 (...)***
  %724 = getelementptr inbounds i8, i8* %call558, i64 808
  %725 = bitcast i8* %724 to i32*
  store i32 0, i32* %725, align 8, !tbaa !97
  %726 = getelementptr inbounds i8, i8* %call558, i64 812
  store i8 0, i8* %726, align 4, !tbaa !100
  %727 = getelementptr inbounds i8, i8* %call558, i64 816
  %728 = bitcast i8* %727 to i32*
  store i32 0, i32* %728, align 8, !tbaa !101
  %729 = getelementptr inbounds i8, i8* %call558, i64 820
  store i8 0, i8* %729, align 4, !tbaa !102
  %m_pfCoeff.i.i1646.9 = getelementptr inbounds i8, i8* %call558, i64 824
  %fDistance.i.i1647.9 = getelementptr inbounds i8, i8* %call558, i64 880
  %730 = bitcast i8* %fDistance.i.i1647.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1646.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %730, align 8, !tbaa !107
  %m_fGain.i.i1648.9 = getelementptr inbounds i8, i8* %call558, i64 884
  %731 = bitcast i8* %m_fGain.i.i1648.9 to float*
  store float 1.000000e+00, float* %731, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %723, align 8, !tbaa !68
  %732 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %641, i8** %732, align 8, !tbaa !284
  %733 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %734 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body579

for.body579:                                      ; preds = %for.body579, %for.body579.lr.ph
  %indvars.iv1728 = phi i64 [ 0, %for.body579.lr.ph ], [ %indvars.iv.next1729, %for.body579 ]
  %735 = phi i32 [ 10, %for.body579.lr.ph ], [ %746, %for.body579 ]
  %polPosition.sroa.0.41685 = phi <2 x float> [ zeroinitializer, %for.body579.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1491, %for.body579 ]
  %736 = trunc i64 %indvars.iv1728 to i32
  %conv580 = uitofp i32 %736 to float
  %mul581 = fmul float %conv580, 3.600000e+02
  %conv583 = uitofp i32 %735 to float
  %div584 = fdiv float %mul581, %conv583
  %call585 = tail call float @_Z16DegreesToRadiansf(float %div584)
  %sub586 = fsub float -0.000000e+00, %call585
  %polPosition.sroa.0.0.vec.insert1491 = insertelement <2 x float> %polPosition.sroa.0.41685, float %sub586, i32 0
  %737 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx590 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %737, i64 %indvars.iv1728
  %738 = load i32, i32* %733, align 8, !tbaa !97
  %739 = load i8, i8* %734, align 4, !tbaa !100, !range !104
  %tobool593 = icmp ne i8 %739, 0
  %740 = bitcast %class.CAmbisonicSpeaker* %arrayidx590 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable594 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %740, align 8, !tbaa !68
  %vfn595 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable594, i64 2
  %741 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn595, align 8
  %call596 = tail call zeroext i1 %741(%class.CAmbisonicSpeaker* %arrayidx590, i32 %738, i1 zeroext %tobool593, i32 0)
  %742 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %743 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %742, i64 %indvars.iv1728, i32 0
  %744 = bitcast %class.CAmbisonicSource* %743 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable601 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %744, align 8, !tbaa !68
  %vfn602 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable601, i64 5
  %745 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn602, align 8
  tail call void %745(%class.CAmbisonicSource* %743, <2 x float> %polPosition.sroa.0.0.vec.insert1491, float 1.000000e+00)
  %indvars.iv.next1729 = add nuw nsw i64 %indvars.iv1728, 1
  %746 = load i32, i32* %m_nSpeakers555, align 4, !tbaa !289
  %747 = zext i32 %746 to i64
  %cmp578 = icmp ult i64 %indvars.iv.next1729, %747
  br i1 %cmp578, label %for.body579, label %sw.epilog

for.body631.lr.ph:                                ; preds = %if.end
  %m_nSpeakers607 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 12, i32* %m_nSpeakers607, align 4, !tbaa !289
  %call610 = tail call i8* @_Znam(i64 1064) #25
  %748 = bitcast i8* %call610 to i64*
  store i64 12, i64* %748, align 16
  %749 = getelementptr inbounds i8, i8* %call610, i64 8
  %750 = bitcast i8* %749 to i32 (...)***
  %751 = getelementptr inbounds i8, i8* %call610, i64 16
  %752 = bitcast i8* %751 to i32*
  store i32 0, i32* %752, align 8, !tbaa !97
  %753 = getelementptr inbounds i8, i8* %call610, i64 20
  store i8 0, i8* %753, align 4, !tbaa !100
  %754 = getelementptr inbounds i8, i8* %call610, i64 24
  %755 = bitcast i8* %754 to i32*
  store i32 0, i32* %755, align 8, !tbaa !101
  %756 = getelementptr inbounds i8, i8* %call610, i64 28
  store i8 0, i8* %756, align 4, !tbaa !102
  %m_pfCoeff.i.i1649 = getelementptr inbounds i8, i8* %call610, i64 32
  %fDistance.i.i1650 = getelementptr inbounds i8, i8* %call610, i64 88
  %757 = bitcast i8* %fDistance.i.i1650 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %757, align 8, !tbaa !107
  %m_fGain.i.i1651 = getelementptr inbounds i8, i8* %call610, i64 92
  %758 = bitcast i8* %m_fGain.i.i1651 to float*
  store float 1.000000e+00, float* %758, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %750, align 8, !tbaa !68
  %arrayctor.next624 = getelementptr inbounds i8, i8* %call610, i64 96
  %759 = bitcast i8* %arrayctor.next624 to i32 (...)***
  %760 = getelementptr inbounds i8, i8* %call610, i64 104
  %761 = bitcast i8* %760 to i32*
  store i32 0, i32* %761, align 8, !tbaa !97
  %762 = getelementptr inbounds i8, i8* %call610, i64 108
  store i8 0, i8* %762, align 4, !tbaa !100
  %763 = getelementptr inbounds i8, i8* %call610, i64 112
  %764 = bitcast i8* %763 to i32*
  store i32 0, i32* %764, align 8, !tbaa !101
  %765 = getelementptr inbounds i8, i8* %call610, i64 116
  store i8 0, i8* %765, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.1 = getelementptr inbounds i8, i8* %call610, i64 120
  %fDistance.i.i1650.1 = getelementptr inbounds i8, i8* %call610, i64 176
  %766 = bitcast i8* %fDistance.i.i1650.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %766, align 8, !tbaa !107
  %m_fGain.i.i1651.1 = getelementptr inbounds i8, i8* %call610, i64 180
  %767 = bitcast i8* %m_fGain.i.i1651.1 to float*
  store float 1.000000e+00, float* %767, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %759, align 8, !tbaa !68
  %arrayctor.next624.1 = getelementptr inbounds i8, i8* %call610, i64 184
  %768 = bitcast i8* %arrayctor.next624.1 to i32 (...)***
  %769 = getelementptr inbounds i8, i8* %call610, i64 192
  %770 = bitcast i8* %769 to i32*
  store i32 0, i32* %770, align 8, !tbaa !97
  %771 = getelementptr inbounds i8, i8* %call610, i64 196
  store i8 0, i8* %771, align 4, !tbaa !100
  %772 = getelementptr inbounds i8, i8* %call610, i64 200
  %773 = bitcast i8* %772 to i32*
  store i32 0, i32* %773, align 8, !tbaa !101
  %774 = getelementptr inbounds i8, i8* %call610, i64 204
  store i8 0, i8* %774, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.2 = getelementptr inbounds i8, i8* %call610, i64 208
  %fDistance.i.i1650.2 = getelementptr inbounds i8, i8* %call610, i64 264
  %775 = bitcast i8* %fDistance.i.i1650.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %775, align 8, !tbaa !107
  %m_fGain.i.i1651.2 = getelementptr inbounds i8, i8* %call610, i64 268
  %776 = bitcast i8* %m_fGain.i.i1651.2 to float*
  store float 1.000000e+00, float* %776, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %768, align 8, !tbaa !68
  %arrayctor.next624.2 = getelementptr inbounds i8, i8* %call610, i64 272
  %777 = bitcast i8* %arrayctor.next624.2 to i32 (...)***
  %778 = getelementptr inbounds i8, i8* %call610, i64 280
  %779 = bitcast i8* %778 to i32*
  store i32 0, i32* %779, align 8, !tbaa !97
  %780 = getelementptr inbounds i8, i8* %call610, i64 284
  store i8 0, i8* %780, align 4, !tbaa !100
  %781 = getelementptr inbounds i8, i8* %call610, i64 288
  %782 = bitcast i8* %781 to i32*
  store i32 0, i32* %782, align 8, !tbaa !101
  %783 = getelementptr inbounds i8, i8* %call610, i64 292
  store i8 0, i8* %783, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.3 = getelementptr inbounds i8, i8* %call610, i64 296
  %fDistance.i.i1650.3 = getelementptr inbounds i8, i8* %call610, i64 352
  %784 = bitcast i8* %fDistance.i.i1650.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %784, align 8, !tbaa !107
  %m_fGain.i.i1651.3 = getelementptr inbounds i8, i8* %call610, i64 356
  %785 = bitcast i8* %m_fGain.i.i1651.3 to float*
  store float 1.000000e+00, float* %785, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %777, align 8, !tbaa !68
  %arrayctor.next624.3 = getelementptr inbounds i8, i8* %call610, i64 360
  %786 = bitcast i8* %arrayctor.next624.3 to i32 (...)***
  %787 = getelementptr inbounds i8, i8* %call610, i64 368
  %788 = bitcast i8* %787 to i32*
  store i32 0, i32* %788, align 8, !tbaa !97
  %789 = getelementptr inbounds i8, i8* %call610, i64 372
  store i8 0, i8* %789, align 4, !tbaa !100
  %790 = getelementptr inbounds i8, i8* %call610, i64 376
  %791 = bitcast i8* %790 to i32*
  store i32 0, i32* %791, align 8, !tbaa !101
  %792 = getelementptr inbounds i8, i8* %call610, i64 380
  store i8 0, i8* %792, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.4 = getelementptr inbounds i8, i8* %call610, i64 384
  %fDistance.i.i1650.4 = getelementptr inbounds i8, i8* %call610, i64 440
  %793 = bitcast i8* %fDistance.i.i1650.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %793, align 8, !tbaa !107
  %m_fGain.i.i1651.4 = getelementptr inbounds i8, i8* %call610, i64 444
  %794 = bitcast i8* %m_fGain.i.i1651.4 to float*
  store float 1.000000e+00, float* %794, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %786, align 8, !tbaa !68
  %arrayctor.next624.4 = getelementptr inbounds i8, i8* %call610, i64 448
  %795 = bitcast i8* %arrayctor.next624.4 to i32 (...)***
  %796 = getelementptr inbounds i8, i8* %call610, i64 456
  %797 = bitcast i8* %796 to i32*
  store i32 0, i32* %797, align 8, !tbaa !97
  %798 = getelementptr inbounds i8, i8* %call610, i64 460
  store i8 0, i8* %798, align 4, !tbaa !100
  %799 = getelementptr inbounds i8, i8* %call610, i64 464
  %800 = bitcast i8* %799 to i32*
  store i32 0, i32* %800, align 8, !tbaa !101
  %801 = getelementptr inbounds i8, i8* %call610, i64 468
  store i8 0, i8* %801, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.5 = getelementptr inbounds i8, i8* %call610, i64 472
  %fDistance.i.i1650.5 = getelementptr inbounds i8, i8* %call610, i64 528
  %802 = bitcast i8* %fDistance.i.i1650.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %802, align 8, !tbaa !107
  %m_fGain.i.i1651.5 = getelementptr inbounds i8, i8* %call610, i64 532
  %803 = bitcast i8* %m_fGain.i.i1651.5 to float*
  store float 1.000000e+00, float* %803, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %795, align 8, !tbaa !68
  %arrayctor.next624.5 = getelementptr inbounds i8, i8* %call610, i64 536
  %804 = bitcast i8* %arrayctor.next624.5 to i32 (...)***
  %805 = getelementptr inbounds i8, i8* %call610, i64 544
  %806 = bitcast i8* %805 to i32*
  store i32 0, i32* %806, align 8, !tbaa !97
  %807 = getelementptr inbounds i8, i8* %call610, i64 548
  store i8 0, i8* %807, align 4, !tbaa !100
  %808 = getelementptr inbounds i8, i8* %call610, i64 552
  %809 = bitcast i8* %808 to i32*
  store i32 0, i32* %809, align 8, !tbaa !101
  %810 = getelementptr inbounds i8, i8* %call610, i64 556
  store i8 0, i8* %810, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.6 = getelementptr inbounds i8, i8* %call610, i64 560
  %fDistance.i.i1650.6 = getelementptr inbounds i8, i8* %call610, i64 616
  %811 = bitcast i8* %fDistance.i.i1650.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %811, align 8, !tbaa !107
  %m_fGain.i.i1651.6 = getelementptr inbounds i8, i8* %call610, i64 620
  %812 = bitcast i8* %m_fGain.i.i1651.6 to float*
  store float 1.000000e+00, float* %812, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %804, align 8, !tbaa !68
  %arrayctor.next624.6 = getelementptr inbounds i8, i8* %call610, i64 624
  %813 = bitcast i8* %arrayctor.next624.6 to i32 (...)***
  %814 = getelementptr inbounds i8, i8* %call610, i64 632
  %815 = bitcast i8* %814 to i32*
  store i32 0, i32* %815, align 8, !tbaa !97
  %816 = getelementptr inbounds i8, i8* %call610, i64 636
  store i8 0, i8* %816, align 4, !tbaa !100
  %817 = getelementptr inbounds i8, i8* %call610, i64 640
  %818 = bitcast i8* %817 to i32*
  store i32 0, i32* %818, align 8, !tbaa !101
  %819 = getelementptr inbounds i8, i8* %call610, i64 644
  store i8 0, i8* %819, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.7 = getelementptr inbounds i8, i8* %call610, i64 648
  %fDistance.i.i1650.7 = getelementptr inbounds i8, i8* %call610, i64 704
  %820 = bitcast i8* %fDistance.i.i1650.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %820, align 8, !tbaa !107
  %m_fGain.i.i1651.7 = getelementptr inbounds i8, i8* %call610, i64 708
  %821 = bitcast i8* %m_fGain.i.i1651.7 to float*
  store float 1.000000e+00, float* %821, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %813, align 8, !tbaa !68
  %arrayctor.next624.7 = getelementptr inbounds i8, i8* %call610, i64 712
  %822 = bitcast i8* %arrayctor.next624.7 to i32 (...)***
  %823 = getelementptr inbounds i8, i8* %call610, i64 720
  %824 = bitcast i8* %823 to i32*
  store i32 0, i32* %824, align 8, !tbaa !97
  %825 = getelementptr inbounds i8, i8* %call610, i64 724
  store i8 0, i8* %825, align 4, !tbaa !100
  %826 = getelementptr inbounds i8, i8* %call610, i64 728
  %827 = bitcast i8* %826 to i32*
  store i32 0, i32* %827, align 8, !tbaa !101
  %828 = getelementptr inbounds i8, i8* %call610, i64 732
  store i8 0, i8* %828, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.8 = getelementptr inbounds i8, i8* %call610, i64 736
  %fDistance.i.i1650.8 = getelementptr inbounds i8, i8* %call610, i64 792
  %829 = bitcast i8* %fDistance.i.i1650.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %829, align 8, !tbaa !107
  %m_fGain.i.i1651.8 = getelementptr inbounds i8, i8* %call610, i64 796
  %830 = bitcast i8* %m_fGain.i.i1651.8 to float*
  store float 1.000000e+00, float* %830, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %822, align 8, !tbaa !68
  %arrayctor.next624.8 = getelementptr inbounds i8, i8* %call610, i64 800
  %831 = bitcast i8* %arrayctor.next624.8 to i32 (...)***
  %832 = getelementptr inbounds i8, i8* %call610, i64 808
  %833 = bitcast i8* %832 to i32*
  store i32 0, i32* %833, align 8, !tbaa !97
  %834 = getelementptr inbounds i8, i8* %call610, i64 812
  store i8 0, i8* %834, align 4, !tbaa !100
  %835 = getelementptr inbounds i8, i8* %call610, i64 816
  %836 = bitcast i8* %835 to i32*
  store i32 0, i32* %836, align 8, !tbaa !101
  %837 = getelementptr inbounds i8, i8* %call610, i64 820
  store i8 0, i8* %837, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.9 = getelementptr inbounds i8, i8* %call610, i64 824
  %fDistance.i.i1650.9 = getelementptr inbounds i8, i8* %call610, i64 880
  %838 = bitcast i8* %fDistance.i.i1650.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %838, align 8, !tbaa !107
  %m_fGain.i.i1651.9 = getelementptr inbounds i8, i8* %call610, i64 884
  %839 = bitcast i8* %m_fGain.i.i1651.9 to float*
  store float 1.000000e+00, float* %839, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %831, align 8, !tbaa !68
  %arrayctor.next624.9 = getelementptr inbounds i8, i8* %call610, i64 888
  %840 = bitcast i8* %arrayctor.next624.9 to i32 (...)***
  %841 = getelementptr inbounds i8, i8* %call610, i64 896
  %842 = bitcast i8* %841 to i32*
  store i32 0, i32* %842, align 8, !tbaa !97
  %843 = getelementptr inbounds i8, i8* %call610, i64 900
  store i8 0, i8* %843, align 4, !tbaa !100
  %844 = getelementptr inbounds i8, i8* %call610, i64 904
  %845 = bitcast i8* %844 to i32*
  store i32 0, i32* %845, align 8, !tbaa !101
  %846 = getelementptr inbounds i8, i8* %call610, i64 908
  store i8 0, i8* %846, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.10 = getelementptr inbounds i8, i8* %call610, i64 912
  %fDistance.i.i1650.10 = getelementptr inbounds i8, i8* %call610, i64 968
  %847 = bitcast i8* %fDistance.i.i1650.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %847, align 8, !tbaa !107
  %m_fGain.i.i1651.10 = getelementptr inbounds i8, i8* %call610, i64 972
  %848 = bitcast i8* %m_fGain.i.i1651.10 to float*
  store float 1.000000e+00, float* %848, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %840, align 8, !tbaa !68
  %arrayctor.next624.10 = getelementptr inbounds i8, i8* %call610, i64 976
  %849 = bitcast i8* %arrayctor.next624.10 to i32 (...)***
  %850 = getelementptr inbounds i8, i8* %call610, i64 984
  %851 = bitcast i8* %850 to i32*
  store i32 0, i32* %851, align 8, !tbaa !97
  %852 = getelementptr inbounds i8, i8* %call610, i64 988
  store i8 0, i8* %852, align 4, !tbaa !100
  %853 = getelementptr inbounds i8, i8* %call610, i64 992
  %854 = bitcast i8* %853 to i32*
  store i32 0, i32* %854, align 8, !tbaa !101
  %855 = getelementptr inbounds i8, i8* %call610, i64 996
  store i8 0, i8* %855, align 4, !tbaa !102
  %m_pfCoeff.i.i1649.11 = getelementptr inbounds i8, i8* %call610, i64 1000
  %fDistance.i.i1650.11 = getelementptr inbounds i8, i8* %call610, i64 1056
  %856 = bitcast i8* %fDistance.i.i1650.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1649.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %856, align 8, !tbaa !107
  %m_fGain.i.i1651.11 = getelementptr inbounds i8, i8* %call610, i64 1060
  %857 = bitcast i8* %m_fGain.i.i1651.11 to float*
  store float 1.000000e+00, float* %857, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %849, align 8, !tbaa !68
  %858 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %749, i8** %858, align 8, !tbaa !284
  %859 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %860 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body631

for.body631:                                      ; preds = %for.body631, %for.body631.lr.ph
  %indvars.iv1730 = phi i64 [ 0, %for.body631.lr.ph ], [ %indvars.iv.next1731, %for.body631 ]
  %861 = phi i32 [ 12, %for.body631.lr.ph ], [ %872, %for.body631 ]
  %polPosition.sroa.0.51688 = phi <2 x float> [ zeroinitializer, %for.body631.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1489, %for.body631 ]
  %862 = trunc i64 %indvars.iv1730 to i32
  %conv632 = uitofp i32 %862 to float
  %mul633 = fmul float %conv632, 3.600000e+02
  %conv635 = uitofp i32 %861 to float
  %div636 = fdiv float %mul633, %conv635
  %call637 = tail call float @_Z16DegreesToRadiansf(float %div636)
  %sub638 = fsub float -0.000000e+00, %call637
  %polPosition.sroa.0.0.vec.insert1489 = insertelement <2 x float> %polPosition.sroa.0.51688, float %sub638, i32 0
  %863 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx642 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %863, i64 %indvars.iv1730
  %864 = load i32, i32* %859, align 8, !tbaa !97
  %865 = load i8, i8* %860, align 4, !tbaa !100, !range !104
  %tobool645 = icmp ne i8 %865, 0
  %866 = bitcast %class.CAmbisonicSpeaker* %arrayidx642 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable646 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %866, align 8, !tbaa !68
  %vfn647 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable646, i64 2
  %867 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn647, align 8
  %call648 = tail call zeroext i1 %867(%class.CAmbisonicSpeaker* %arrayidx642, i32 %864, i1 zeroext %tobool645, i32 0)
  %868 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %869 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %868, i64 %indvars.iv1730, i32 0
  %870 = bitcast %class.CAmbisonicSource* %869 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable653 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %870, align 8, !tbaa !68
  %vfn654 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable653, i64 5
  %871 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn654, align 8
  tail call void %871(%class.CAmbisonicSource* %869, <2 x float> %polPosition.sroa.0.0.vec.insert1489, float 1.000000e+00)
  %indvars.iv.next1731 = add nuw nsw i64 %indvars.iv1730, 1
  %872 = load i32, i32* %m_nSpeakers607, align 4, !tbaa !289
  %873 = zext i32 %872 to i64
  %cmp630 = icmp ult i64 %indvars.iv.next1731, %873
  br i1 %cmp630, label %for.body631, label %sw.epilog

sw.bb658:                                         ; preds = %if.end
  %m_nSpeakers659 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers659, align 4, !tbaa !289
  %call662 = tail call i8* @_Znam(i64 712) #25
  %874 = bitcast i8* %call662 to i64*
  store i64 8, i64* %874, align 16
  %875 = getelementptr inbounds i8, i8* %call662, i64 8
  %876 = bitcast i8* %875 to i32 (...)***
  %877 = getelementptr inbounds i8, i8* %call662, i64 16
  %878 = bitcast i8* %877 to i32*
  store i32 0, i32* %878, align 8, !tbaa !97
  %879 = getelementptr inbounds i8, i8* %call662, i64 20
  store i8 0, i8* %879, align 4, !tbaa !100
  %880 = getelementptr inbounds i8, i8* %call662, i64 24
  %881 = bitcast i8* %880 to i32*
  store i32 0, i32* %881, align 8, !tbaa !101
  %882 = getelementptr inbounds i8, i8* %call662, i64 28
  store i8 0, i8* %882, align 4, !tbaa !102
  %m_pfCoeff.i.i1652 = getelementptr inbounds i8, i8* %call662, i64 32
  %fDistance.i.i1653 = getelementptr inbounds i8, i8* %call662, i64 88
  %883 = bitcast i8* %fDistance.i.i1653 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %883, align 8, !tbaa !107
  %m_fGain.i.i1654 = getelementptr inbounds i8, i8* %call662, i64 92
  %884 = bitcast i8* %m_fGain.i.i1654 to float*
  store float 1.000000e+00, float* %884, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %876, align 8, !tbaa !68
  %arrayctor.next676 = getelementptr inbounds i8, i8* %call662, i64 96
  %885 = bitcast i8* %arrayctor.next676 to i32 (...)***
  %886 = getelementptr inbounds i8, i8* %call662, i64 104
  %887 = bitcast i8* %886 to i32*
  store i32 0, i32* %887, align 8, !tbaa !97
  %888 = getelementptr inbounds i8, i8* %call662, i64 108
  store i8 0, i8* %888, align 4, !tbaa !100
  %889 = getelementptr inbounds i8, i8* %call662, i64 112
  %890 = bitcast i8* %889 to i32*
  store i32 0, i32* %890, align 8, !tbaa !101
  %891 = getelementptr inbounds i8, i8* %call662, i64 116
  store i8 0, i8* %891, align 4, !tbaa !102
  %m_pfCoeff.i.i1652.1 = getelementptr inbounds i8, i8* %call662, i64 120
  %fDistance.i.i1653.1 = getelementptr inbounds i8, i8* %call662, i64 176
  %892 = bitcast i8* %fDistance.i.i1653.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %892, align 8, !tbaa !107
  %m_fGain.i.i1654.1 = getelementptr inbounds i8, i8* %call662, i64 180
  %893 = bitcast i8* %m_fGain.i.i1654.1 to float*
  store float 1.000000e+00, float* %893, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %885, align 8, !tbaa !68
  %arrayctor.next676.1 = getelementptr inbounds i8, i8* %call662, i64 184
  %894 = bitcast i8* %arrayctor.next676.1 to i32 (...)***
  %895 = getelementptr inbounds i8, i8* %call662, i64 192
  %896 = bitcast i8* %895 to i32*
  store i32 0, i32* %896, align 8, !tbaa !97
  %897 = getelementptr inbounds i8, i8* %call662, i64 196
  store i8 0, i8* %897, align 4, !tbaa !100
  %898 = getelementptr inbounds i8, i8* %call662, i64 200
  %899 = bitcast i8* %898 to i32*
  store i32 0, i32* %899, align 8, !tbaa !101
  %900 = getelementptr inbounds i8, i8* %call662, i64 204
  store i8 0, i8* %900, align 4, !tbaa !102
  %m_pfCoeff.i.i1652.2 = getelementptr inbounds i8, i8* %call662, i64 208
  %fDistance.i.i1653.2 = getelementptr inbounds i8, i8* %call662, i64 264
  %901 = bitcast i8* %fDistance.i.i1653.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %901, align 8, !tbaa !107
  %m_fGain.i.i1654.2 = getelementptr inbounds i8, i8* %call662, i64 268
  %902 = bitcast i8* %m_fGain.i.i1654.2 to float*
  store float 1.000000e+00, float* %902, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %894, align 8, !tbaa !68
  %arrayctor.next676.2 = getelementptr inbounds i8, i8* %call662, i64 272
  %903 = bitcast i8* %arrayctor.next676.2 to i32 (...)***
  %904 = getelementptr inbounds i8, i8* %call662, i64 280
  %905 = bitcast i8* %904 to i32*
  store i32 0, i32* %905, align 8, !tbaa !97
  %906 = getelementptr inbounds i8, i8* %call662, i64 284
  store i8 0, i8* %906, align 4, !tbaa !100
  %907 = getelementptr inbounds i8, i8* %call662, i64 288
  %908 = bitcast i8* %907 to i32*
  store i32 0, i32* %908, align 8, !tbaa !101
  %909 = getelementptr inbounds i8, i8* %call662, i64 292
  store i8 0, i8* %909, align 4, !tbaa !102
  %m_pfCoeff.i.i1652.3 = getelementptr inbounds i8, i8* %call662, i64 296
  %fDistance.i.i1653.3 = getelementptr inbounds i8, i8* %call662, i64 352
  %910 = bitcast i8* %fDistance.i.i1653.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %910, align 8, !tbaa !107
  %m_fGain.i.i1654.3 = getelementptr inbounds i8, i8* %call662, i64 356
  %911 = bitcast i8* %m_fGain.i.i1654.3 to float*
  store float 1.000000e+00, float* %911, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %903, align 8, !tbaa !68
  %arrayctor.next676.3 = getelementptr inbounds i8, i8* %call662, i64 360
  %912 = bitcast i8* %arrayctor.next676.3 to i32 (...)***
  %913 = getelementptr inbounds i8, i8* %call662, i64 368
  %914 = bitcast i8* %913 to i32*
  store i32 0, i32* %914, align 8, !tbaa !97
  %915 = getelementptr inbounds i8, i8* %call662, i64 372
  store i8 0, i8* %915, align 4, !tbaa !100
  %916 = getelementptr inbounds i8, i8* %call662, i64 376
  %917 = bitcast i8* %916 to i32*
  store i32 0, i32* %917, align 8, !tbaa !101
  %918 = getelementptr inbounds i8, i8* %call662, i64 380
  store i8 0, i8* %918, align 4, !tbaa !102
  %m_pfCoeff.i.i1652.4 = getelementptr inbounds i8, i8* %call662, i64 384
  %fDistance.i.i1653.4 = getelementptr inbounds i8, i8* %call662, i64 440
  %919 = bitcast i8* %fDistance.i.i1653.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %919, align 8, !tbaa !107
  %m_fGain.i.i1654.4 = getelementptr inbounds i8, i8* %call662, i64 444
  %920 = bitcast i8* %m_fGain.i.i1654.4 to float*
  store float 1.000000e+00, float* %920, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %912, align 8, !tbaa !68
  %arrayctor.next676.4 = getelementptr inbounds i8, i8* %call662, i64 448
  %921 = bitcast i8* %arrayctor.next676.4 to i32 (...)***
  %922 = getelementptr inbounds i8, i8* %call662, i64 456
  %923 = bitcast i8* %922 to i32*
  store i32 0, i32* %923, align 8, !tbaa !97
  %924 = getelementptr inbounds i8, i8* %call662, i64 460
  store i8 0, i8* %924, align 4, !tbaa !100
  %925 = getelementptr inbounds i8, i8* %call662, i64 464
  %926 = bitcast i8* %925 to i32*
  store i32 0, i32* %926, align 8, !tbaa !101
  %927 = getelementptr inbounds i8, i8* %call662, i64 468
  store i8 0, i8* %927, align 4, !tbaa !102
  %m_pfCoeff.i.i1652.5 = getelementptr inbounds i8, i8* %call662, i64 472
  %fDistance.i.i1653.5 = getelementptr inbounds i8, i8* %call662, i64 528
  %928 = bitcast i8* %fDistance.i.i1653.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %928, align 8, !tbaa !107
  %m_fGain.i.i1654.5 = getelementptr inbounds i8, i8* %call662, i64 532
  %929 = bitcast i8* %m_fGain.i.i1654.5 to float*
  store float 1.000000e+00, float* %929, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %921, align 8, !tbaa !68
  %arrayctor.next676.5 = getelementptr inbounds i8, i8* %call662, i64 536
  %930 = bitcast i8* %arrayctor.next676.5 to i32 (...)***
  %931 = getelementptr inbounds i8, i8* %call662, i64 544
  %932 = bitcast i8* %931 to i32*
  store i32 0, i32* %932, align 8, !tbaa !97
  %933 = getelementptr inbounds i8, i8* %call662, i64 548
  store i8 0, i8* %933, align 4, !tbaa !100
  %934 = getelementptr inbounds i8, i8* %call662, i64 552
  %935 = bitcast i8* %934 to i32*
  store i32 0, i32* %935, align 8, !tbaa !101
  %936 = getelementptr inbounds i8, i8* %call662, i64 556
  store i8 0, i8* %936, align 4, !tbaa !102
  %m_pfCoeff.i.i1652.6 = getelementptr inbounds i8, i8* %call662, i64 560
  %fDistance.i.i1653.6 = getelementptr inbounds i8, i8* %call662, i64 616
  %937 = bitcast i8* %fDistance.i.i1653.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %937, align 8, !tbaa !107
  %m_fGain.i.i1654.6 = getelementptr inbounds i8, i8* %call662, i64 620
  %938 = bitcast i8* %m_fGain.i.i1654.6 to float*
  store float 1.000000e+00, float* %938, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %930, align 8, !tbaa !68
  %arrayctor.next676.6 = getelementptr inbounds i8, i8* %call662, i64 624
  %939 = bitcast i8* %arrayctor.next676.6 to i32 (...)***
  %940 = getelementptr inbounds i8, i8* %call662, i64 632
  %941 = bitcast i8* %940 to i32*
  store i32 0, i32* %941, align 8, !tbaa !97
  %942 = getelementptr inbounds i8, i8* %call662, i64 636
  store i8 0, i8* %942, align 4, !tbaa !100
  %943 = getelementptr inbounds i8, i8* %call662, i64 640
  %944 = bitcast i8* %943 to i32*
  store i32 0, i32* %944, align 8, !tbaa !101
  %945 = getelementptr inbounds i8, i8* %call662, i64 644
  store i8 0, i8* %945, align 4, !tbaa !102
  %m_pfCoeff.i.i1652.7 = getelementptr inbounds i8, i8* %call662, i64 648
  %fDistance.i.i1653.7 = getelementptr inbounds i8, i8* %call662, i64 704
  %946 = bitcast i8* %fDistance.i.i1653.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1652.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %946, align 8, !tbaa !107
  %m_fGain.i.i1654.7 = getelementptr inbounds i8, i8* %call662, i64 708
  %947 = bitcast i8* %m_fGain.i.i1654.7 to float*
  store float 1.000000e+00, float* %947, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %939, align 8, !tbaa !68
  %948 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %875, i8** %948, align 8, !tbaa !284
  %call680 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.4.vec.insert1579 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %call680, i32 1
  %949 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !289
  %div6831692 = lshr i32 %949, 1
  %cmp6841693 = icmp eq i32 %div6831692, 0
  br i1 %cmp6841693, label %for.end713, label %for.body685.lr.ph

for.body685.lr.ph:                                ; preds = %sw.bb658
  %950 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %951 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body685

for.body685:                                      ; preds = %for.body685, %for.body685.lr.ph
  %indvars.iv1734 = phi i64 [ 0, %for.body685.lr.ph ], [ %indvars.iv.next1735, %for.body685 ]
  %div6831696 = phi i32 [ %div6831692, %for.body685.lr.ph ], [ %div683, %for.body685 ]
  %polPosition.sroa.0.61695 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1579, %for.body685.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1487, %for.body685 ]
  %952 = trunc i64 %indvars.iv1734 to i32
  %conv686 = uitofp i32 %952 to float
  %mul687 = fmul float %conv686, 3.600000e+02
  %conv690 = uitofp i32 %div6831696 to float
  %div691 = fdiv float %mul687, %conv690
  %add692 = fadd float %div691, 4.500000e+01
  %call693 = tail call float @_Z16DegreesToRadiansf(float %add692)
  %sub694 = fsub float -0.000000e+00, %call693
  %polPosition.sroa.0.0.vec.insert1487 = insertelement <2 x float> %polPosition.sroa.0.61695, float %sub694, i32 0
  %953 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx698 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %953, i64 %indvars.iv1734
  %954 = load i32, i32* %950, align 8, !tbaa !97
  %955 = load i8, i8* %951, align 4, !tbaa !100, !range !104
  %tobool701 = icmp ne i8 %955, 0
  %956 = bitcast %class.CAmbisonicSpeaker* %arrayidx698 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable702 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %956, align 8, !tbaa !68
  %vfn703 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable702, i64 2
  %957 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn703, align 8
  %call704 = tail call zeroext i1 %957(%class.CAmbisonicSpeaker* %arrayidx698, i32 %954, i1 zeroext %tobool701, i32 0)
  %958 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %959 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %958, i64 %indvars.iv1734, i32 0
  %960 = bitcast %class.CAmbisonicSource* %959 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable709 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %960, align 8, !tbaa !68
  %vfn710 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable709, i64 5
  %961 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn710, align 8
  tail call void %961(%class.CAmbisonicSource* %959, <2 x float> %polPosition.sroa.0.0.vec.insert1487, float 1.000000e+00)
  %indvars.iv.next1735 = add nuw nsw i64 %indvars.iv1734, 1
  %962 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !289
  %div683 = lshr i32 %962, 1
  %963 = zext i32 %div683 to i64
  %cmp684 = icmp ult i64 %indvars.iv.next1735, %963
  br i1 %cmp684, label %for.body685, label %for.end713

for.end713:                                       ; preds = %for.body685, %sw.bb658
  %polPosition.sroa.0.6.lcssa = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1579, %sw.bb658 ], [ %polPosition.sroa.0.0.vec.insert1487, %for.body685 ]
  %call714 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %964 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !289
  %div717 = lshr i32 %964, 1
  %cmp7201689 = icmp ult i32 %div717, %964
  br i1 %cmp7201689, label %for.body721.lr.ph, label %sw.epilog

for.body721.lr.ph:                                ; preds = %for.end713
  %polPosition.sroa.0.4.vec.insert1581 = insertelement <2 x float> %polPosition.sroa.0.6.lcssa, float %call714, i32 1
  %965 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %966 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %967 = zext i32 %div717 to i64
  br label %for.body721

for.body721:                                      ; preds = %for.body721, %for.body721.lr.ph
  %indvars.iv1732 = phi i64 [ %967, %for.body721.lr.ph ], [ %indvars.iv.next1733, %for.body721 ]
  %968 = phi i32 [ %964, %for.body721.lr.ph ], [ %979, %for.body721 ]
  %polPosition.sroa.0.71691 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1581, %for.body721.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1575, %for.body721 ]
  %969 = trunc i64 %indvars.iv1732 to i32
  %sub722 = add i32 %969, -4
  %conv723 = uitofp i32 %sub722 to float
  %mul724 = fmul float %conv723, 3.600000e+02
  %div726 = lshr i32 %968, 1
  %conv727 = uitofp i32 %div726 to float
  %div728 = fdiv float %mul724, %conv727
  %add729 = fadd float %div728, 4.500000e+01
  %call730 = tail call float @_Z16DegreesToRadiansf(float %add729)
  %sub731 = fsub float -0.000000e+00, %call730
  %polPosition.sroa.0.0.vec.insert1575 = insertelement <2 x float> %polPosition.sroa.0.71691, float %sub731, i32 0
  %970 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx735 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %970, i64 %indvars.iv1732
  %971 = load i32, i32* %965, align 8, !tbaa !97
  %972 = load i8, i8* %966, align 4, !tbaa !100, !range !104
  %tobool738 = icmp ne i8 %972, 0
  %973 = bitcast %class.CAmbisonicSpeaker* %arrayidx735 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable739 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %973, align 8, !tbaa !68
  %vfn740 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable739, i64 2
  %974 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn740, align 8
  %call741 = tail call zeroext i1 %974(%class.CAmbisonicSpeaker* %arrayidx735, i32 %971, i1 zeroext %tobool738, i32 0)
  %975 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %976 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %975, i64 %indvars.iv1732, i32 0
  %977 = bitcast %class.CAmbisonicSource* %976 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable746 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %977, align 8, !tbaa !68
  %vfn747 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable746, i64 5
  %978 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn747, align 8
  tail call void %978(%class.CAmbisonicSource* %976, <2 x float> %polPosition.sroa.0.0.vec.insert1575, float 1.000000e+00)
  %indvars.iv.next1733 = add nuw nsw i64 %indvars.iv1732, 1
  %979 = load i32, i32* %m_nSpeakers659, align 4, !tbaa !289
  %980 = zext i32 %979 to i64
  %cmp720 = icmp ult i64 %indvars.iv.next1733, %980
  br i1 %cmp720, label %for.body721, label %sw.epilog

sw.bb751:                                         ; preds = %if.end
  %m_nSpeakers752 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 20, i32* %m_nSpeakers752, align 4, !tbaa !289
  %call755 = tail call i8* @_Znam(i64 1768) #25
  %981 = bitcast i8* %call755 to i64*
  store i64 20, i64* %981, align 16
  %982 = getelementptr inbounds i8, i8* %call755, i64 8
  %983 = bitcast i8* %982 to i32 (...)***
  %984 = getelementptr inbounds i8, i8* %call755, i64 16
  %985 = bitcast i8* %984 to i32*
  store i32 0, i32* %985, align 8, !tbaa !97
  %986 = getelementptr inbounds i8, i8* %call755, i64 20
  store i8 0, i8* %986, align 4, !tbaa !100
  %987 = getelementptr inbounds i8, i8* %call755, i64 24
  %988 = bitcast i8* %987 to i32*
  store i32 0, i32* %988, align 8, !tbaa !101
  %989 = getelementptr inbounds i8, i8* %call755, i64 28
  store i8 0, i8* %989, align 4, !tbaa !102
  %m_pfCoeff.i.i1655 = getelementptr inbounds i8, i8* %call755, i64 32
  %fDistance.i.i1656 = getelementptr inbounds i8, i8* %call755, i64 88
  %990 = bitcast i8* %fDistance.i.i1656 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %990, align 8, !tbaa !107
  %m_fGain.i.i1657 = getelementptr inbounds i8, i8* %call755, i64 92
  %991 = bitcast i8* %m_fGain.i.i1657 to float*
  store float 1.000000e+00, float* %991, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %983, align 8, !tbaa !68
  %arrayctor.next769 = getelementptr inbounds i8, i8* %call755, i64 96
  %992 = bitcast i8* %arrayctor.next769 to i32 (...)***
  %993 = getelementptr inbounds i8, i8* %call755, i64 104
  %994 = bitcast i8* %993 to i32*
  store i32 0, i32* %994, align 8, !tbaa !97
  %995 = getelementptr inbounds i8, i8* %call755, i64 108
  store i8 0, i8* %995, align 4, !tbaa !100
  %996 = getelementptr inbounds i8, i8* %call755, i64 112
  %997 = bitcast i8* %996 to i32*
  store i32 0, i32* %997, align 8, !tbaa !101
  %998 = getelementptr inbounds i8, i8* %call755, i64 116
  store i8 0, i8* %998, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.1 = getelementptr inbounds i8, i8* %call755, i64 120
  %fDistance.i.i1656.1 = getelementptr inbounds i8, i8* %call755, i64 176
  %999 = bitcast i8* %fDistance.i.i1656.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %999, align 8, !tbaa !107
  %m_fGain.i.i1657.1 = getelementptr inbounds i8, i8* %call755, i64 180
  %1000 = bitcast i8* %m_fGain.i.i1657.1 to float*
  store float 1.000000e+00, float* %1000, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %992, align 8, !tbaa !68
  %arrayctor.next769.1 = getelementptr inbounds i8, i8* %call755, i64 184
  %1001 = bitcast i8* %arrayctor.next769.1 to i32 (...)***
  %1002 = getelementptr inbounds i8, i8* %call755, i64 192
  %1003 = bitcast i8* %1002 to i32*
  store i32 0, i32* %1003, align 8, !tbaa !97
  %1004 = getelementptr inbounds i8, i8* %call755, i64 196
  store i8 0, i8* %1004, align 4, !tbaa !100
  %1005 = getelementptr inbounds i8, i8* %call755, i64 200
  %1006 = bitcast i8* %1005 to i32*
  store i32 0, i32* %1006, align 8, !tbaa !101
  %1007 = getelementptr inbounds i8, i8* %call755, i64 204
  store i8 0, i8* %1007, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.2 = getelementptr inbounds i8, i8* %call755, i64 208
  %fDistance.i.i1656.2 = getelementptr inbounds i8, i8* %call755, i64 264
  %1008 = bitcast i8* %fDistance.i.i1656.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1008, align 8, !tbaa !107
  %m_fGain.i.i1657.2 = getelementptr inbounds i8, i8* %call755, i64 268
  %1009 = bitcast i8* %m_fGain.i.i1657.2 to float*
  store float 1.000000e+00, float* %1009, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1001, align 8, !tbaa !68
  %arrayctor.next769.2 = getelementptr inbounds i8, i8* %call755, i64 272
  %1010 = bitcast i8* %arrayctor.next769.2 to i32 (...)***
  %1011 = getelementptr inbounds i8, i8* %call755, i64 280
  %1012 = bitcast i8* %1011 to i32*
  store i32 0, i32* %1012, align 8, !tbaa !97
  %1013 = getelementptr inbounds i8, i8* %call755, i64 284
  store i8 0, i8* %1013, align 4, !tbaa !100
  %1014 = getelementptr inbounds i8, i8* %call755, i64 288
  %1015 = bitcast i8* %1014 to i32*
  store i32 0, i32* %1015, align 8, !tbaa !101
  %1016 = getelementptr inbounds i8, i8* %call755, i64 292
  store i8 0, i8* %1016, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.3 = getelementptr inbounds i8, i8* %call755, i64 296
  %fDistance.i.i1656.3 = getelementptr inbounds i8, i8* %call755, i64 352
  %1017 = bitcast i8* %fDistance.i.i1656.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1017, align 8, !tbaa !107
  %m_fGain.i.i1657.3 = getelementptr inbounds i8, i8* %call755, i64 356
  %1018 = bitcast i8* %m_fGain.i.i1657.3 to float*
  store float 1.000000e+00, float* %1018, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1010, align 8, !tbaa !68
  %arrayctor.next769.3 = getelementptr inbounds i8, i8* %call755, i64 360
  %1019 = bitcast i8* %arrayctor.next769.3 to i32 (...)***
  %1020 = getelementptr inbounds i8, i8* %call755, i64 368
  %1021 = bitcast i8* %1020 to i32*
  store i32 0, i32* %1021, align 8, !tbaa !97
  %1022 = getelementptr inbounds i8, i8* %call755, i64 372
  store i8 0, i8* %1022, align 4, !tbaa !100
  %1023 = getelementptr inbounds i8, i8* %call755, i64 376
  %1024 = bitcast i8* %1023 to i32*
  store i32 0, i32* %1024, align 8, !tbaa !101
  %1025 = getelementptr inbounds i8, i8* %call755, i64 380
  store i8 0, i8* %1025, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.4 = getelementptr inbounds i8, i8* %call755, i64 384
  %fDistance.i.i1656.4 = getelementptr inbounds i8, i8* %call755, i64 440
  %1026 = bitcast i8* %fDistance.i.i1656.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1026, align 8, !tbaa !107
  %m_fGain.i.i1657.4 = getelementptr inbounds i8, i8* %call755, i64 444
  %1027 = bitcast i8* %m_fGain.i.i1657.4 to float*
  store float 1.000000e+00, float* %1027, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1019, align 8, !tbaa !68
  %arrayctor.next769.4 = getelementptr inbounds i8, i8* %call755, i64 448
  %1028 = bitcast i8* %arrayctor.next769.4 to i32 (...)***
  %1029 = getelementptr inbounds i8, i8* %call755, i64 456
  %1030 = bitcast i8* %1029 to i32*
  store i32 0, i32* %1030, align 8, !tbaa !97
  %1031 = getelementptr inbounds i8, i8* %call755, i64 460
  store i8 0, i8* %1031, align 4, !tbaa !100
  %1032 = getelementptr inbounds i8, i8* %call755, i64 464
  %1033 = bitcast i8* %1032 to i32*
  store i32 0, i32* %1033, align 8, !tbaa !101
  %1034 = getelementptr inbounds i8, i8* %call755, i64 468
  store i8 0, i8* %1034, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.5 = getelementptr inbounds i8, i8* %call755, i64 472
  %fDistance.i.i1656.5 = getelementptr inbounds i8, i8* %call755, i64 528
  %1035 = bitcast i8* %fDistance.i.i1656.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1035, align 8, !tbaa !107
  %m_fGain.i.i1657.5 = getelementptr inbounds i8, i8* %call755, i64 532
  %1036 = bitcast i8* %m_fGain.i.i1657.5 to float*
  store float 1.000000e+00, float* %1036, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1028, align 8, !tbaa !68
  %arrayctor.next769.5 = getelementptr inbounds i8, i8* %call755, i64 536
  %1037 = bitcast i8* %arrayctor.next769.5 to i32 (...)***
  %1038 = getelementptr inbounds i8, i8* %call755, i64 544
  %1039 = bitcast i8* %1038 to i32*
  store i32 0, i32* %1039, align 8, !tbaa !97
  %1040 = getelementptr inbounds i8, i8* %call755, i64 548
  store i8 0, i8* %1040, align 4, !tbaa !100
  %1041 = getelementptr inbounds i8, i8* %call755, i64 552
  %1042 = bitcast i8* %1041 to i32*
  store i32 0, i32* %1042, align 8, !tbaa !101
  %1043 = getelementptr inbounds i8, i8* %call755, i64 556
  store i8 0, i8* %1043, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.6 = getelementptr inbounds i8, i8* %call755, i64 560
  %fDistance.i.i1656.6 = getelementptr inbounds i8, i8* %call755, i64 616
  %1044 = bitcast i8* %fDistance.i.i1656.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1044, align 8, !tbaa !107
  %m_fGain.i.i1657.6 = getelementptr inbounds i8, i8* %call755, i64 620
  %1045 = bitcast i8* %m_fGain.i.i1657.6 to float*
  store float 1.000000e+00, float* %1045, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1037, align 8, !tbaa !68
  %arrayctor.next769.6 = getelementptr inbounds i8, i8* %call755, i64 624
  %1046 = bitcast i8* %arrayctor.next769.6 to i32 (...)***
  %1047 = getelementptr inbounds i8, i8* %call755, i64 632
  %1048 = bitcast i8* %1047 to i32*
  store i32 0, i32* %1048, align 8, !tbaa !97
  %1049 = getelementptr inbounds i8, i8* %call755, i64 636
  store i8 0, i8* %1049, align 4, !tbaa !100
  %1050 = getelementptr inbounds i8, i8* %call755, i64 640
  %1051 = bitcast i8* %1050 to i32*
  store i32 0, i32* %1051, align 8, !tbaa !101
  %1052 = getelementptr inbounds i8, i8* %call755, i64 644
  store i8 0, i8* %1052, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.7 = getelementptr inbounds i8, i8* %call755, i64 648
  %fDistance.i.i1656.7 = getelementptr inbounds i8, i8* %call755, i64 704
  %1053 = bitcast i8* %fDistance.i.i1656.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1053, align 8, !tbaa !107
  %m_fGain.i.i1657.7 = getelementptr inbounds i8, i8* %call755, i64 708
  %1054 = bitcast i8* %m_fGain.i.i1657.7 to float*
  store float 1.000000e+00, float* %1054, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1046, align 8, !tbaa !68
  %arrayctor.next769.7 = getelementptr inbounds i8, i8* %call755, i64 712
  %1055 = bitcast i8* %arrayctor.next769.7 to i32 (...)***
  %1056 = getelementptr inbounds i8, i8* %call755, i64 720
  %1057 = bitcast i8* %1056 to i32*
  store i32 0, i32* %1057, align 8, !tbaa !97
  %1058 = getelementptr inbounds i8, i8* %call755, i64 724
  store i8 0, i8* %1058, align 4, !tbaa !100
  %1059 = getelementptr inbounds i8, i8* %call755, i64 728
  %1060 = bitcast i8* %1059 to i32*
  store i32 0, i32* %1060, align 8, !tbaa !101
  %1061 = getelementptr inbounds i8, i8* %call755, i64 732
  store i8 0, i8* %1061, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.8 = getelementptr inbounds i8, i8* %call755, i64 736
  %fDistance.i.i1656.8 = getelementptr inbounds i8, i8* %call755, i64 792
  %1062 = bitcast i8* %fDistance.i.i1656.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1062, align 8, !tbaa !107
  %m_fGain.i.i1657.8 = getelementptr inbounds i8, i8* %call755, i64 796
  %1063 = bitcast i8* %m_fGain.i.i1657.8 to float*
  store float 1.000000e+00, float* %1063, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1055, align 8, !tbaa !68
  %arrayctor.next769.8 = getelementptr inbounds i8, i8* %call755, i64 800
  %1064 = bitcast i8* %arrayctor.next769.8 to i32 (...)***
  %1065 = getelementptr inbounds i8, i8* %call755, i64 808
  %1066 = bitcast i8* %1065 to i32*
  store i32 0, i32* %1066, align 8, !tbaa !97
  %1067 = getelementptr inbounds i8, i8* %call755, i64 812
  store i8 0, i8* %1067, align 4, !tbaa !100
  %1068 = getelementptr inbounds i8, i8* %call755, i64 816
  %1069 = bitcast i8* %1068 to i32*
  store i32 0, i32* %1069, align 8, !tbaa !101
  %1070 = getelementptr inbounds i8, i8* %call755, i64 820
  store i8 0, i8* %1070, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.9 = getelementptr inbounds i8, i8* %call755, i64 824
  %fDistance.i.i1656.9 = getelementptr inbounds i8, i8* %call755, i64 880
  %1071 = bitcast i8* %fDistance.i.i1656.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1071, align 8, !tbaa !107
  %m_fGain.i.i1657.9 = getelementptr inbounds i8, i8* %call755, i64 884
  %1072 = bitcast i8* %m_fGain.i.i1657.9 to float*
  store float 1.000000e+00, float* %1072, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1064, align 8, !tbaa !68
  %arrayctor.next769.9 = getelementptr inbounds i8, i8* %call755, i64 888
  %1073 = bitcast i8* %arrayctor.next769.9 to i32 (...)***
  %1074 = getelementptr inbounds i8, i8* %call755, i64 896
  %1075 = bitcast i8* %1074 to i32*
  store i32 0, i32* %1075, align 8, !tbaa !97
  %1076 = getelementptr inbounds i8, i8* %call755, i64 900
  store i8 0, i8* %1076, align 4, !tbaa !100
  %1077 = getelementptr inbounds i8, i8* %call755, i64 904
  %1078 = bitcast i8* %1077 to i32*
  store i32 0, i32* %1078, align 8, !tbaa !101
  %1079 = getelementptr inbounds i8, i8* %call755, i64 908
  store i8 0, i8* %1079, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.10 = getelementptr inbounds i8, i8* %call755, i64 912
  %fDistance.i.i1656.10 = getelementptr inbounds i8, i8* %call755, i64 968
  %1080 = bitcast i8* %fDistance.i.i1656.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1080, align 8, !tbaa !107
  %m_fGain.i.i1657.10 = getelementptr inbounds i8, i8* %call755, i64 972
  %1081 = bitcast i8* %m_fGain.i.i1657.10 to float*
  store float 1.000000e+00, float* %1081, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1073, align 8, !tbaa !68
  %arrayctor.next769.10 = getelementptr inbounds i8, i8* %call755, i64 976
  %1082 = bitcast i8* %arrayctor.next769.10 to i32 (...)***
  %1083 = getelementptr inbounds i8, i8* %call755, i64 984
  %1084 = bitcast i8* %1083 to i32*
  store i32 0, i32* %1084, align 8, !tbaa !97
  %1085 = getelementptr inbounds i8, i8* %call755, i64 988
  store i8 0, i8* %1085, align 4, !tbaa !100
  %1086 = getelementptr inbounds i8, i8* %call755, i64 992
  %1087 = bitcast i8* %1086 to i32*
  store i32 0, i32* %1087, align 8, !tbaa !101
  %1088 = getelementptr inbounds i8, i8* %call755, i64 996
  store i8 0, i8* %1088, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.11 = getelementptr inbounds i8, i8* %call755, i64 1000
  %fDistance.i.i1656.11 = getelementptr inbounds i8, i8* %call755, i64 1056
  %1089 = bitcast i8* %fDistance.i.i1656.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1089, align 8, !tbaa !107
  %m_fGain.i.i1657.11 = getelementptr inbounds i8, i8* %call755, i64 1060
  %1090 = bitcast i8* %m_fGain.i.i1657.11 to float*
  store float 1.000000e+00, float* %1090, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1082, align 8, !tbaa !68
  %arrayctor.next769.11 = getelementptr inbounds i8, i8* %call755, i64 1064
  %1091 = bitcast i8* %arrayctor.next769.11 to i32 (...)***
  %1092 = getelementptr inbounds i8, i8* %call755, i64 1072
  %1093 = bitcast i8* %1092 to i32*
  store i32 0, i32* %1093, align 8, !tbaa !97
  %1094 = getelementptr inbounds i8, i8* %call755, i64 1076
  store i8 0, i8* %1094, align 4, !tbaa !100
  %1095 = getelementptr inbounds i8, i8* %call755, i64 1080
  %1096 = bitcast i8* %1095 to i32*
  store i32 0, i32* %1096, align 8, !tbaa !101
  %1097 = getelementptr inbounds i8, i8* %call755, i64 1084
  store i8 0, i8* %1097, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.12 = getelementptr inbounds i8, i8* %call755, i64 1088
  %fDistance.i.i1656.12 = getelementptr inbounds i8, i8* %call755, i64 1144
  %1098 = bitcast i8* %fDistance.i.i1656.12 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.12, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1098, align 8, !tbaa !107
  %m_fGain.i.i1657.12 = getelementptr inbounds i8, i8* %call755, i64 1148
  %1099 = bitcast i8* %m_fGain.i.i1657.12 to float*
  store float 1.000000e+00, float* %1099, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1091, align 8, !tbaa !68
  %arrayctor.next769.12 = getelementptr inbounds i8, i8* %call755, i64 1152
  %1100 = bitcast i8* %arrayctor.next769.12 to i32 (...)***
  %1101 = getelementptr inbounds i8, i8* %call755, i64 1160
  %1102 = bitcast i8* %1101 to i32*
  store i32 0, i32* %1102, align 8, !tbaa !97
  %1103 = getelementptr inbounds i8, i8* %call755, i64 1164
  store i8 0, i8* %1103, align 4, !tbaa !100
  %1104 = getelementptr inbounds i8, i8* %call755, i64 1168
  %1105 = bitcast i8* %1104 to i32*
  store i32 0, i32* %1105, align 8, !tbaa !101
  %1106 = getelementptr inbounds i8, i8* %call755, i64 1172
  store i8 0, i8* %1106, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.13 = getelementptr inbounds i8, i8* %call755, i64 1176
  %fDistance.i.i1656.13 = getelementptr inbounds i8, i8* %call755, i64 1232
  %1107 = bitcast i8* %fDistance.i.i1656.13 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.13, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1107, align 8, !tbaa !107
  %m_fGain.i.i1657.13 = getelementptr inbounds i8, i8* %call755, i64 1236
  %1108 = bitcast i8* %m_fGain.i.i1657.13 to float*
  store float 1.000000e+00, float* %1108, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1100, align 8, !tbaa !68
  %arrayctor.next769.13 = getelementptr inbounds i8, i8* %call755, i64 1240
  %1109 = bitcast i8* %arrayctor.next769.13 to i32 (...)***
  %1110 = getelementptr inbounds i8, i8* %call755, i64 1248
  %1111 = bitcast i8* %1110 to i32*
  store i32 0, i32* %1111, align 8, !tbaa !97
  %1112 = getelementptr inbounds i8, i8* %call755, i64 1252
  store i8 0, i8* %1112, align 4, !tbaa !100
  %1113 = getelementptr inbounds i8, i8* %call755, i64 1256
  %1114 = bitcast i8* %1113 to i32*
  store i32 0, i32* %1114, align 8, !tbaa !101
  %1115 = getelementptr inbounds i8, i8* %call755, i64 1260
  store i8 0, i8* %1115, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.14 = getelementptr inbounds i8, i8* %call755, i64 1264
  %fDistance.i.i1656.14 = getelementptr inbounds i8, i8* %call755, i64 1320
  %1116 = bitcast i8* %fDistance.i.i1656.14 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.14, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1116, align 8, !tbaa !107
  %m_fGain.i.i1657.14 = getelementptr inbounds i8, i8* %call755, i64 1324
  %1117 = bitcast i8* %m_fGain.i.i1657.14 to float*
  store float 1.000000e+00, float* %1117, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1109, align 8, !tbaa !68
  %arrayctor.next769.14 = getelementptr inbounds i8, i8* %call755, i64 1328
  %1118 = bitcast i8* %arrayctor.next769.14 to i32 (...)***
  %1119 = getelementptr inbounds i8, i8* %call755, i64 1336
  %1120 = bitcast i8* %1119 to i32*
  store i32 0, i32* %1120, align 8, !tbaa !97
  %1121 = getelementptr inbounds i8, i8* %call755, i64 1340
  store i8 0, i8* %1121, align 4, !tbaa !100
  %1122 = getelementptr inbounds i8, i8* %call755, i64 1344
  %1123 = bitcast i8* %1122 to i32*
  store i32 0, i32* %1123, align 8, !tbaa !101
  %1124 = getelementptr inbounds i8, i8* %call755, i64 1348
  store i8 0, i8* %1124, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.15 = getelementptr inbounds i8, i8* %call755, i64 1352
  %fDistance.i.i1656.15 = getelementptr inbounds i8, i8* %call755, i64 1408
  %1125 = bitcast i8* %fDistance.i.i1656.15 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.15, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1125, align 8, !tbaa !107
  %m_fGain.i.i1657.15 = getelementptr inbounds i8, i8* %call755, i64 1412
  %1126 = bitcast i8* %m_fGain.i.i1657.15 to float*
  store float 1.000000e+00, float* %1126, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1118, align 8, !tbaa !68
  %arrayctor.next769.15 = getelementptr inbounds i8, i8* %call755, i64 1416
  %1127 = bitcast i8* %arrayctor.next769.15 to i32 (...)***
  %1128 = getelementptr inbounds i8, i8* %call755, i64 1424
  %1129 = bitcast i8* %1128 to i32*
  store i32 0, i32* %1129, align 8, !tbaa !97
  %1130 = getelementptr inbounds i8, i8* %call755, i64 1428
  store i8 0, i8* %1130, align 4, !tbaa !100
  %1131 = getelementptr inbounds i8, i8* %call755, i64 1432
  %1132 = bitcast i8* %1131 to i32*
  store i32 0, i32* %1132, align 8, !tbaa !101
  %1133 = getelementptr inbounds i8, i8* %call755, i64 1436
  store i8 0, i8* %1133, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.16 = getelementptr inbounds i8, i8* %call755, i64 1440
  %fDistance.i.i1656.16 = getelementptr inbounds i8, i8* %call755, i64 1496
  %1134 = bitcast i8* %fDistance.i.i1656.16 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.16, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1134, align 8, !tbaa !107
  %m_fGain.i.i1657.16 = getelementptr inbounds i8, i8* %call755, i64 1500
  %1135 = bitcast i8* %m_fGain.i.i1657.16 to float*
  store float 1.000000e+00, float* %1135, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1127, align 8, !tbaa !68
  %arrayctor.next769.16 = getelementptr inbounds i8, i8* %call755, i64 1504
  %1136 = bitcast i8* %arrayctor.next769.16 to i32 (...)***
  %1137 = getelementptr inbounds i8, i8* %call755, i64 1512
  %1138 = bitcast i8* %1137 to i32*
  store i32 0, i32* %1138, align 8, !tbaa !97
  %1139 = getelementptr inbounds i8, i8* %call755, i64 1516
  store i8 0, i8* %1139, align 4, !tbaa !100
  %1140 = getelementptr inbounds i8, i8* %call755, i64 1520
  %1141 = bitcast i8* %1140 to i32*
  store i32 0, i32* %1141, align 8, !tbaa !101
  %1142 = getelementptr inbounds i8, i8* %call755, i64 1524
  store i8 0, i8* %1142, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.17 = getelementptr inbounds i8, i8* %call755, i64 1528
  %fDistance.i.i1656.17 = getelementptr inbounds i8, i8* %call755, i64 1584
  %1143 = bitcast i8* %fDistance.i.i1656.17 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.17, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1143, align 8, !tbaa !107
  %m_fGain.i.i1657.17 = getelementptr inbounds i8, i8* %call755, i64 1588
  %1144 = bitcast i8* %m_fGain.i.i1657.17 to float*
  store float 1.000000e+00, float* %1144, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1136, align 8, !tbaa !68
  %arrayctor.next769.17 = getelementptr inbounds i8, i8* %call755, i64 1592
  %1145 = bitcast i8* %arrayctor.next769.17 to i32 (...)***
  %1146 = getelementptr inbounds i8, i8* %call755, i64 1600
  %1147 = bitcast i8* %1146 to i32*
  store i32 0, i32* %1147, align 8, !tbaa !97
  %1148 = getelementptr inbounds i8, i8* %call755, i64 1604
  store i8 0, i8* %1148, align 4, !tbaa !100
  %1149 = getelementptr inbounds i8, i8* %call755, i64 1608
  %1150 = bitcast i8* %1149 to i32*
  store i32 0, i32* %1150, align 8, !tbaa !101
  %1151 = getelementptr inbounds i8, i8* %call755, i64 1612
  store i8 0, i8* %1151, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.18 = getelementptr inbounds i8, i8* %call755, i64 1616
  %fDistance.i.i1656.18 = getelementptr inbounds i8, i8* %call755, i64 1672
  %1152 = bitcast i8* %fDistance.i.i1656.18 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.18, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1152, align 8, !tbaa !107
  %m_fGain.i.i1657.18 = getelementptr inbounds i8, i8* %call755, i64 1676
  %1153 = bitcast i8* %m_fGain.i.i1657.18 to float*
  store float 1.000000e+00, float* %1153, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1145, align 8, !tbaa !68
  %arrayctor.next769.18 = getelementptr inbounds i8, i8* %call755, i64 1680
  %1154 = bitcast i8* %arrayctor.next769.18 to i32 (...)***
  %1155 = getelementptr inbounds i8, i8* %call755, i64 1688
  %1156 = bitcast i8* %1155 to i32*
  store i32 0, i32* %1156, align 8, !tbaa !97
  %1157 = getelementptr inbounds i8, i8* %call755, i64 1692
  store i8 0, i8* %1157, align 4, !tbaa !100
  %1158 = getelementptr inbounds i8, i8* %call755, i64 1696
  %1159 = bitcast i8* %1158 to i32*
  store i32 0, i32* %1159, align 8, !tbaa !101
  %1160 = getelementptr inbounds i8, i8* %call755, i64 1700
  store i8 0, i8* %1160, align 4, !tbaa !102
  %m_pfCoeff.i.i1655.19 = getelementptr inbounds i8, i8* %call755, i64 1704
  %fDistance.i.i1656.19 = getelementptr inbounds i8, i8* %call755, i64 1760
  %1161 = bitcast i8* %fDistance.i.i1656.19 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1655.19, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1161, align 8, !tbaa !107
  %m_fGain.i.i1657.19 = getelementptr inbounds i8, i8* %call755, i64 1764
  %1162 = bitcast i8* %m_fGain.i.i1657.19 to float*
  store float 1.000000e+00, float* %1162, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1154, align 8, !tbaa !68
  %1163 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %982, i8** %1163, align 8, !tbaa !284
  %call773 = tail call float @_Z16DegreesToRadiansf(float 0xC051466660000000)
  %polPosition.sroa.0.4.vec.insert1583 = insertelement <2 x float> undef, float %call773, i32 1
  %call775 = tail call float @_Z16DegreesToRadiansf(float 9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1529 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1583, float %call775, i32 0
  %1164 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1165 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1166 = load i32, i32* %1165, align 8, !tbaa !97
  %1167 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1168 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool781 = icmp ne i8 %1168, 0
  %1169 = bitcast %class.CAmbisonicSpeaker* %1164 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable782 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1169, align 8, !tbaa !68
  %vfn783 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable782, i64 2
  %1170 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn783, align 8
  %call784 = tail call zeroext i1 %1170(%class.CAmbisonicSpeaker* %1164, i32 %1166, i1 zeroext %tobool781, i32 0)
  %1171 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %1172 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %1171, align 8, !tbaa !284
  %1173 = bitcast %class.CAmbisonicSource* %1172 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable788 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1173, align 8, !tbaa !68
  %vfn789 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable788, i64 5
  %1174 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn789, align 8
  tail call void %1174(%class.CAmbisonicSource* %1172, <2 x float> %polPosition.sroa.0.0.vec.insert1529, float 1.000000e+00)
  %call790 = tail call float @_Z16DegreesToRadiansf(float -9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1573 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1529, float %call790, i32 0
  %1175 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx793 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1175, i64 1
  %1176 = load i32, i32* %1165, align 8, !tbaa !97
  %1177 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool796 = icmp ne i8 %1177, 0
  %1178 = bitcast %class.CAmbisonicSpeaker* %arrayidx793 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable797 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1178, align 8, !tbaa !68
  %vfn798 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable797, i64 2
  %1179 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn798, align 8
  %call799 = tail call zeroext i1 %1179(%class.CAmbisonicSpeaker* nonnull %arrayidx793, i32 %1176, i1 zeroext %tobool796, i32 0)
  %1180 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1181 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1180, i64 1, i32 0
  %1182 = bitcast %class.CAmbisonicSource* %1181 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable803 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1182, align 8, !tbaa !68
  %vfn804 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable803, i64 5
  %1183 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn804, align 8
  tail call void %1183(%class.CAmbisonicSource* nonnull %1181, <2 x float> %polPosition.sroa.0.0.vec.insert1573, float 1.000000e+00)
  %call805 = tail call float @_Z16DegreesToRadiansf(float 0xC041A66660000000)
  %polPosition.sroa.0.4.vec.insert1585 = insertelement <2 x float> undef, float %call805, i32 1
  %call807 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1571 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1585, float %call807, i32 0
  %1184 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx810 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1184, i64 2
  %1185 = load i32, i32* %1165, align 8, !tbaa !97
  %1186 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool813 = icmp ne i8 %1186, 0
  %1187 = bitcast %class.CAmbisonicSpeaker* %arrayidx810 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable814 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1187, align 8, !tbaa !68
  %vfn815 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable814, i64 2
  %1188 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn815, align 8
  %call816 = tail call zeroext i1 %1188(%class.CAmbisonicSpeaker* nonnull %arrayidx810, i32 %1185, i1 zeroext %tobool813, i32 0)
  %1189 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1190 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1189, i64 2, i32 0
  %1191 = bitcast %class.CAmbisonicSource* %1190 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable820 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1191, align 8, !tbaa !68
  %vfn821 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable820, i64 5
  %1192 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn821, align 8
  tail call void %1192(%class.CAmbisonicSource* nonnull %1190, <2 x float> %polPosition.sroa.0.0.vec.insert1571, float 1.000000e+00)
  %call822 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1569 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1571, float %call822, i32 0
  %1193 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx825 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1193, i64 3
  %1194 = load i32, i32* %1165, align 8, !tbaa !97
  %1195 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool828 = icmp ne i8 %1195, 0
  %1196 = bitcast %class.CAmbisonicSpeaker* %arrayidx825 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable829 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1196, align 8, !tbaa !68
  %vfn830 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable829, i64 2
  %1197 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn830, align 8
  %call831 = tail call zeroext i1 %1197(%class.CAmbisonicSpeaker* nonnull %arrayidx825, i32 %1194, i1 zeroext %tobool828, i32 0)
  %1198 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1199 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1198, i64 3, i32 0
  %1200 = bitcast %class.CAmbisonicSource* %1199 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable835 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1200, align 8, !tbaa !68
  %vfn836 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable835, i64 5
  %1201 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn836, align 8
  tail call void %1201(%class.CAmbisonicSource* nonnull %1199, <2 x float> %polPosition.sroa.0.0.vec.insert1569, float 1.000000e+00)
  %call837 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1567 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1569, float %call837, i32 0
  %1202 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx840 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1202, i64 4
  %1203 = load i32, i32* %1165, align 8, !tbaa !97
  %1204 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool843 = icmp ne i8 %1204, 0
  %1205 = bitcast %class.CAmbisonicSpeaker* %arrayidx840 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable844 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1205, align 8, !tbaa !68
  %vfn845 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable844, i64 2
  %1206 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn845, align 8
  %call846 = tail call zeroext i1 %1206(%class.CAmbisonicSpeaker* nonnull %arrayidx840, i32 %1203, i1 zeroext %tobool843, i32 0)
  %1207 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1208 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1207, i64 4, i32 0
  %1209 = bitcast %class.CAmbisonicSource* %1208 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable850 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1209, align 8, !tbaa !68
  %vfn851 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable850, i64 5
  %1210 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn851, align 8
  tail call void %1210(%class.CAmbisonicSource* nonnull %1208, <2 x float> %polPosition.sroa.0.0.vec.insert1567, float 1.000000e+00)
  %call852 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1565 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1567, float %call852, i32 0
  %1211 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx855 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1211, i64 5
  %1212 = load i32, i32* %1165, align 8, !tbaa !97
  %1213 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool858 = icmp ne i8 %1213, 0
  %1214 = bitcast %class.CAmbisonicSpeaker* %arrayidx855 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable859 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1214, align 8, !tbaa !68
  %vfn860 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable859, i64 2
  %1215 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn860, align 8
  %call861 = tail call zeroext i1 %1215(%class.CAmbisonicSpeaker* nonnull %arrayidx855, i32 %1212, i1 zeroext %tobool858, i32 0)
  %1216 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1217 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1216, i64 5, i32 0
  %1218 = bitcast %class.CAmbisonicSource* %1217 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable865 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1218, align 8, !tbaa !68
  %vfn866 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable865, i64 5
  %1219 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn866, align 8
  tail call void %1219(%class.CAmbisonicSource* nonnull %1217, <2 x float> %polPosition.sroa.0.0.vec.insert1565, float 1.000000e+00)
  %call867 = tail call float @_Z16DegreesToRadiansf(float 0xC034E66660000000)
  %polPosition.sroa.0.4.vec.insert1587 = insertelement <2 x float> undef, float %call867, i32 1
  %call869 = tail call float @_Z16DegreesToRadiansf(float 1.800000e+02)
  %polPosition.sroa.0.0.vec.insert1561 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1587, float %call869, i32 0
  %1220 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx872 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1220, i64 6
  %1221 = load i32, i32* %1165, align 8, !tbaa !97
  %1222 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool875 = icmp ne i8 %1222, 0
  %1223 = bitcast %class.CAmbisonicSpeaker* %arrayidx872 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable876 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1223, align 8, !tbaa !68
  %vfn877 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable876, i64 2
  %1224 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn877, align 8
  %call878 = tail call zeroext i1 %1224(%class.CAmbisonicSpeaker* nonnull %arrayidx872, i32 %1221, i1 zeroext %tobool875, i32 0)
  %1225 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1226 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1225, i64 6, i32 0
  %1227 = bitcast %class.CAmbisonicSource* %1226 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable882 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1227, align 8, !tbaa !68
  %vfn883 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable882, i64 5
  %1228 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn883, align 8
  tail call void %1228(%class.CAmbisonicSource* nonnull %1226, <2 x float> %polPosition.sroa.0.0.vec.insert1561, float 1.000000e+00)
  %call884 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1555 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1561, float %call884, i32 0
  %1229 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx887 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1229, i64 7
  %1230 = load i32, i32* %1165, align 8, !tbaa !97
  %1231 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool890 = icmp ne i8 %1231, 0
  %1232 = bitcast %class.CAmbisonicSpeaker* %arrayidx887 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable891 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1232, align 8, !tbaa !68
  %vfn892 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable891, i64 2
  %1233 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn892, align 8
  %call893 = tail call zeroext i1 %1233(%class.CAmbisonicSpeaker* nonnull %arrayidx887, i32 %1230, i1 zeroext %tobool890, i32 0)
  %1234 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1235 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1234, i64 7, i32 0
  %1236 = bitcast %class.CAmbisonicSource* %1235 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable897 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1236, align 8, !tbaa !68
  %vfn898 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable897, i64 5
  %1237 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn898, align 8
  tail call void %1237(%class.CAmbisonicSource* nonnull %1235, <2 x float> %polPosition.sroa.0.0.vec.insert1555, float 1.000000e+00)
  %call899 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.4.vec.insert1589 = insertelement <2 x float> undef, float %call899, i32 1
  %call901 = tail call float @_Z16DegreesToRadiansf(float 0x4051466660000000)
  %polPosition.sroa.0.0.vec.insert1547 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1589, float %call901, i32 0
  %1238 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx904 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1238, i64 8
  %1239 = load i32, i32* %1165, align 8, !tbaa !97
  %1240 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool907 = icmp ne i8 %1240, 0
  %1241 = bitcast %class.CAmbisonicSpeaker* %arrayidx904 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable908 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1241, align 8, !tbaa !68
  %vfn909 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable908, i64 2
  %1242 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn909, align 8
  %call910 = tail call zeroext i1 %1242(%class.CAmbisonicSpeaker* nonnull %arrayidx904, i32 %1239, i1 zeroext %tobool907, i32 0)
  %1243 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1244 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1243, i64 8, i32 0
  %1245 = bitcast %class.CAmbisonicSource* %1244 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable914 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1245, align 8, !tbaa !68
  %vfn915 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable914, i64 5
  %1246 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn915, align 8
  tail call void %1246(%class.CAmbisonicSource* nonnull %1244, <2 x float> %polPosition.sroa.0.0.vec.insert1547, float 1.000000e+00)
  %call916 = tail call float @_Z16DegreesToRadiansf(float 0x405BB999A0000000)
  %polPosition.sroa.0.0.vec.insert1537 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1547, float %call916, i32 0
  %1247 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx919 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1247, i64 9
  %1248 = load i32, i32* %1165, align 8, !tbaa !97
  %1249 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool922 = icmp ne i8 %1249, 0
  %1250 = bitcast %class.CAmbisonicSpeaker* %arrayidx919 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable923 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1250, align 8, !tbaa !68
  %vfn924 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable923, i64 2
  %1251 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn924, align 8
  %call925 = tail call zeroext i1 %1251(%class.CAmbisonicSpeaker* nonnull %arrayidx919, i32 %1248, i1 zeroext %tobool922, i32 0)
  %1252 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1253 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1252, i64 9, i32 0
  %1254 = bitcast %class.CAmbisonicSource* %1253 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable929 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1254, align 8, !tbaa !68
  %vfn930 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable929, i64 5
  %1255 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn930, align 8
  tail call void %1255(%class.CAmbisonicSource* nonnull %1253, <2 x float> %polPosition.sroa.0.0.vec.insert1537, float 1.000000e+00)
  %call931 = tail call float @_Z16DegreesToRadiansf(float 0xC051466660000000)
  %polPosition.sroa.0.0.vec.insert1503 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1537, float %call931, i32 0
  %1256 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx934 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1256, i64 10
  %1257 = load i32, i32* %1165, align 8, !tbaa !97
  %1258 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool937 = icmp ne i8 %1258, 0
  %1259 = bitcast %class.CAmbisonicSpeaker* %arrayidx934 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable938 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1259, align 8, !tbaa !68
  %vfn939 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable938, i64 2
  %1260 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn939, align 8
  %call940 = tail call zeroext i1 %1260(%class.CAmbisonicSpeaker* nonnull %arrayidx934, i32 %1257, i1 zeroext %tobool937, i32 0)
  %1261 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1262 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1261, i64 10, i32 0
  %1263 = bitcast %class.CAmbisonicSource* %1262 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable944 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1263, align 8, !tbaa !68
  %vfn945 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable944, i64 5
  %1264 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn945, align 8
  tail call void %1264(%class.CAmbisonicSource* nonnull %1262, <2 x float> %polPosition.sroa.0.0.vec.insert1503, float 1.000000e+00)
  %call946 = tail call float @_Z16DegreesToRadiansf(float 0xC05BB999A0000000)
  %polPosition.sroa.0.0.vec.insert1531 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1503, float %call946, i32 0
  %1265 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx949 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1265, i64 11
  %1266 = load i32, i32* %1165, align 8, !tbaa !97
  %1267 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool952 = icmp ne i8 %1267, 0
  %1268 = bitcast %class.CAmbisonicSpeaker* %arrayidx949 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable953 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1268, align 8, !tbaa !68
  %vfn954 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable953, i64 2
  %1269 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn954, align 8
  %call955 = tail call zeroext i1 %1269(%class.CAmbisonicSpeaker* nonnull %arrayidx949, i32 %1266, i1 zeroext %tobool952, i32 0)
  %1270 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1271 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1270, i64 11, i32 0
  %1272 = bitcast %class.CAmbisonicSource* %1271 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable959 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1272, align 8, !tbaa !68
  %vfn960 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable959, i64 5
  %1273 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn960, align 8
  tail call void %1273(%class.CAmbisonicSource* nonnull %1271, <2 x float> %polPosition.sroa.0.0.vec.insert1531, float 1.000000e+00)
  %call961 = tail call float @_Z16DegreesToRadiansf(float 0x4034E66660000000)
  %polPosition.sroa.0.4.vec.insert1591 = insertelement <2 x float> undef, float %call961, i32 1
  %call963 = tail call float @_Z16DegreesToRadiansf(float 1.800000e+02)
  %polPosition.sroa.0.0.vec.insert1533 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1591, float %call963, i32 0
  %1274 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx966 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1274, i64 12
  %1275 = load i32, i32* %1165, align 8, !tbaa !97
  %1276 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool969 = icmp ne i8 %1276, 0
  %1277 = bitcast %class.CAmbisonicSpeaker* %arrayidx966 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable970 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1277, align 8, !tbaa !68
  %vfn971 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable970, i64 2
  %1278 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn971, align 8
  %call972 = tail call zeroext i1 %1278(%class.CAmbisonicSpeaker* nonnull %arrayidx966, i32 %1275, i1 zeroext %tobool969, i32 0)
  %1279 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1280 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1279, i64 12, i32 0
  %1281 = bitcast %class.CAmbisonicSource* %1280 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable976 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1281, align 8, !tbaa !68
  %vfn977 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable976, i64 5
  %1282 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn977, align 8
  tail call void %1282(%class.CAmbisonicSource* nonnull %1280, <2 x float> %polPosition.sroa.0.0.vec.insert1533, float 1.000000e+00)
  %call978 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1535 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1533, float %call978, i32 0
  %1283 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx981 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1283, i64 13
  %1284 = load i32, i32* %1165, align 8, !tbaa !97
  %1285 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool984 = icmp ne i8 %1285, 0
  %1286 = bitcast %class.CAmbisonicSpeaker* %arrayidx981 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable985 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1286, align 8, !tbaa !68
  %vfn986 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable985, i64 2
  %1287 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn986, align 8
  %call987 = tail call zeroext i1 %1287(%class.CAmbisonicSpeaker* nonnull %arrayidx981, i32 %1284, i1 zeroext %tobool984, i32 0)
  %1288 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1289 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1288, i64 13, i32 0
  %1290 = bitcast %class.CAmbisonicSource* %1289 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable991 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1290, align 8, !tbaa !68
  %vfn992 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable991, i64 5
  %1291 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn992, align 8
  tail call void %1291(%class.CAmbisonicSource* nonnull %1289, <2 x float> %polPosition.sroa.0.0.vec.insert1535, float 1.000000e+00)
  %call993 = tail call float @_Z16DegreesToRadiansf(float 0x4041A66660000000)
  %polPosition.sroa.0.4.vec.insert1593 = insertelement <2 x float> undef, float %call993, i32 1
  %call995 = tail call float @_Z16DegreesToRadiansf(float 4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1539 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1593, float %call995, i32 0
  %1292 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx998 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1292, i64 14
  %1293 = load i32, i32* %1165, align 8, !tbaa !97
  %1294 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool1001 = icmp ne i8 %1294, 0
  %1295 = bitcast %class.CAmbisonicSpeaker* %arrayidx998 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1002 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1295, align 8, !tbaa !68
  %vfn1003 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1002, i64 2
  %1296 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1003, align 8
  %call1004 = tail call zeroext i1 %1296(%class.CAmbisonicSpeaker* nonnull %arrayidx998, i32 %1293, i1 zeroext %tobool1001, i32 0)
  %1297 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1298 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1297, i64 14, i32 0
  %1299 = bitcast %class.CAmbisonicSource* %1298 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1008 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1299, align 8, !tbaa !68
  %vfn1009 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1008, i64 5
  %1300 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1009, align 8
  tail call void %1300(%class.CAmbisonicSource* nonnull %1298, <2 x float> %polPosition.sroa.0.0.vec.insert1539, float 1.000000e+00)
  %call1010 = tail call float @_Z16DegreesToRadiansf(float 1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1541 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1539, float %call1010, i32 0
  %1301 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx1013 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1301, i64 15
  %1302 = load i32, i32* %1165, align 8, !tbaa !97
  %1303 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool1016 = icmp ne i8 %1303, 0
  %1304 = bitcast %class.CAmbisonicSpeaker* %arrayidx1013 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1017 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1304, align 8, !tbaa !68
  %vfn1018 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1017, i64 2
  %1305 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1018, align 8
  %call1019 = tail call zeroext i1 %1305(%class.CAmbisonicSpeaker* nonnull %arrayidx1013, i32 %1302, i1 zeroext %tobool1016, i32 0)
  %1306 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1307 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1306, i64 15, i32 0
  %1308 = bitcast %class.CAmbisonicSource* %1307 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1023 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1308, align 8, !tbaa !68
  %vfn1024 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1023, i64 5
  %1309 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1024, align 8
  tail call void %1309(%class.CAmbisonicSource* nonnull %1307, <2 x float> %polPosition.sroa.0.0.vec.insert1541, float 1.000000e+00)
  %call1025 = tail call float @_Z16DegreesToRadiansf(float -4.500000e+01)
  %polPosition.sroa.0.0.vec.insert1543 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1541, float %call1025, i32 0
  %1310 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx1028 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1310, i64 16
  %1311 = load i32, i32* %1165, align 8, !tbaa !97
  %1312 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool1031 = icmp ne i8 %1312, 0
  %1313 = bitcast %class.CAmbisonicSpeaker* %arrayidx1028 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1032 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1313, align 8, !tbaa !68
  %vfn1033 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1032, i64 2
  %1314 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1033, align 8
  %call1034 = tail call zeroext i1 %1314(%class.CAmbisonicSpeaker* nonnull %arrayidx1028, i32 %1311, i1 zeroext %tobool1031, i32 0)
  %1315 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1316 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1315, i64 16, i32 0
  %1317 = bitcast %class.CAmbisonicSource* %1316 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1038 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1317, align 8, !tbaa !68
  %vfn1039 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1038, i64 5
  %1318 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1039, align 8
  tail call void %1318(%class.CAmbisonicSource* nonnull %1316, <2 x float> %polPosition.sroa.0.0.vec.insert1543, float 1.000000e+00)
  %call1040 = tail call float @_Z16DegreesToRadiansf(float -1.350000e+02)
  %polPosition.sroa.0.0.vec.insert1545 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1543, float %call1040, i32 0
  %1319 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx1043 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1319, i64 17
  %1320 = load i32, i32* %1165, align 8, !tbaa !97
  %1321 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool1046 = icmp ne i8 %1321, 0
  %1322 = bitcast %class.CAmbisonicSpeaker* %arrayidx1043 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1047 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1322, align 8, !tbaa !68
  %vfn1048 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1047, i64 2
  %1323 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1048, align 8
  %call1049 = tail call zeroext i1 %1323(%class.CAmbisonicSpeaker* nonnull %arrayidx1043, i32 %1320, i1 zeroext %tobool1046, i32 0)
  %1324 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1325 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1324, i64 17, i32 0
  %1326 = bitcast %class.CAmbisonicSource* %1325 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1053 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1326, align 8, !tbaa !68
  %vfn1054 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1053, i64 5
  %1327 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1054, align 8
  tail call void %1327(%class.CAmbisonicSource* nonnull %1325, <2 x float> %polPosition.sroa.0.0.vec.insert1545, float 1.000000e+00)
  %call1055 = tail call float @_Z16DegreesToRadiansf(float 0x4051466660000000)
  %polPosition.sroa.0.4.vec.insert1595 = insertelement <2 x float> undef, float %call1055, i32 1
  %call1057 = tail call float @_Z16DegreesToRadiansf(float 9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1549 = insertelement <2 x float> %polPosition.sroa.0.4.vec.insert1595, float %call1057, i32 0
  %1328 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx1060 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1328, i64 18
  %1329 = load i32, i32* %1165, align 8, !tbaa !97
  %1330 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool1063 = icmp ne i8 %1330, 0
  %1331 = bitcast %class.CAmbisonicSpeaker* %arrayidx1060 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1064 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1331, align 8, !tbaa !68
  %vfn1065 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1064, i64 2
  %1332 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1065, align 8
  %call1066 = tail call zeroext i1 %1332(%class.CAmbisonicSpeaker* nonnull %arrayidx1060, i32 %1329, i1 zeroext %tobool1063, i32 0)
  %1333 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1334 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1333, i64 18, i32 0
  %1335 = bitcast %class.CAmbisonicSource* %1334 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1070 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1335, align 8, !tbaa !68
  %vfn1071 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1070, i64 5
  %1336 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1071, align 8
  tail call void %1336(%class.CAmbisonicSource* nonnull %1334, <2 x float> %polPosition.sroa.0.0.vec.insert1549, float 1.000000e+00)
  %call1072 = tail call float @_Z16DegreesToRadiansf(float -9.000000e+01)
  %polPosition.sroa.0.0.vec.insert1551 = insertelement <2 x float> %polPosition.sroa.0.0.vec.insert1549, float %call1072, i32 0
  %1337 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx1075 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1337, i64 19
  %1338 = load i32, i32* %1165, align 8, !tbaa !97
  %1339 = load i8, i8* %1167, align 4, !tbaa !100, !range !104
  %tobool1078 = icmp ne i8 %1339, 0
  %1340 = bitcast %class.CAmbisonicSpeaker* %arrayidx1075 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1079 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1340, align 8, !tbaa !68
  %vfn1080 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1079, i64 2
  %1341 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1080, align 8
  %call1081 = tail call zeroext i1 %1341(%class.CAmbisonicSpeaker* nonnull %arrayidx1075, i32 %1338, i1 zeroext %tobool1078, i32 0)
  %1342 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1343 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1342, i64 19, i32 0
  %1344 = bitcast %class.CAmbisonicSource* %1343 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1085 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1344, align 8, !tbaa !68
  %vfn1086 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1085, i64 5
  %1345 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1086, align 8
  tail call void %1345(%class.CAmbisonicSource* nonnull %1343, <2 x float> %polPosition.sroa.0.0.vec.insert1551, float 1.000000e+00)
  br label %sw.epilog

sw.bb1087:                                        ; preds = %if.end
  %m_nSpeakers1088 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 8, i32* %m_nSpeakers1088, align 4, !tbaa !289
  %call1091 = tail call i8* @_Znam(i64 712) #25
  %1346 = bitcast i8* %call1091 to i64*
  store i64 8, i64* %1346, align 16
  %1347 = getelementptr inbounds i8, i8* %call1091, i64 8
  %1348 = bitcast i8* %1347 to i32 (...)***
  %1349 = getelementptr inbounds i8, i8* %call1091, i64 16
  %1350 = bitcast i8* %1349 to i32*
  store i32 0, i32* %1350, align 8, !tbaa !97
  %1351 = getelementptr inbounds i8, i8* %call1091, i64 20
  store i8 0, i8* %1351, align 4, !tbaa !100
  %1352 = getelementptr inbounds i8, i8* %call1091, i64 24
  %1353 = bitcast i8* %1352 to i32*
  store i32 0, i32* %1353, align 8, !tbaa !101
  %1354 = getelementptr inbounds i8, i8* %call1091, i64 28
  store i8 0, i8* %1354, align 4, !tbaa !102
  %m_pfCoeff.i.i1643 = getelementptr inbounds i8, i8* %call1091, i64 32
  %fDistance.i.i1644 = getelementptr inbounds i8, i8* %call1091, i64 88
  %1355 = bitcast i8* %fDistance.i.i1644 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1355, align 8, !tbaa !107
  %m_fGain.i.i1645 = getelementptr inbounds i8, i8* %call1091, i64 92
  %1356 = bitcast i8* %m_fGain.i.i1645 to float*
  store float 1.000000e+00, float* %1356, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1348, align 8, !tbaa !68
  %arrayctor.next1105 = getelementptr inbounds i8, i8* %call1091, i64 96
  %1357 = bitcast i8* %arrayctor.next1105 to i32 (...)***
  %1358 = getelementptr inbounds i8, i8* %call1091, i64 104
  %1359 = bitcast i8* %1358 to i32*
  store i32 0, i32* %1359, align 8, !tbaa !97
  %1360 = getelementptr inbounds i8, i8* %call1091, i64 108
  store i8 0, i8* %1360, align 4, !tbaa !100
  %1361 = getelementptr inbounds i8, i8* %call1091, i64 112
  %1362 = bitcast i8* %1361 to i32*
  store i32 0, i32* %1362, align 8, !tbaa !101
  %1363 = getelementptr inbounds i8, i8* %call1091, i64 116
  store i8 0, i8* %1363, align 4, !tbaa !102
  %m_pfCoeff.i.i1643.1 = getelementptr inbounds i8, i8* %call1091, i64 120
  %fDistance.i.i1644.1 = getelementptr inbounds i8, i8* %call1091, i64 176
  %1364 = bitcast i8* %fDistance.i.i1644.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1364, align 8, !tbaa !107
  %m_fGain.i.i1645.1 = getelementptr inbounds i8, i8* %call1091, i64 180
  %1365 = bitcast i8* %m_fGain.i.i1645.1 to float*
  store float 1.000000e+00, float* %1365, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1357, align 8, !tbaa !68
  %arrayctor.next1105.1 = getelementptr inbounds i8, i8* %call1091, i64 184
  %1366 = bitcast i8* %arrayctor.next1105.1 to i32 (...)***
  %1367 = getelementptr inbounds i8, i8* %call1091, i64 192
  %1368 = bitcast i8* %1367 to i32*
  store i32 0, i32* %1368, align 8, !tbaa !97
  %1369 = getelementptr inbounds i8, i8* %call1091, i64 196
  store i8 0, i8* %1369, align 4, !tbaa !100
  %1370 = getelementptr inbounds i8, i8* %call1091, i64 200
  %1371 = bitcast i8* %1370 to i32*
  store i32 0, i32* %1371, align 8, !tbaa !101
  %1372 = getelementptr inbounds i8, i8* %call1091, i64 204
  store i8 0, i8* %1372, align 4, !tbaa !102
  %m_pfCoeff.i.i1643.2 = getelementptr inbounds i8, i8* %call1091, i64 208
  %fDistance.i.i1644.2 = getelementptr inbounds i8, i8* %call1091, i64 264
  %1373 = bitcast i8* %fDistance.i.i1644.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1373, align 8, !tbaa !107
  %m_fGain.i.i1645.2 = getelementptr inbounds i8, i8* %call1091, i64 268
  %1374 = bitcast i8* %m_fGain.i.i1645.2 to float*
  store float 1.000000e+00, float* %1374, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1366, align 8, !tbaa !68
  %arrayctor.next1105.2 = getelementptr inbounds i8, i8* %call1091, i64 272
  %1375 = bitcast i8* %arrayctor.next1105.2 to i32 (...)***
  %1376 = getelementptr inbounds i8, i8* %call1091, i64 280
  %1377 = bitcast i8* %1376 to i32*
  store i32 0, i32* %1377, align 8, !tbaa !97
  %1378 = getelementptr inbounds i8, i8* %call1091, i64 284
  store i8 0, i8* %1378, align 4, !tbaa !100
  %1379 = getelementptr inbounds i8, i8* %call1091, i64 288
  %1380 = bitcast i8* %1379 to i32*
  store i32 0, i32* %1380, align 8, !tbaa !101
  %1381 = getelementptr inbounds i8, i8* %call1091, i64 292
  store i8 0, i8* %1381, align 4, !tbaa !102
  %m_pfCoeff.i.i1643.3 = getelementptr inbounds i8, i8* %call1091, i64 296
  %fDistance.i.i1644.3 = getelementptr inbounds i8, i8* %call1091, i64 352
  %1382 = bitcast i8* %fDistance.i.i1644.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1382, align 8, !tbaa !107
  %m_fGain.i.i1645.3 = getelementptr inbounds i8, i8* %call1091, i64 356
  %1383 = bitcast i8* %m_fGain.i.i1645.3 to float*
  store float 1.000000e+00, float* %1383, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1375, align 8, !tbaa !68
  %arrayctor.next1105.3 = getelementptr inbounds i8, i8* %call1091, i64 360
  %1384 = bitcast i8* %arrayctor.next1105.3 to i32 (...)***
  %1385 = getelementptr inbounds i8, i8* %call1091, i64 368
  %1386 = bitcast i8* %1385 to i32*
  store i32 0, i32* %1386, align 8, !tbaa !97
  %1387 = getelementptr inbounds i8, i8* %call1091, i64 372
  store i8 0, i8* %1387, align 4, !tbaa !100
  %1388 = getelementptr inbounds i8, i8* %call1091, i64 376
  %1389 = bitcast i8* %1388 to i32*
  store i32 0, i32* %1389, align 8, !tbaa !101
  %1390 = getelementptr inbounds i8, i8* %call1091, i64 380
  store i8 0, i8* %1390, align 4, !tbaa !102
  %m_pfCoeff.i.i1643.4 = getelementptr inbounds i8, i8* %call1091, i64 384
  %fDistance.i.i1644.4 = getelementptr inbounds i8, i8* %call1091, i64 440
  %1391 = bitcast i8* %fDistance.i.i1644.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1391, align 8, !tbaa !107
  %m_fGain.i.i1645.4 = getelementptr inbounds i8, i8* %call1091, i64 444
  %1392 = bitcast i8* %m_fGain.i.i1645.4 to float*
  store float 1.000000e+00, float* %1392, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1384, align 8, !tbaa !68
  %arrayctor.next1105.4 = getelementptr inbounds i8, i8* %call1091, i64 448
  %1393 = bitcast i8* %arrayctor.next1105.4 to i32 (...)***
  %1394 = getelementptr inbounds i8, i8* %call1091, i64 456
  %1395 = bitcast i8* %1394 to i32*
  store i32 0, i32* %1395, align 8, !tbaa !97
  %1396 = getelementptr inbounds i8, i8* %call1091, i64 460
  store i8 0, i8* %1396, align 4, !tbaa !100
  %1397 = getelementptr inbounds i8, i8* %call1091, i64 464
  %1398 = bitcast i8* %1397 to i32*
  store i32 0, i32* %1398, align 8, !tbaa !101
  %1399 = getelementptr inbounds i8, i8* %call1091, i64 468
  store i8 0, i8* %1399, align 4, !tbaa !102
  %m_pfCoeff.i.i1643.5 = getelementptr inbounds i8, i8* %call1091, i64 472
  %fDistance.i.i1644.5 = getelementptr inbounds i8, i8* %call1091, i64 528
  %1400 = bitcast i8* %fDistance.i.i1644.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1400, align 8, !tbaa !107
  %m_fGain.i.i1645.5 = getelementptr inbounds i8, i8* %call1091, i64 532
  %1401 = bitcast i8* %m_fGain.i.i1645.5 to float*
  store float 1.000000e+00, float* %1401, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1393, align 8, !tbaa !68
  %arrayctor.next1105.5 = getelementptr inbounds i8, i8* %call1091, i64 536
  %1402 = bitcast i8* %arrayctor.next1105.5 to i32 (...)***
  %1403 = getelementptr inbounds i8, i8* %call1091, i64 544
  %1404 = bitcast i8* %1403 to i32*
  store i32 0, i32* %1404, align 8, !tbaa !97
  %1405 = getelementptr inbounds i8, i8* %call1091, i64 548
  store i8 0, i8* %1405, align 4, !tbaa !100
  %1406 = getelementptr inbounds i8, i8* %call1091, i64 552
  %1407 = bitcast i8* %1406 to i32*
  store i32 0, i32* %1407, align 8, !tbaa !101
  %1408 = getelementptr inbounds i8, i8* %call1091, i64 556
  store i8 0, i8* %1408, align 4, !tbaa !102
  %m_pfCoeff.i.i1643.6 = getelementptr inbounds i8, i8* %call1091, i64 560
  %fDistance.i.i1644.6 = getelementptr inbounds i8, i8* %call1091, i64 616
  %1409 = bitcast i8* %fDistance.i.i1644.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1409, align 8, !tbaa !107
  %m_fGain.i.i1645.6 = getelementptr inbounds i8, i8* %call1091, i64 620
  %1410 = bitcast i8* %m_fGain.i.i1645.6 to float*
  store float 1.000000e+00, float* %1410, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1402, align 8, !tbaa !68
  %arrayctor.next1105.6 = getelementptr inbounds i8, i8* %call1091, i64 624
  %1411 = bitcast i8* %arrayctor.next1105.6 to i32 (...)***
  %1412 = getelementptr inbounds i8, i8* %call1091, i64 632
  %1413 = bitcast i8* %1412 to i32*
  store i32 0, i32* %1413, align 8, !tbaa !97
  %1414 = getelementptr inbounds i8, i8* %call1091, i64 636
  store i8 0, i8* %1414, align 4, !tbaa !100
  %1415 = getelementptr inbounds i8, i8* %call1091, i64 640
  %1416 = bitcast i8* %1415 to i32*
  store i32 0, i32* %1416, align 8, !tbaa !101
  %1417 = getelementptr inbounds i8, i8* %call1091, i64 644
  store i8 0, i8* %1417, align 4, !tbaa !102
  %m_pfCoeff.i.i1643.7 = getelementptr inbounds i8, i8* %call1091, i64 648
  %fDistance.i.i1644.7 = getelementptr inbounds i8, i8* %call1091, i64 704
  %1418 = bitcast i8* %fDistance.i.i1644.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1643.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1418, align 8, !tbaa !107
  %m_fGain.i.i1645.7 = getelementptr inbounds i8, i8* %call1091, i64 708
  %1419 = bitcast i8* %m_fGain.i.i1645.7 to float*
  store float 1.000000e+00, float* %1419, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1411, align 8, !tbaa !68
  %1420 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1347, i8** %1420, align 8, !tbaa !284
  %call1109 = tail call float @_Z16DegreesToRadiansf(float 0x40419999A0000000)
  %polPosition.sroa.0.4.vec.insert1597 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %call1109, i32 1
  %1421 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !289
  %div11131700 = lshr i32 %1421, 1
  %cmp11141701 = icmp eq i32 %div11131700, 0
  br i1 %cmp11141701, label %for.end1143, label %for.body1115.lr.ph

for.body1115.lr.ph:                               ; preds = %sw.bb1087
  %1422 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1423 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body1115

for.body1115:                                     ; preds = %for.body1115, %for.body1115.lr.ph
  %indvars.iv1738 = phi i64 [ 0, %for.body1115.lr.ph ], [ %indvars.iv.next1739, %for.body1115 ]
  %div11131704 = phi i32 [ %div11131700, %for.body1115.lr.ph ], [ %div1113, %for.body1115 ]
  %polPosition.sroa.0.81703 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1597, %for.body1115.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1553, %for.body1115 ]
  %1424 = trunc i64 %indvars.iv1738 to i32
  %conv1116 = uitofp i32 %1424 to float
  %mul1117 = fmul float %conv1116, 3.600000e+02
  %conv1120 = uitofp i32 %div11131704 to float
  %div1121 = fdiv float %mul1117, %conv1120
  %add1122 = fadd float %div1121, 4.500000e+01
  %call1123 = tail call float @_Z16DegreesToRadiansf(float %add1122)
  %sub1124 = fsub float -0.000000e+00, %call1123
  %polPosition.sroa.0.0.vec.insert1553 = insertelement <2 x float> %polPosition.sroa.0.81703, float %sub1124, i32 0
  %1425 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx1128 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1425, i64 %indvars.iv1738
  %1426 = load i32, i32* %1422, align 8, !tbaa !97
  %1427 = load i8, i8* %1423, align 4, !tbaa !100, !range !104
  %tobool1131 = icmp ne i8 %1427, 0
  %1428 = bitcast %class.CAmbisonicSpeaker* %arrayidx1128 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1132 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1428, align 8, !tbaa !68
  %vfn1133 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1132, i64 2
  %1429 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1133, align 8
  %call1134 = tail call zeroext i1 %1429(%class.CAmbisonicSpeaker* %arrayidx1128, i32 %1426, i1 zeroext %tobool1131, i32 0)
  %1430 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1431 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1430, i64 %indvars.iv1738, i32 0
  %1432 = bitcast %class.CAmbisonicSource* %1431 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1139 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1432, align 8, !tbaa !68
  %vfn1140 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1139, i64 5
  %1433 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1140, align 8
  tail call void %1433(%class.CAmbisonicSource* %1431, <2 x float> %polPosition.sroa.0.0.vec.insert1553, float 1.000000e+00)
  %indvars.iv.next1739 = add nuw nsw i64 %indvars.iv1738, 1
  %1434 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !289
  %div1113 = lshr i32 %1434, 1
  %1435 = zext i32 %div1113 to i64
  %cmp1114 = icmp ult i64 %indvars.iv.next1739, %1435
  br i1 %cmp1114, label %for.body1115, label %for.end1143

for.end1143:                                      ; preds = %for.body1115, %sw.bb1087
  %polPosition.sroa.0.8.lcssa = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert1597, %sw.bb1087 ], [ %polPosition.sroa.0.0.vec.insert1553, %for.body1115 ]
  %call1144 = tail call float @_Z16DegreesToRadiansf(float 0xC0419999A0000000)
  %1436 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !289
  %div1147 = lshr i32 %1436, 1
  %cmp11501697 = icmp ult i32 %div1147, %1436
  br i1 %cmp11501697, label %for.body1151.lr.ph, label %sw.epilog

for.body1151.lr.ph:                               ; preds = %for.end1143
  %polPosition.sroa.0.4.vec.insert = insertelement <2 x float> %polPosition.sroa.0.8.lcssa, float %call1144, i32 1
  %1437 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1438 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1439 = zext i32 %div1147 to i64
  br label %for.body1151

for.body1151:                                     ; preds = %for.body1151, %for.body1151.lr.ph
  %indvars.iv1736 = phi i64 [ %1439, %for.body1151.lr.ph ], [ %indvars.iv.next1737, %for.body1151 ]
  %1440 = phi i32 [ %1436, %for.body1151.lr.ph ], [ %1451, %for.body1151 ]
  %polPosition.sroa.0.91699 = phi <2 x float> [ %polPosition.sroa.0.4.vec.insert, %for.body1151.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1557, %for.body1151 ]
  %1441 = trunc i64 %indvars.iv1736 to i32
  %sub1152 = add i32 %1441, -4
  %conv1153 = uitofp i32 %sub1152 to float
  %mul1154 = fmul float %conv1153, 3.600000e+02
  %div1156 = lshr i32 %1440, 1
  %conv1157 = uitofp i32 %div1156 to float
  %div1158 = fdiv float %mul1154, %conv1157
  %add1159 = fadd float %div1158, 4.500000e+01
  %call1160 = tail call float @_Z16DegreesToRadiansf(float %add1159)
  %sub1161 = fsub float -0.000000e+00, %call1160
  %polPosition.sroa.0.0.vec.insert1557 = insertelement <2 x float> %polPosition.sroa.0.91699, float %sub1161, i32 0
  %1442 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx1165 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1442, i64 %indvars.iv1736
  %1443 = load i32, i32* %1437, align 8, !tbaa !97
  %1444 = load i8, i8* %1438, align 4, !tbaa !100, !range !104
  %tobool1168 = icmp ne i8 %1444, 0
  %1445 = bitcast %class.CAmbisonicSpeaker* %arrayidx1165 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1169 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1445, align 8, !tbaa !68
  %vfn1170 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1169, i64 2
  %1446 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1170, align 8
  %call1171 = tail call zeroext i1 %1446(%class.CAmbisonicSpeaker* %arrayidx1165, i32 %1443, i1 zeroext %tobool1168, i32 0)
  %1447 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1448 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1447, i64 %indvars.iv1736, i32 0
  %1449 = bitcast %class.CAmbisonicSource* %1448 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1176 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1449, align 8, !tbaa !68
  %vfn1177 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1176, i64 5
  %1450 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1177, align 8
  tail call void %1450(%class.CAmbisonicSource* %1448, <2 x float> %polPosition.sroa.0.0.vec.insert1557, float 1.000000e+00)
  %indvars.iv.next1737 = add nuw nsw i64 %indvars.iv1736, 1
  %1451 = load i32, i32* %m_nSpeakers1088, align 4, !tbaa !289
  %1452 = zext i32 %1451 to i64
  %cmp1150 = icmp ult i64 %indvars.iv.next1737, %1452
  br i1 %cmp1150, label %for.body1151, label %sw.epilog

sw.bb1181:                                        ; preds = %if.end
  %m_nSpeakers1182 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 17, i32* %m_nSpeakers1182, align 4, !tbaa !289
  %call1185 = tail call i8* @_Znam(i64 1504) #25
  %1453 = bitcast i8* %call1185 to i64*
  store i64 17, i64* %1453, align 16
  %1454 = getelementptr inbounds i8, i8* %call1185, i64 8
  %1455 = bitcast i8* %1454 to i32 (...)***
  %1456 = getelementptr inbounds i8, i8* %call1185, i64 16
  %1457 = bitcast i8* %1456 to i32*
  store i32 0, i32* %1457, align 8, !tbaa !97
  %1458 = getelementptr inbounds i8, i8* %call1185, i64 20
  store i8 0, i8* %1458, align 4, !tbaa !100
  %1459 = getelementptr inbounds i8, i8* %call1185, i64 24
  %1460 = bitcast i8* %1459 to i32*
  store i32 0, i32* %1460, align 8, !tbaa !101
  %1461 = getelementptr inbounds i8, i8* %call1185, i64 28
  store i8 0, i8* %1461, align 4, !tbaa !102
  %m_pfCoeff.i.i1628 = getelementptr inbounds i8, i8* %call1185, i64 32
  %fDistance.i.i1629 = getelementptr inbounds i8, i8* %call1185, i64 88
  %1462 = bitcast i8* %fDistance.i.i1629 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1462, align 8, !tbaa !107
  %m_fGain.i.i1630 = getelementptr inbounds i8, i8* %call1185, i64 92
  %1463 = bitcast i8* %m_fGain.i.i1630 to float*
  store float 1.000000e+00, float* %1463, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1455, align 8, !tbaa !68
  %arrayctor.next1199 = getelementptr inbounds i8, i8* %call1185, i64 96
  %1464 = bitcast i8* %arrayctor.next1199 to i32 (...)***
  %1465 = getelementptr inbounds i8, i8* %call1185, i64 104
  %1466 = bitcast i8* %1465 to i32*
  store i32 0, i32* %1466, align 8, !tbaa !97
  %1467 = getelementptr inbounds i8, i8* %call1185, i64 108
  store i8 0, i8* %1467, align 4, !tbaa !100
  %1468 = getelementptr inbounds i8, i8* %call1185, i64 112
  %1469 = bitcast i8* %1468 to i32*
  store i32 0, i32* %1469, align 8, !tbaa !101
  %1470 = getelementptr inbounds i8, i8* %call1185, i64 116
  store i8 0, i8* %1470, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.1 = getelementptr inbounds i8, i8* %call1185, i64 120
  %fDistance.i.i1629.1 = getelementptr inbounds i8, i8* %call1185, i64 176
  %1471 = bitcast i8* %fDistance.i.i1629.1 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.1, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1471, align 8, !tbaa !107
  %m_fGain.i.i1630.1 = getelementptr inbounds i8, i8* %call1185, i64 180
  %1472 = bitcast i8* %m_fGain.i.i1630.1 to float*
  store float 1.000000e+00, float* %1472, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1464, align 8, !tbaa !68
  %arrayctor.next1199.1 = getelementptr inbounds i8, i8* %call1185, i64 184
  %1473 = bitcast i8* %arrayctor.next1199.1 to i32 (...)***
  %1474 = getelementptr inbounds i8, i8* %call1185, i64 192
  %1475 = bitcast i8* %1474 to i32*
  store i32 0, i32* %1475, align 8, !tbaa !97
  %1476 = getelementptr inbounds i8, i8* %call1185, i64 196
  store i8 0, i8* %1476, align 4, !tbaa !100
  %1477 = getelementptr inbounds i8, i8* %call1185, i64 200
  %1478 = bitcast i8* %1477 to i32*
  store i32 0, i32* %1478, align 8, !tbaa !101
  %1479 = getelementptr inbounds i8, i8* %call1185, i64 204
  store i8 0, i8* %1479, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.2 = getelementptr inbounds i8, i8* %call1185, i64 208
  %fDistance.i.i1629.2 = getelementptr inbounds i8, i8* %call1185, i64 264
  %1480 = bitcast i8* %fDistance.i.i1629.2 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.2, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1480, align 8, !tbaa !107
  %m_fGain.i.i1630.2 = getelementptr inbounds i8, i8* %call1185, i64 268
  %1481 = bitcast i8* %m_fGain.i.i1630.2 to float*
  store float 1.000000e+00, float* %1481, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1473, align 8, !tbaa !68
  %arrayctor.next1199.2 = getelementptr inbounds i8, i8* %call1185, i64 272
  %1482 = bitcast i8* %arrayctor.next1199.2 to i32 (...)***
  %1483 = getelementptr inbounds i8, i8* %call1185, i64 280
  %1484 = bitcast i8* %1483 to i32*
  store i32 0, i32* %1484, align 8, !tbaa !97
  %1485 = getelementptr inbounds i8, i8* %call1185, i64 284
  store i8 0, i8* %1485, align 4, !tbaa !100
  %1486 = getelementptr inbounds i8, i8* %call1185, i64 288
  %1487 = bitcast i8* %1486 to i32*
  store i32 0, i32* %1487, align 8, !tbaa !101
  %1488 = getelementptr inbounds i8, i8* %call1185, i64 292
  store i8 0, i8* %1488, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.3 = getelementptr inbounds i8, i8* %call1185, i64 296
  %fDistance.i.i1629.3 = getelementptr inbounds i8, i8* %call1185, i64 352
  %1489 = bitcast i8* %fDistance.i.i1629.3 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.3, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1489, align 8, !tbaa !107
  %m_fGain.i.i1630.3 = getelementptr inbounds i8, i8* %call1185, i64 356
  %1490 = bitcast i8* %m_fGain.i.i1630.3 to float*
  store float 1.000000e+00, float* %1490, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1482, align 8, !tbaa !68
  %arrayctor.next1199.3 = getelementptr inbounds i8, i8* %call1185, i64 360
  %1491 = bitcast i8* %arrayctor.next1199.3 to i32 (...)***
  %1492 = getelementptr inbounds i8, i8* %call1185, i64 368
  %1493 = bitcast i8* %1492 to i32*
  store i32 0, i32* %1493, align 8, !tbaa !97
  %1494 = getelementptr inbounds i8, i8* %call1185, i64 372
  store i8 0, i8* %1494, align 4, !tbaa !100
  %1495 = getelementptr inbounds i8, i8* %call1185, i64 376
  %1496 = bitcast i8* %1495 to i32*
  store i32 0, i32* %1496, align 8, !tbaa !101
  %1497 = getelementptr inbounds i8, i8* %call1185, i64 380
  store i8 0, i8* %1497, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.4 = getelementptr inbounds i8, i8* %call1185, i64 384
  %fDistance.i.i1629.4 = getelementptr inbounds i8, i8* %call1185, i64 440
  %1498 = bitcast i8* %fDistance.i.i1629.4 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.4, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1498, align 8, !tbaa !107
  %m_fGain.i.i1630.4 = getelementptr inbounds i8, i8* %call1185, i64 444
  %1499 = bitcast i8* %m_fGain.i.i1630.4 to float*
  store float 1.000000e+00, float* %1499, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1491, align 8, !tbaa !68
  %arrayctor.next1199.4 = getelementptr inbounds i8, i8* %call1185, i64 448
  %1500 = bitcast i8* %arrayctor.next1199.4 to i32 (...)***
  %1501 = getelementptr inbounds i8, i8* %call1185, i64 456
  %1502 = bitcast i8* %1501 to i32*
  store i32 0, i32* %1502, align 8, !tbaa !97
  %1503 = getelementptr inbounds i8, i8* %call1185, i64 460
  store i8 0, i8* %1503, align 4, !tbaa !100
  %1504 = getelementptr inbounds i8, i8* %call1185, i64 464
  %1505 = bitcast i8* %1504 to i32*
  store i32 0, i32* %1505, align 8, !tbaa !101
  %1506 = getelementptr inbounds i8, i8* %call1185, i64 468
  store i8 0, i8* %1506, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.5 = getelementptr inbounds i8, i8* %call1185, i64 472
  %fDistance.i.i1629.5 = getelementptr inbounds i8, i8* %call1185, i64 528
  %1507 = bitcast i8* %fDistance.i.i1629.5 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.5, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1507, align 8, !tbaa !107
  %m_fGain.i.i1630.5 = getelementptr inbounds i8, i8* %call1185, i64 532
  %1508 = bitcast i8* %m_fGain.i.i1630.5 to float*
  store float 1.000000e+00, float* %1508, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1500, align 8, !tbaa !68
  %arrayctor.next1199.5 = getelementptr inbounds i8, i8* %call1185, i64 536
  %1509 = bitcast i8* %arrayctor.next1199.5 to i32 (...)***
  %1510 = getelementptr inbounds i8, i8* %call1185, i64 544
  %1511 = bitcast i8* %1510 to i32*
  store i32 0, i32* %1511, align 8, !tbaa !97
  %1512 = getelementptr inbounds i8, i8* %call1185, i64 548
  store i8 0, i8* %1512, align 4, !tbaa !100
  %1513 = getelementptr inbounds i8, i8* %call1185, i64 552
  %1514 = bitcast i8* %1513 to i32*
  store i32 0, i32* %1514, align 8, !tbaa !101
  %1515 = getelementptr inbounds i8, i8* %call1185, i64 556
  store i8 0, i8* %1515, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.6 = getelementptr inbounds i8, i8* %call1185, i64 560
  %fDistance.i.i1629.6 = getelementptr inbounds i8, i8* %call1185, i64 616
  %1516 = bitcast i8* %fDistance.i.i1629.6 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.6, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1516, align 8, !tbaa !107
  %m_fGain.i.i1630.6 = getelementptr inbounds i8, i8* %call1185, i64 620
  %1517 = bitcast i8* %m_fGain.i.i1630.6 to float*
  store float 1.000000e+00, float* %1517, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1509, align 8, !tbaa !68
  %arrayctor.next1199.6 = getelementptr inbounds i8, i8* %call1185, i64 624
  %1518 = bitcast i8* %arrayctor.next1199.6 to i32 (...)***
  %1519 = getelementptr inbounds i8, i8* %call1185, i64 632
  %1520 = bitcast i8* %1519 to i32*
  store i32 0, i32* %1520, align 8, !tbaa !97
  %1521 = getelementptr inbounds i8, i8* %call1185, i64 636
  store i8 0, i8* %1521, align 4, !tbaa !100
  %1522 = getelementptr inbounds i8, i8* %call1185, i64 640
  %1523 = bitcast i8* %1522 to i32*
  store i32 0, i32* %1523, align 8, !tbaa !101
  %1524 = getelementptr inbounds i8, i8* %call1185, i64 644
  store i8 0, i8* %1524, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.7 = getelementptr inbounds i8, i8* %call1185, i64 648
  %fDistance.i.i1629.7 = getelementptr inbounds i8, i8* %call1185, i64 704
  %1525 = bitcast i8* %fDistance.i.i1629.7 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.7, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1525, align 8, !tbaa !107
  %m_fGain.i.i1630.7 = getelementptr inbounds i8, i8* %call1185, i64 708
  %1526 = bitcast i8* %m_fGain.i.i1630.7 to float*
  store float 1.000000e+00, float* %1526, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1518, align 8, !tbaa !68
  %arrayctor.next1199.7 = getelementptr inbounds i8, i8* %call1185, i64 712
  %1527 = bitcast i8* %arrayctor.next1199.7 to i32 (...)***
  %1528 = getelementptr inbounds i8, i8* %call1185, i64 720
  %1529 = bitcast i8* %1528 to i32*
  store i32 0, i32* %1529, align 8, !tbaa !97
  %1530 = getelementptr inbounds i8, i8* %call1185, i64 724
  store i8 0, i8* %1530, align 4, !tbaa !100
  %1531 = getelementptr inbounds i8, i8* %call1185, i64 728
  %1532 = bitcast i8* %1531 to i32*
  store i32 0, i32* %1532, align 8, !tbaa !101
  %1533 = getelementptr inbounds i8, i8* %call1185, i64 732
  store i8 0, i8* %1533, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.8 = getelementptr inbounds i8, i8* %call1185, i64 736
  %fDistance.i.i1629.8 = getelementptr inbounds i8, i8* %call1185, i64 792
  %1534 = bitcast i8* %fDistance.i.i1629.8 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.8, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1534, align 8, !tbaa !107
  %m_fGain.i.i1630.8 = getelementptr inbounds i8, i8* %call1185, i64 796
  %1535 = bitcast i8* %m_fGain.i.i1630.8 to float*
  store float 1.000000e+00, float* %1535, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1527, align 8, !tbaa !68
  %arrayctor.next1199.8 = getelementptr inbounds i8, i8* %call1185, i64 800
  %1536 = bitcast i8* %arrayctor.next1199.8 to i32 (...)***
  %1537 = getelementptr inbounds i8, i8* %call1185, i64 808
  %1538 = bitcast i8* %1537 to i32*
  store i32 0, i32* %1538, align 8, !tbaa !97
  %1539 = getelementptr inbounds i8, i8* %call1185, i64 812
  store i8 0, i8* %1539, align 4, !tbaa !100
  %1540 = getelementptr inbounds i8, i8* %call1185, i64 816
  %1541 = bitcast i8* %1540 to i32*
  store i32 0, i32* %1541, align 8, !tbaa !101
  %1542 = getelementptr inbounds i8, i8* %call1185, i64 820
  store i8 0, i8* %1542, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.9 = getelementptr inbounds i8, i8* %call1185, i64 824
  %fDistance.i.i1629.9 = getelementptr inbounds i8, i8* %call1185, i64 880
  %1543 = bitcast i8* %fDistance.i.i1629.9 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.9, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1543, align 8, !tbaa !107
  %m_fGain.i.i1630.9 = getelementptr inbounds i8, i8* %call1185, i64 884
  %1544 = bitcast i8* %m_fGain.i.i1630.9 to float*
  store float 1.000000e+00, float* %1544, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1536, align 8, !tbaa !68
  %arrayctor.next1199.9 = getelementptr inbounds i8, i8* %call1185, i64 888
  %1545 = bitcast i8* %arrayctor.next1199.9 to i32 (...)***
  %1546 = getelementptr inbounds i8, i8* %call1185, i64 896
  %1547 = bitcast i8* %1546 to i32*
  store i32 0, i32* %1547, align 8, !tbaa !97
  %1548 = getelementptr inbounds i8, i8* %call1185, i64 900
  store i8 0, i8* %1548, align 4, !tbaa !100
  %1549 = getelementptr inbounds i8, i8* %call1185, i64 904
  %1550 = bitcast i8* %1549 to i32*
  store i32 0, i32* %1550, align 8, !tbaa !101
  %1551 = getelementptr inbounds i8, i8* %call1185, i64 908
  store i8 0, i8* %1551, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.10 = getelementptr inbounds i8, i8* %call1185, i64 912
  %fDistance.i.i1629.10 = getelementptr inbounds i8, i8* %call1185, i64 968
  %1552 = bitcast i8* %fDistance.i.i1629.10 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.10, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1552, align 8, !tbaa !107
  %m_fGain.i.i1630.10 = getelementptr inbounds i8, i8* %call1185, i64 972
  %1553 = bitcast i8* %m_fGain.i.i1630.10 to float*
  store float 1.000000e+00, float* %1553, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1545, align 8, !tbaa !68
  %arrayctor.next1199.10 = getelementptr inbounds i8, i8* %call1185, i64 976
  %1554 = bitcast i8* %arrayctor.next1199.10 to i32 (...)***
  %1555 = getelementptr inbounds i8, i8* %call1185, i64 984
  %1556 = bitcast i8* %1555 to i32*
  store i32 0, i32* %1556, align 8, !tbaa !97
  %1557 = getelementptr inbounds i8, i8* %call1185, i64 988
  store i8 0, i8* %1557, align 4, !tbaa !100
  %1558 = getelementptr inbounds i8, i8* %call1185, i64 992
  %1559 = bitcast i8* %1558 to i32*
  store i32 0, i32* %1559, align 8, !tbaa !101
  %1560 = getelementptr inbounds i8, i8* %call1185, i64 996
  store i8 0, i8* %1560, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.11 = getelementptr inbounds i8, i8* %call1185, i64 1000
  %fDistance.i.i1629.11 = getelementptr inbounds i8, i8* %call1185, i64 1056
  %1561 = bitcast i8* %fDistance.i.i1629.11 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.11, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1561, align 8, !tbaa !107
  %m_fGain.i.i1630.11 = getelementptr inbounds i8, i8* %call1185, i64 1060
  %1562 = bitcast i8* %m_fGain.i.i1630.11 to float*
  store float 1.000000e+00, float* %1562, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1554, align 8, !tbaa !68
  %arrayctor.next1199.11 = getelementptr inbounds i8, i8* %call1185, i64 1064
  %1563 = bitcast i8* %arrayctor.next1199.11 to i32 (...)***
  %1564 = getelementptr inbounds i8, i8* %call1185, i64 1072
  %1565 = bitcast i8* %1564 to i32*
  store i32 0, i32* %1565, align 8, !tbaa !97
  %1566 = getelementptr inbounds i8, i8* %call1185, i64 1076
  store i8 0, i8* %1566, align 4, !tbaa !100
  %1567 = getelementptr inbounds i8, i8* %call1185, i64 1080
  %1568 = bitcast i8* %1567 to i32*
  store i32 0, i32* %1568, align 8, !tbaa !101
  %1569 = getelementptr inbounds i8, i8* %call1185, i64 1084
  store i8 0, i8* %1569, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.12 = getelementptr inbounds i8, i8* %call1185, i64 1088
  %fDistance.i.i1629.12 = getelementptr inbounds i8, i8* %call1185, i64 1144
  %1570 = bitcast i8* %fDistance.i.i1629.12 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.12, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1570, align 8, !tbaa !107
  %m_fGain.i.i1630.12 = getelementptr inbounds i8, i8* %call1185, i64 1148
  %1571 = bitcast i8* %m_fGain.i.i1630.12 to float*
  store float 1.000000e+00, float* %1571, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1563, align 8, !tbaa !68
  %arrayctor.next1199.12 = getelementptr inbounds i8, i8* %call1185, i64 1152
  %1572 = bitcast i8* %arrayctor.next1199.12 to i32 (...)***
  %1573 = getelementptr inbounds i8, i8* %call1185, i64 1160
  %1574 = bitcast i8* %1573 to i32*
  store i32 0, i32* %1574, align 8, !tbaa !97
  %1575 = getelementptr inbounds i8, i8* %call1185, i64 1164
  store i8 0, i8* %1575, align 4, !tbaa !100
  %1576 = getelementptr inbounds i8, i8* %call1185, i64 1168
  %1577 = bitcast i8* %1576 to i32*
  store i32 0, i32* %1577, align 8, !tbaa !101
  %1578 = getelementptr inbounds i8, i8* %call1185, i64 1172
  store i8 0, i8* %1578, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.13 = getelementptr inbounds i8, i8* %call1185, i64 1176
  %fDistance.i.i1629.13 = getelementptr inbounds i8, i8* %call1185, i64 1232
  %1579 = bitcast i8* %fDistance.i.i1629.13 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.13, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1579, align 8, !tbaa !107
  %m_fGain.i.i1630.13 = getelementptr inbounds i8, i8* %call1185, i64 1236
  %1580 = bitcast i8* %m_fGain.i.i1630.13 to float*
  store float 1.000000e+00, float* %1580, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1572, align 8, !tbaa !68
  %arrayctor.next1199.13 = getelementptr inbounds i8, i8* %call1185, i64 1240
  %1581 = bitcast i8* %arrayctor.next1199.13 to i32 (...)***
  %1582 = getelementptr inbounds i8, i8* %call1185, i64 1248
  %1583 = bitcast i8* %1582 to i32*
  store i32 0, i32* %1583, align 8, !tbaa !97
  %1584 = getelementptr inbounds i8, i8* %call1185, i64 1252
  store i8 0, i8* %1584, align 4, !tbaa !100
  %1585 = getelementptr inbounds i8, i8* %call1185, i64 1256
  %1586 = bitcast i8* %1585 to i32*
  store i32 0, i32* %1586, align 8, !tbaa !101
  %1587 = getelementptr inbounds i8, i8* %call1185, i64 1260
  store i8 0, i8* %1587, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.14 = getelementptr inbounds i8, i8* %call1185, i64 1264
  %fDistance.i.i1629.14 = getelementptr inbounds i8, i8* %call1185, i64 1320
  %1588 = bitcast i8* %fDistance.i.i1629.14 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.14, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1588, align 8, !tbaa !107
  %m_fGain.i.i1630.14 = getelementptr inbounds i8, i8* %call1185, i64 1324
  %1589 = bitcast i8* %m_fGain.i.i1630.14 to float*
  store float 1.000000e+00, float* %1589, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1581, align 8, !tbaa !68
  %arrayctor.next1199.14 = getelementptr inbounds i8, i8* %call1185, i64 1328
  %1590 = bitcast i8* %arrayctor.next1199.14 to i32 (...)***
  %1591 = getelementptr inbounds i8, i8* %call1185, i64 1336
  %1592 = bitcast i8* %1591 to i32*
  store i32 0, i32* %1592, align 8, !tbaa !97
  %1593 = getelementptr inbounds i8, i8* %call1185, i64 1340
  store i8 0, i8* %1593, align 4, !tbaa !100
  %1594 = getelementptr inbounds i8, i8* %call1185, i64 1344
  %1595 = bitcast i8* %1594 to i32*
  store i32 0, i32* %1595, align 8, !tbaa !101
  %1596 = getelementptr inbounds i8, i8* %call1185, i64 1348
  store i8 0, i8* %1596, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.15 = getelementptr inbounds i8, i8* %call1185, i64 1352
  %fDistance.i.i1629.15 = getelementptr inbounds i8, i8* %call1185, i64 1408
  %1597 = bitcast i8* %fDistance.i.i1629.15 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.15, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1597, align 8, !tbaa !107
  %m_fGain.i.i1630.15 = getelementptr inbounds i8, i8* %call1185, i64 1412
  %1598 = bitcast i8* %m_fGain.i.i1630.15 to float*
  store float 1.000000e+00, float* %1598, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1590, align 8, !tbaa !68
  %arrayctor.next1199.15 = getelementptr inbounds i8, i8* %call1185, i64 1416
  %1599 = bitcast i8* %arrayctor.next1199.15 to i32 (...)***
  %1600 = getelementptr inbounds i8, i8* %call1185, i64 1424
  %1601 = bitcast i8* %1600 to i32*
  store i32 0, i32* %1601, align 8, !tbaa !97
  %1602 = getelementptr inbounds i8, i8* %call1185, i64 1428
  store i8 0, i8* %1602, align 4, !tbaa !100
  %1603 = getelementptr inbounds i8, i8* %call1185, i64 1432
  %1604 = bitcast i8* %1603 to i32*
  store i32 0, i32* %1604, align 8, !tbaa !101
  %1605 = getelementptr inbounds i8, i8* %call1185, i64 1436
  store i8 0, i8* %1605, align 4, !tbaa !102
  %m_pfCoeff.i.i1628.16 = getelementptr inbounds i8, i8* %call1185, i64 1440
  %fDistance.i.i1629.16 = getelementptr inbounds i8, i8* %call1185, i64 1496
  %1606 = bitcast i8* %fDistance.i.i1629.16 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1628.16, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1606, align 8, !tbaa !107
  %m_fGain.i.i1630.16 = getelementptr inbounds i8, i8* %call1185, i64 1500
  %1607 = bitcast i8* %m_fGain.i.i1630.16 to float*
  store float 1.000000e+00, float* %1607, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1599, align 8, !tbaa !68
  %1608 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1454, i8** %1608, align 8, !tbaa !284
  %1609 = load i32, i32* %m_nSpeakers1182, align 4, !tbaa !289
  %cmp12071706 = icmp eq i32 %1609, 0
  br i1 %cmp12071706, label %sw.epilog, label %for.body1208.lr.ph

for.body1208.lr.ph:                               ; preds = %sw.bb1181
  %1610 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1611 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  br label %for.body1208

for.body1208:                                     ; preds = %for.body1208, %for.body1208.lr.ph
  %indvars.iv1740 = phi i64 [ 0, %for.body1208.lr.ph ], [ %indvars.iv.next1741, %for.body1208 ]
  %polPosition.sroa.0.101708 = phi <2 x float> [ zeroinitializer, %for.body1208.lr.ph ], [ %polPosition.sroa.0.0.vec.insert1563, %for.body1208 ]
  %call1209 = tail call float @_Z16DegreesToRadiansf(float 0.000000e+00)
  %polPosition.sroa.0.0.vec.insert1563 = insertelement <2 x float> %polPosition.sroa.0.101708, float %call1209, i32 0
  %1612 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx1213 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1612, i64 %indvars.iv1740
  %1613 = load i32, i32* %1610, align 8, !tbaa !97
  %1614 = load i8, i8* %1611, align 4, !tbaa !100, !range !104
  %tobool1216 = icmp ne i8 %1614, 0
  %1615 = bitcast %class.CAmbisonicSpeaker* %arrayidx1213 to i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)***
  %vtable1217 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)**, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*** %1615, align 8, !tbaa !68
  %vfn1218 = getelementptr inbounds i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vtable1217, i64 2
  %1616 = load i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)*, i1 (%class.CAmbisonicSpeaker*, i32, i1, i32)** %vfn1218, align 8
  %call1219 = tail call zeroext i1 %1616(%class.CAmbisonicSpeaker* %arrayidx1213, i32 %1613, i1 zeroext %tobool1216, i32 0)
  %1617 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1618 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1617, i64 %indvars.iv1740, i32 0
  %1619 = bitcast %class.CAmbisonicSource* %1618 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1224 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1619, align 8, !tbaa !68
  %vfn1225 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1224, i64 5
  %1620 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1225, align 8
  tail call void %1620(%class.CAmbisonicSource* %1618, <2 x float> %polPosition.sroa.0.0.vec.insert1563, float 1.000000e+00)
  %indvars.iv.next1741 = add nuw nsw i64 %indvars.iv1740, 1
  %1621 = load i32, i32* %m_nSpeakers1182, align 4, !tbaa !289
  %1622 = zext i32 %1621 to i64
  %cmp1207 = icmp ult i64 %indvars.iv.next1741, %1622
  br i1 %cmp1207, label %for.body1208, label %sw.epilog

sw.default:                                       ; preds = %if.end
  %m_nSpeakers1229 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  store i32 1, i32* %m_nSpeakers1229, align 4, !tbaa !289
  %call1232 = tail call i8* @_Znam(i64 96) #25
  %1623 = bitcast i8* %call1232 to i64*
  store i64 1, i64* %1623, align 16
  %1624 = getelementptr inbounds i8, i8* %call1232, i64 8
  %1625 = bitcast i8* %1624 to i32 (...)***
  %1626 = getelementptr inbounds i8, i8* %call1232, i64 16
  %1627 = bitcast i8* %1626 to i32*
  %1628 = getelementptr inbounds i8, i8* %call1232, i64 20
  %1629 = getelementptr inbounds i8, i8* %call1232, i64 24
  %1630 = bitcast i8* %1629 to i32*
  store i32 0, i32* %1630, align 8, !tbaa !101
  %1631 = getelementptr inbounds i8, i8* %call1232, i64 28
  store i8 0, i8* %1631, align 4, !tbaa !102
  %m_pfCoeff.i.i1619 = getelementptr inbounds i8, i8* %call1232, i64 32
  %fDistance.i.i1620 = getelementptr inbounds i8, i8* %call1232, i64 88
  %1632 = bitcast i8* %fDistance.i.i1620 to float*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_pfCoeff.i.i1619, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %1632, align 8, !tbaa !107
  %m_fGain.i.i1621 = getelementptr inbounds i8, i8* %call1232, i64 92
  %1633 = bitcast i8* %m_fGain.i.i1621 to float*
  store float 1.000000e+00, float* %1633, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicSpeaker, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1625, align 8, !tbaa !68
  %1634 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to i8**
  store i8* %1624, i8** %1634, align 8, !tbaa !284
  %1635 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 1
  %1636 = load i32, i32* %1635, align 8, !tbaa !97
  %1637 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 0, i32 2
  %1638 = load i8, i8* %1637, align 4, !tbaa !100, !range !104
  %tobool1254 = icmp ne i8 %1638, 0
  store i32 %1636, i32* %1627, align 8, !tbaa !97
  store i8 %1638, i8* %1628, align 4, !tbaa !100
  %call.i.i.i1756 = tail call i32 @_Z17OrderToComponentsjb(i32 %1636, i1 zeroext %tobool1254)
  store i32 %call.i.i.i1756, i32* %1630, align 8, !tbaa !101
  %conv.i.i1758 = zext i32 %call.i.i.i1756 to i64
  %1639 = bitcast float* %ref.tmp.i.i1753 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1639) #24
  store float 0.000000e+00, float* %ref.tmp.i.i1753, align 4, !tbaa !83
  %_M_finish.i.i.i.i1759 = getelementptr inbounds i8, i8* %call1232, i64 40
  %1640 = bitcast i8* %_M_finish.i.i.i.i1759 to float**
  %1641 = bitcast i8* %_M_finish.i.i.i.i1759 to i64*
  %1642 = load i64, i64* %1641, align 8, !tbaa !113
  %1643 = bitcast i8* %m_pfCoeff.i.i1619 to i64*
  %1644 = load i64, i64* %1643, align 8, !tbaa !116
  %sub.ptr.sub.i.i.i.i1760 = sub i64 %1642, %1644
  %sub.ptr.div.i.i.i.i1761 = ashr exact i64 %sub.ptr.sub.i.i.i.i1760, 2
  %cmp.i.i.i1762 = icmp ult i64 %sub.ptr.div.i.i.i.i1761, %conv.i.i1758
  %1645 = inttoptr i64 %1644 to float*
  br i1 %cmp.i.i.i1762, label %if.then.i.i.i1764, label %if.else.i.i.i1766, !prof !117

if.then.i.i.i1764:                                ; preds = %sw.default
  %1646 = bitcast i8* %m_pfCoeff.i.i1619 to %"class.std::vector.0"*
  %1647 = inttoptr i64 %1642 to float*
  %sub.i.i.i1763 = sub nsw i64 %conv.i.i1758, %sub.ptr.div.i.i.i.i1761
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %1646, float* %1647, i64 %sub.i.i.i1763, float* nonnull dereferenceable(4) %ref.tmp.i.i1753)
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

if.else.i.i.i1766:                                ; preds = %sw.default
  %cmp8.i.i.i1765 = icmp ugt i64 %sub.ptr.div.i.i.i.i1761, %conv.i.i1758
  br i1 %cmp8.i.i.i1765, label %if.then9.i.i.i1768, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

if.then9.i.i.i1768:                               ; preds = %if.else.i.i.i1766
  %add.ptr.i.i.i1767 = getelementptr inbounds float, float* %1645, i64 %conv.i.i1758
  store float* %add.ptr.i.i.i1767, float** %1640, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776:    ; preds = %if.then9.i.i.i1768, %if.else.i.i.i1766, %if.then.i.i.i1764
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1639) #24
  %m_pfOrderWeights.i.i1769 = getelementptr inbounds i8, i8* %call1232, i64 56
  %1648 = load i32, i32* %1627, align 8, !tbaa !97
  %add.i.i1770 = add i32 %1648, 1
  %conv4.i.i1771 = zext i32 %add.i.i1770 to i64
  %1649 = bitcast float* %ref.tmp5.i.i1754 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1649) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i1754, align 4, !tbaa !83
  %_M_finish.i.i6.i.i1772 = getelementptr inbounds i8, i8* %call1232, i64 64
  %1650 = bitcast i8* %_M_finish.i.i6.i.i1772 to float**
  %1651 = bitcast i8* %_M_finish.i.i6.i.i1772 to i64*
  %1652 = load i64, i64* %1651, align 8, !tbaa !113
  %1653 = bitcast i8* %m_pfOrderWeights.i.i1769 to i64*
  %1654 = load i64, i64* %1653, align 8, !tbaa !116
  %sub.ptr.sub.i.i7.i.i1773 = sub i64 %1652, %1654
  %sub.ptr.div.i.i8.i.i1774 = ashr exact i64 %sub.ptr.sub.i.i7.i.i1773, 2
  %cmp.i9.i.i1775 = icmp ult i64 %sub.ptr.div.i.i8.i.i1774, %conv4.i.i1771
  %1655 = inttoptr i64 %1654 to float*
  br i1 %cmp.i9.i.i1775, label %if.then.i11.i.i1778, label %if.else.i13.i.i1780, !prof !117

if.then.i11.i.i1778:                              ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
  %1656 = bitcast i8* %m_pfOrderWeights.i.i1769 to %"class.std::vector.0"*
  %1657 = inttoptr i64 %1652 to float*
  %sub.i10.i.i1777 = sub nsw i64 %conv4.i.i1771, %sub.ptr.div.i.i8.i.i1774
  call void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %1656, float* %1657, i64 %sub.i10.i.i1777, float* nonnull dereferenceable(4) %ref.tmp5.i.i1754)
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

if.else.i13.i.i1780:                              ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i1776
  %cmp8.i12.i.i1779 = icmp ugt i64 %sub.ptr.div.i.i8.i.i1774, %conv4.i.i1771
  br i1 %cmp8.i12.i.i1779, label %if.then9.i15.i.i1782, label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

if.then9.i15.i.i1782:                             ; preds = %if.else.i13.i.i1780
  %add.ptr.i14.i.i1781 = getelementptr inbounds float, float* %1655, i64 %conv4.i.i1771
  store float* %add.ptr.i14.i.i1781, float** %1650, align 8, !tbaa !113
  br label %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783

_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783:    ; preds = %if.then9.i15.i.i1782, %if.else.i13.i.i1780, %if.then.i11.i.i1778
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1649) #24
  %1658 = bitcast %class.CAmbisonicSpeaker** %m_pAmbSpeakers to %class.CAmbisonicSource**
  %1659 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %1658, align 8, !tbaa !284
  %1660 = bitcast %class.CAmbisonicSource* %1659 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable1261 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %1660, align 8, !tbaa !68
  %vfn1262 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable1261, i64 5
  %1661 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn1262, align 8
  tail call void %1661(%class.CAmbisonicSource* %1659, <2 x float> zeroinitializer, float 1.000000e+00)
  br label %sw.epilog

sw.epilog:                                        ; preds = %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit1783, %for.body1208, %sw.bb1181, %for.body1151, %for.end1143, %sw.bb751, %for.body721, %for.end713, %for.body631, %for.body579, %for.body527, %for.body475, %for.body423, %for.body374, %sw.bb252, %sw.bb170, %sw.bb103, %sw.bb52, %_ZN17CAmbisonicSpeaker9ConfigureEjbj.exit, %for.body.for.body_crit_edge, %for.body.lr.ph, %arrayctor.cont, %arrayctor.cont.thread
  %m_nSpeakers1263 = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %1662 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !289
  %conv1264 = uitofp i32 %1662 to float
  %call1265 = tail call float @sqrtf(float %conv1264) #24
  %div1266 = fdiv float 1.000000e+00, %call1265
  %1663 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !289
  %cmp12691667 = icmp eq i32 %1663, 0
  br i1 %cmp12691667, label %for.end1278, label %for.body1270, !prof !290

for.body1270:                                     ; preds = %for.body1270, %sw.epilog
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body1270 ], [ 0, %sw.epilog ]
  %1664 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %1665 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1664, i64 %indvars.iv, i32 0
  %1666 = bitcast %class.CAmbisonicSource* %1665 to void (%class.CAmbisonicSource*, float)***
  %vtable1274 = load void (%class.CAmbisonicSource*, float)**, void (%class.CAmbisonicSource*, float)*** %1666, align 8, !tbaa !68
  %vfn1275 = getelementptr inbounds void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vtable1274, i64 12
  %1667 = load void (%class.CAmbisonicSource*, float)*, void (%class.CAmbisonicSource*, float)** %vfn1275, align 8
  tail call void %1667(%class.CAmbisonicSource* %1665, float %div1266)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %1668 = load i32, i32* %m_nSpeakers1263, align 4, !tbaa !289
  %1669 = zext i32 %1668 to i64
  %cmp1269 = icmp ult i64 %indvars.iv.next, %1669
  br i1 %cmp1269, label %for.body1270, label %for.end1278, !prof !291

for.end1278:                                      ; preds = %for.body1270, %sw.epilog
  ret void
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder5ResetEv(%class.CAmbisonicDecoder* nocapture readonly %this) unnamed_addr #3 align 2 !prof !103 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %cmp5 = icmp eq i32 %0, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %2 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv, i32 0
  %3 = bitcast %class.CAmbisonicSource* %2 to void (%class.CAmbisonicSource*)***
  %vtable = load void (%class.CAmbisonicSource*)**, void (%class.CAmbisonicSource*)*** %3, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vtable, i64 3
  %4 = load void (%class.CAmbisonicSource*)*, void (%class.CAmbisonicSource*)** %vfn, align 8
  tail call void %4(%class.CAmbisonicSource* %2)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %6 = zext i32 %5 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder7RefreshEv(%class.CAmbisonicDecoder* nocapture readonly %this) unnamed_addr #3 align 2 !prof !292 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %cmp5 = icmp eq i32 %0, 0
  br i1 %cmp5, label %for.cond.cleanup, label %for.body.lr.ph, !prof !293

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv
  %2 = bitcast %class.CAmbisonicSpeaker* %arrayidx to void (%class.CAmbisonicSpeaker*)***
  %vtable = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %2, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable, i64 4
  %3 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSpeaker* %arrayidx)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %4 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %5 = zext i32 %4 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !prof !294
}

; Function Attrs: nounwind uwtable
define void @_ZN17CAmbisonicDecoder7ProcessEP8CBFormatjPPf(%class.CAmbisonicDecoder* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, i32 %nSamples, float** nocapture readonly %ppfDst) local_unnamed_addr #7 align 2 !prof !103 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %cmp8 = icmp eq i32 %0, 0
  br i1 %cmp8, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %arrayidx = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %1, i64 %indvars.iv
  %arrayidx3 = getelementptr inbounds float*, float** %ppfDst, i64 %indvars.iv
  %2 = load float*, float** %arrayidx3, align 8, !tbaa !76
  tail call void @_ZN17CAmbisonicSpeaker7ProcessEP8CBFormatjPf(%class.CAmbisonicSpeaker* %arrayidx, %class.CBFormat* %pBFSrc, i32 %nSamples, float* %2)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %3 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  %4 = zext i32 %3 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %4
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN17CAmbisonicDecoder15GetSpeakerSetUpEv(%class.CAmbisonicDecoder* nocapture readonly %this) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %m_nSpeakerSetUp = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 1
  %0 = load i32, i32* %m_nSpeakerSetUp, align 8, !tbaa !286
  ret i32 %0
}

; Function Attrs: norecurse nounwind readonly uwtable
define i32 @_ZN17CAmbisonicDecoder15GetSpeakerCountEv(%class.CAmbisonicDecoder* nocapture readonly %this) local_unnamed_addr #6 align 2 !prof !61 {
entry:
  %m_nSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 2
  %0 = load i32, i32* %m_nSpeakers, align 4, !tbaa !289
  ret i32 %0
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder11SetPositionEj10PolarPoint(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, <2 x float> %polPosition.coerce0, float %polPosition.coerce1) local_unnamed_addr #16 align 2 !prof !103 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %2, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %3 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, <2 x float> %polPosition.coerce0, float %polPosition.coerce1)
  ret void
}

; Function Attrs: uwtable
define { <2 x float>, float } @_ZN17CAmbisonicDecoder11GetPositionEj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker) local_unnamed_addr #3 align 2 !prof !70 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %2, align 8, !tbaa !68
  %vfn = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable, i64 6
  %3 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn, align 8
  %call = tail call { <2 x float>, float } %3(%class.CAmbisonicSource* %1)
  ret { <2 x float>, float } %call
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder14SetOrderWeightEjjf(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nOrder, float %fWeight) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %2, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 7
  %3 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, i32 %nOrder, float %fWeight)
  ret void
}

; Function Attrs: uwtable
define float @_ZN17CAmbisonicDecoder14GetOrderWeightEjj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nOrder) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %2, align 8, !tbaa !68
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 10
  %3 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = tail call float %3(%class.CAmbisonicSource* %1, i32 %nOrder)
  ret float %call
}

; Function Attrs: uwtable
define float @_ZN17CAmbisonicDecoder14GetCoefficientEjj(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nChannel) unnamed_addr #3 align 2 !prof !295 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to float (%class.CAmbisonicSource*, i32)***
  %vtable = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %2, align 8, !tbaa !68
  %vfn = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable, i64 11
  %3 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn, align 8
  %call = tail call float %3(%class.CAmbisonicSource* %1, i32 %nChannel)
  ret float %call
}

; Function Attrs: uwtable
define void @_ZN17CAmbisonicDecoder14SetCoefficientEjjf(%class.CAmbisonicDecoder* nocapture readonly %this, i32 %nSpeaker, i32 %nChannel, float %fCoeff) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %m_pAmbSpeakers = getelementptr inbounds %class.CAmbisonicDecoder, %class.CAmbisonicDecoder* %this, i64 0, i32 3
  %0 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers, align 8, !tbaa !284
  %idxprom = zext i32 %nSpeaker to i64
  %1 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %0, i64 %idxprom, i32 0
  %2 = bitcast %class.CAmbisonicSource* %1 to void (%class.CAmbisonicSource*, i32, float)***
  %vtable = load void (%class.CAmbisonicSource*, i32, float)**, void (%class.CAmbisonicSource*, i32, float)*** %2, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vtable, i64 9
  %3 = load void (%class.CAmbisonicSource*, i32, float)*, void (%class.CAmbisonicSource*, i32, float)** %vfn, align 8
  tail call void %3(%class.CAmbisonicSource* %1, i32 %nChannel, float %fCoeff)
  ret void
}

declare float @_Z16DegreesToRadiansf(float) local_unnamed_addr #0

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define void @_ZN16CAmbisonicZoomerC2Ev(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !175 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !100
  %3 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !101
  %4 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %5 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !97
  %7 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !100
  %8 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !101
  %9 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !68
  %m_nSpeakerSetUp.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 1
  %10 = bitcast i32* %m_nSpeakerSetUp.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nMisc) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !175 {
entry:
  %frombool.i = zext i1 %b3D to i8
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %0, align 8, !tbaa !97
  %1 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %1, align 4, !tbaa !100
  %call.i = tail call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %2, align 8, !tbaa !101
  %m_AmbDecoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1
  %3 = load i32, i32* %0, align 8, !tbaa !97
  %call4 = tail call zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* nonnull %m_AmbDecoderFront, i32 %3, i1 zeroext true, i32 0, i32 1)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 2
  %4 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !289
  %cmp5.i = icmp eq i32 %4, 0
  br i1 %cmp5.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, label %for.body.lr.ph.i, !prof !293

for.body.lr.ph.i:                                 ; preds = %entry
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %5 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !284
  %arrayidx.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %5, i64 %indvars.iv.i
  %6 = bitcast %class.CAmbisonicSpeaker* %arrayidx.i to void (%class.CAmbisonicSpeaker*)***
  %vtable.i = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %6, align 8, !tbaa !68
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable.i, i64 4
  %7 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn.i, align 8
  tail call void %7(%class.CAmbisonicSpeaker* %arrayidx.i)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %8 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !289
  %9 = zext i32 %8 to i64
  %cmp.i = icmp ult i64 %indvars.iv.next.i, %9
  br i1 %cmp.i, label %for.body.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, !prof !294

_ZN17CAmbisonicDecoder7RefreshEv.exit:            ; preds = %for.body.i, %entry
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  store float 0.000000e+00, float* %m_fZoomRed, align 4, !tbaa !296
  %m_AmbEncoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2
  %10 = load i32, i32* %2, align 8, !tbaa !101
  %conv = zext i32 %10 to i64
  %11 = shl nuw nsw i64 %conv, 2
  %call6 = tail call i8* @_Znam(i64 %11) #25
  %12 = ptrtoint i8* %call6 to i64
  %13 = bitcast %"class.std::unique_ptr.12"* %m_AmbEncoderFront to i64*
  %14 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %m_AmbEncoderFront, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8, !tbaa !76
  store i64 %12, i64* %13, align 8, !tbaa !76
  %cmp.i84 = icmp eq float* %15, null
  br i1 %cmp.i84, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i, !prof !287

_ZNKSt14default_deleteIA_fEclEPf.exit.i:          ; preds = %_ZN17CAmbisonicDecoder7RefreshEv.exit
  %16 = bitcast float* %15 to i8*
  tail call void @_ZdaPv(i8* %16) #26
  %.pre = load i32, i32* %2, align 8, !tbaa !101
  %.pre152 = zext i32 %.pre to i64
  %.pre153 = shl nuw nsw i64 %.pre152, 2
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i, %_ZN17CAmbisonicDecoder7RefreshEv.exit
  %.pre-phi = phi i64 [ %11, %_ZN17CAmbisonicDecoder7RefreshEv.exit ], [ %.pre153, %_ZNKSt14default_deleteIA_fEclEPf.exit.i ]
  %m_AmbEncoderFront_weighted = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3
  %call9 = tail call i8* @_Znam(i64 %.pre-phi) #25
  %17 = ptrtoint i8* %call9 to i64
  %18 = bitcast %"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted to i64*
  %19 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %m_AmbEncoderFront_weighted, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load float*, float** %19, align 8, !tbaa !76
  store i64 %17, i64* %18, align 8, !tbaa !76
  %cmp.i85 = icmp eq float* %20, null
  br i1 %cmp.i85, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit87, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i86, !prof !287

_ZNKSt14default_deleteIA_fEclEPf.exit.i86:        ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit
  %21 = bitcast float* %20 to i8*
  tail call void @_ZdaPv(i8* %21) #26
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit87

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit87: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i86, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit
  %a_m = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 4
  %22 = load i32, i32* %0, align 8, !tbaa !97
  %add = add i32 %22, 1
  %conv11 = zext i32 %add to i64
  %23 = shl nuw nsw i64 %conv11, 2
  %call12 = tail call i8* @_Znam(i64 %23) #25
  %24 = ptrtoint i8* %call12 to i64
  %25 = bitcast %"class.std::unique_ptr.12"* %a_m to i64*
  %26 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %a_m, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load float*, float** %26, align 8, !tbaa !76
  store i64 %24, i64* %25, align 8, !tbaa !76
  %cmp.i88 = icmp eq float* %27, null
  br i1 %cmp.i88, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit90, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i89, !prof !287

_ZNKSt14default_deleteIA_fEclEPf.exit.i89:        ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit87
  %28 = bitcast float* %27 to i8*
  tail call void @_ZdaPv(i8* %28) #26
  %.pre151 = load i32, i32* %0, align 8, !tbaa !97
  %.pre154 = add i32 %.pre151, 1
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit90

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit90: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i89, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit87
  %add14145.pre-phi = phi i32 [ %add, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit87 ], [ %.pre154, %_ZNKSt14default_deleteIA_fEclEPf.exit.i89 ]
  %29 = phi i32 [ %22, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit87 ], [ %.pre151, %_ZNKSt14default_deleteIA_fEclEPf.exit.i89 ]
  %cmp146 = icmp eq i32 %add14145.pre-phi, 0
  br i1 %cmp146, label %for.cond34.preheader, label %for.body.lr.ph, !prof !204

for.body.lr.ph:                                   ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit90
  %30 = load float*, float** %26, align 8, !tbaa !76
  %31 = zext i32 %add14145.pre-phi to i64
  %cmp7.i = icmp eq i32 %29, 0
  %cmp.i91.peel = icmp ult i32 %29, 2
  %cmp.i91.peel159 = icmp ult i32 %29, 3
  %cmp.i116.peel = icmp ult i32 %add14145.pre-phi, 2
  %cmp.i116.peel170 = icmp ult i32 %add14145.pre-phi, 3
  br label %for.body

for.cond34.preheader:                             ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit131, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EE5resetEPf.exit90
  %32 = load i32, i32* %2, align 8, !tbaa !101
  %cmp36143 = icmp eq i32 %32, 0
  br i1 %cmp36143, label %cleanup, label %for.body38.lr.ph, !prof !203

for.body38.lr.ph:                                 ; preds = %for.cond34.preheader
  %m_pAmbSpeakers.i104 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1, i32 3
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 7
  br label %for.body38

for.body:                                         ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit131, %for.body.lr.ph
  %indvars.iv149 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next150, %_ZN16CAmbisonicZoomer9factorialEj.exit131 ]
  %33 = trunc i64 %indvars.iv149 to i32
  %mul = shl i32 %33, 1
  %add15 = or i32 %mul, 1
  %conv16 = uitofp i32 %add15 to float
  br i1 %cmp7.i, label %for.body.i117.preheader, label %for.body.i92.peel, !prof !300

for.body.i92.peel:                                ; preds = %for.body
  %brmerge = or i1 %cmp.i91.peel, %cmp.i91.peel159
  %.mux = select i1 %cmp.i91.peel, i32 1, i32 2, !prof !301
  %.mux.mux = select i1 %brmerge, i32 %.mux, i32 6, !prof !302
  %.off = add i32 %29, -1
  %switch = icmp ult i32 %.off, 3
  br i1 %switch, label %for.cond.cleanup.loopexit.i, label %for.body.i92

for.cond.cleanup.loopexit.i:                      ; preds = %for.body.i92, %for.body.i92.peel
  %mul.i.lcssa = phi i32 [ %mul.i, %for.body.i92 ], [ %.mux.mux, %for.body.i92.peel ]
  %phitmp.i = uitofp i32 %mul.i.lcssa to float
  br label %for.body.i117.preheader

for.body.i92:                                     ; preds = %for.body.i92, %for.body.i92.peel
  %i.09.i = phi i32 [ %inc.i, %for.body.i92 ], [ 4, %for.body.i92.peel ]
  %ret.08.i = phi i32 [ %mul.i, %for.body.i92 ], [ 6, %for.body.i92.peel ]
  %mul.i = mul i32 %ret.08.i, %i.09.i
  %inc.i = add i32 %i.09.i, 1
  %cmp.i91 = icmp ugt i32 %inc.i, %29
  br i1 %cmp.i91, label %for.cond.cleanup.loopexit.i, label %for.body.i92, !prof !303, !llvm.loop !304

for.body.i117.preheader:                          ; preds = %for.cond.cleanup.loopexit.i, %for.body
  %ret.0.lcssa.i = phi float [ 1.000000e+00, %for.body ], [ %phitmp.i, %for.cond.cleanup.loopexit.i ]
  %mul19 = fmul float %ret.0.lcssa.i, %conv16
  %brmerge204 = or i1 %cmp.i116.peel, %cmp.i116.peel170
  %.mux205 = select i1 %cmp.i116.peel, i32 1, i32 2, !prof !301
  %.mux205.mux = select i1 %brmerge204, i32 %.mux205, i32 6, !prof !302
  %switch207 = icmp ult i32 %add14145.pre-phi, 4
  br i1 %switch207, label %_ZN16CAmbisonicZoomer9factorialEj.exit118, label %for.body.i117

for.body.i117:                                    ; preds = %for.body.i117, %for.body.i117.preheader
  %i.09.i112 = phi i32 [ %inc.i115, %for.body.i117 ], [ 4, %for.body.i117.preheader ]
  %ret.08.i113 = phi i32 [ %mul.i114, %for.body.i117 ], [ 6, %for.body.i117.preheader ]
  %mul.i114 = mul i32 %ret.08.i113, %i.09.i112
  %inc.i115 = add i32 %i.09.i112, 1
  %cmp.i116 = icmp ugt i32 %inc.i115, %add14145.pre-phi
  br i1 %cmp.i116, label %_ZN16CAmbisonicZoomer9factorialEj.exit118, label %for.body.i117, !prof !303, !llvm.loop !305

_ZN16CAmbisonicZoomer9factorialEj.exit118:        ; preds = %for.body.i117, %for.body.i117.preheader
  %mul.i114.lcssa = phi i32 [ %mul.i114, %for.body.i117 ], [ %.mux205.mux, %for.body.i117.preheader ]
  %phitmp.i109 = uitofp i32 %mul.i114.lcssa to float
  %mul23 = fmul float %mul19, %phitmp.i109
  %indvars.iv.next150 = add nuw nsw i64 %indvars.iv149, 1
  %34 = trunc i64 %indvars.iv.next150 to i32
  %add26 = add i32 %29, %34
  %cmp7.i132 = icmp eq i32 %add26, 0
  br i1 %cmp7.i132, label %_ZN16CAmbisonicZoomer9factorialEj.exit142, label %for.body.i141.peel, !prof !300

for.body.i141.peel:                               ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit118
  %cmp.i140.peel = icmp ult i32 %add26, 2
  br i1 %cmp.i140.peel, label %for.cond.cleanup.loopexit.i134, label %for.body.i141.peel178, !prof !306

for.body.i141.peel178:                            ; preds = %for.body.i141.peel
  %cmp.i140.peel181 = icmp ult i32 %add26, 3
  br i1 %cmp.i140.peel181, label %for.cond.cleanup.loopexit.i134, label %for.body.i141.peel183, !prof !307

for.body.i141.peel183:                            ; preds = %for.body.i141.peel178
  %cmp.i140.peel186 = icmp ult i32 %add26, 4
  br i1 %cmp.i140.peel186, label %for.cond.cleanup.loopexit.i134, label %for.body.i141, !prof !308

for.cond.cleanup.loopexit.i134:                   ; preds = %for.body.i141, %for.body.i141.peel183, %for.body.i141.peel178, %for.body.i141.peel
  %mul.i138.lcssa = phi i32 [ 1, %for.body.i141.peel ], [ 2, %for.body.i141.peel178 ], [ 6, %for.body.i141.peel183 ], [ %mul.i138, %for.body.i141 ]
  %phitmp.i133 = uitofp i32 %mul.i138.lcssa to float
  br label %_ZN16CAmbisonicZoomer9factorialEj.exit142

for.body.i141:                                    ; preds = %for.body.i141, %for.body.i141.peel183
  %i.09.i136 = phi i32 [ %inc.i139, %for.body.i141 ], [ 4, %for.body.i141.peel183 ]
  %ret.08.i137 = phi i32 [ %mul.i138, %for.body.i141 ], [ 6, %for.body.i141.peel183 ]
  %mul.i138 = mul i32 %ret.08.i137, %i.09.i136
  %inc.i139 = add i32 %i.09.i136, 1
  %cmp.i140 = icmp ugt i32 %inc.i139, %add26
  br i1 %cmp.i140, label %for.cond.cleanup.loopexit.i134, label %for.body.i141, !prof !303, !llvm.loop !309

_ZN16CAmbisonicZoomer9factorialEj.exit142:        ; preds = %for.cond.cleanup.loopexit.i134, %_ZN16CAmbisonicZoomer9factorialEj.exit118
  %ret.0.lcssa.i135 = phi float [ 1.000000e+00, %_ZN16CAmbisonicZoomer9factorialEj.exit118 ], [ %phitmp.i133, %for.cond.cleanup.loopexit.i134 ]
  %sub = sub i32 %29, %33
  %cmp7.i121 = icmp eq i32 %sub, 0
  br i1 %cmp7.i121, label %_ZN16CAmbisonicZoomer9factorialEj.exit131, label %for.body.i130.peel, !prof !300

for.body.i130.peel:                               ; preds = %_ZN16CAmbisonicZoomer9factorialEj.exit142
  %cmp.i129.peel = icmp ult i32 %sub, 2
  br i1 %cmp.i129.peel, label %for.cond.cleanup.loopexit.i123, label %for.body.i130.peel189, !prof !306

for.body.i130.peel189:                            ; preds = %for.body.i130.peel
  %cmp.i129.peel192 = icmp ult i32 %sub, 3
  br i1 %cmp.i129.peel192, label %for.cond.cleanup.loopexit.i123, label %for.body.i130.peel194, !prof !307

for.body.i130.peel194:                            ; preds = %for.body.i130.peel189
  %cmp.i129.peel197 = icmp ult i32 %sub, 4
  br i1 %cmp.i129.peel197, label %for.cond.cleanup.loopexit.i123, label %for.body.i130, !prof !308

for.cond.cleanup.loopexit.i123:                   ; preds = %for.body.i130, %for.body.i130.peel194, %for.body.i130.peel189, %for.body.i130.peel
  %mul.i127.lcssa = phi i32 [ 1, %for.body.i130.peel ], [ 2, %for.body.i130.peel189 ], [ 6, %for.body.i130.peel194 ], [ %mul.i127, %for.body.i130 ]
  %phitmp.i122 = uitofp i32 %mul.i127.lcssa to float
  br label %_ZN16CAmbisonicZoomer9factorialEj.exit131

for.body.i130:                                    ; preds = %for.body.i130, %for.body.i130.peel194
  %i.09.i125 = phi i32 [ %inc.i128, %for.body.i130 ], [ 4, %for.body.i130.peel194 ]
  %ret.08.i126 = phi i32 [ %mul.i127, %for.body.i130 ], [ 6, %for.body.i130.peel194 ]
  %mul.i127 = mul i32 %ret.08.i126, %i.09.i125
  %inc.i128 = add i32 %i.09.i125, 1
  %cmp.i129 = icmp ugt i32 %inc.i128, %sub
  br i1 %cmp.i129, label %for.cond.cleanup.loopexit.i123, label %for.body.i130, !prof !303, !llvm.loop !310

_ZN16CAmbisonicZoomer9factorialEj.exit131:        ; preds = %for.cond.cleanup.loopexit.i123, %_ZN16CAmbisonicZoomer9factorialEj.exit142
  %ret.0.lcssa.i124 = phi float [ 1.000000e+00, %_ZN16CAmbisonicZoomer9factorialEj.exit142 ], [ %phitmp.i122, %for.cond.cleanup.loopexit.i123 ]
  %mul30 = fmul float %ret.0.lcssa.i135, %ret.0.lcssa.i124
  %div = fdiv float %mul23, %mul30
  %arrayidx.i120 = getelementptr inbounds float, float* %30, i64 %indvars.iv149
  store float %div, float* %arrayidx.i120, align 4, !tbaa !83
  %cmp = icmp ult i64 %indvars.iv.next150, %31
  br i1 %cmp, label %for.body, label %for.cond34.preheader, !prof !311

for.body38:                                       ; preds = %for.body38, %for.body38.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body38.lr.ph ], [ %indvars.iv.next, %for.body38 ]
  %35 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i104, align 8, !tbaa !284
  %36 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %35, i64 0, i32 0
  %37 = bitcast %class.CAmbisonicSpeaker* %35 to float (%class.CAmbisonicSource*, i32)***
  %vtable.i105 = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %37, align 8, !tbaa !68
  %vfn.i106 = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable.i105, i64 11
  %38 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn.i106, align 8
  %39 = trunc i64 %indvars.iv to i32
  %call.i107 = tail call float %38(%class.CAmbisonicSource* %36, i32 %39)
  %40 = load float*, float** %14, align 8, !tbaa !76
  %arrayidx.i103 = getelementptr inbounds float, float* %40, i64 %indvars.iv
  store float %call.i107, float* %arrayidx.i103, align 4, !tbaa !83
  %conv44 = uitofp i32 %39 to double
  %call45 = tail call double @sqrt(double %conv44) #24
  %41 = tail call double @llvm.floor.f64(double %call45)
  %conv46 = fptosi double %41 to i32
  %42 = load float*, float** %14, align 8, !tbaa !76
  %arrayidx.i101 = getelementptr inbounds float, float* %42, i64 %indvars.iv
  %43 = load float, float* %arrayidx.i101, align 4, !tbaa !83
  %conv51 = zext i32 %conv46 to i64
  %44 = load float*, float** %26, align 8, !tbaa !76
  %arrayidx.i99 = getelementptr inbounds float, float* %44, i64 %conv51
  %45 = load float, float* %arrayidx.i99, align 4, !tbaa !83
  %mul53 = fmul float %43, %45
  %46 = load float*, float** %19, align 8, !tbaa !76
  %arrayidx.i97 = getelementptr inbounds float, float* %46, i64 %indvars.iv
  store float %mul53, float* %arrayidx.i97, align 4, !tbaa !83
  %47 = load float, float* %arrayidx.i101, align 4, !tbaa !83
  %mul63 = fmul float %mul53, %47
  %48 = load float, float* %m_AmbFrontMic, align 8, !tbaa !312
  %add64 = fadd float %48, %mul63
  store float %add64, float* %m_AmbFrontMic, align 8, !tbaa !312
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %49 = load i32, i32* %2, align 8, !tbaa !101
  %50 = zext i32 %49 to i64
  %cmp36 = icmp ult i64 %indvars.iv.next, %50
  br i1 %cmp36, label %for.body38, label %cleanup, !prof !229

cleanup:                                          ; preds = %for.body38, %for.cond34.preheader
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone uwtable
define float @_ZN16CAmbisonicZoomer9factorialEj(%class.CAmbisonicZoomer* nocapture readnone %this, i32 %M) local_unnamed_addr #8 align 2 !prof !146 {
entry:
  %switch = icmp ult i32 %M, 2
  br i1 %switch, label %for.cond.cleanup, label %for.body.peel11

for.body.peel11:                                  ; preds = %entry
  %cmp.peel14 = icmp ult i32 %M, 3
  br i1 %cmp.peel14, label %for.cond.cleanup, label %for.body.peel16, !prof !307

for.body.peel16:                                  ; preds = %for.body.peel11
  %cmp.peel19 = icmp ult i32 %M, 4
  br i1 %cmp.peel19, label %for.cond.cleanup, label %for.body, !prof !308

for.cond.cleanup.loopexit.loopexit:               ; preds = %for.body
  %phitmp21 = uitofp i32 %mul to float
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.loopexit, %for.body.peel16, %for.body.peel11, %entry
  %ret.0.lcssa = phi float [ 2.000000e+00, %for.body.peel11 ], [ 6.000000e+00, %for.body.peel16 ], [ %phitmp21, %for.cond.cleanup.loopexit.loopexit ], [ 1.000000e+00, %entry ]
  ret float %ret.0.lcssa

for.body:                                         ; preds = %for.body, %for.body.peel16
  %i.09 = phi i32 [ %inc, %for.body ], [ 4, %for.body.peel16 ]
  %ret.08 = phi i32 [ %mul, %for.body ], [ 6, %for.body.peel16 ]
  %mul = mul i32 %i.09, %ret.08
  %inc = add i32 %i.09, 1
  %cmp = icmp ugt i32 %inc, %M
  br i1 %cmp, label %for.cond.cleanup.loopexit.loopexit, label %for.body, !prof !303, !llvm.loop !313
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN16CAmbisonicZoomer5ResetEv(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #8 align 2 !prof !103 {
entry:
  ret void
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicZoomer7RefreshEv(%class.CAmbisonicZoomer* nocapture %this) unnamed_addr #9 align 2 !prof !230 {
entry:
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %0 = load float, float* %m_fZoom, align 8, !tbaa !314
  %mul = fmul float %0, %0
  %sub = fsub float 1.000000e+00, %mul
  %call = tail call float @sqrtf(float %sub) #24
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  store float %call, float* %m_fZoomRed, align 4, !tbaa !296
  %1 = load float, float* %m_fZoom, align 8, !tbaa !314
  %sub4 = fsub float 1.000000e+00, %1
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 8
  store float %sub4, float* %m_fZoomBlend, align 4, !tbaa !315
  ret void
}

; Function Attrs: nounwind uwtable writeonly
define void @_ZN16CAmbisonicZoomer7SetZoomEf(%class.CAmbisonicZoomer* nocapture %this, float %fZoom) local_unnamed_addr #17 align 2 !prof !230 {
entry:
  %fZoom.addr = alloca float, align 4
  %ref.tmp = alloca float, align 4
  store float %fZoom, float* %fZoom.addr, align 4, !tbaa !83
  %ref.tmp.0..sroa_cast = bitcast float* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp, align 4, !tbaa !83
  %cmp.i = fcmp ogt float %fZoom, 0x3FEFAE1480000000
  %__b.__a.i = select i1 %cmp.i, float* %ref.tmp, float* %fZoom.addr, !prof !185
  %0 = bitcast float* %__b.__a.i to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !83
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %2 = bitcast float* %m_fZoom to i32*
  store i32 %1, i32* %2, align 8, !tbaa !314
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable
define float @_ZN16CAmbisonicZoomer7GetZoomEv(%class.CAmbisonicZoomer* nocapture readonly %this) local_unnamed_addr #6 align 2 !prof !103 {
entry:
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %0 = load float, float* %m_fZoom, align 8, !tbaa !314
  ret float %0
}

; Function Attrs: nofree nounwind uwtable
define void @_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj(%class.CAmbisonicZoomer* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrcDst, i32 %nSamples) local_unnamed_addr #9 align 2 !prof !230 {
entry:
  %cmp103 = icmp eq i32 %nSamples, 0
  br i1 %cmp103, label %for.cond.cleanup, label %for.cond2.preheader.lr.ph, !prof !316

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp397 = icmp eq i32 %1, 0
  %m_fZoomRed = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 6
  %m_fZoomBlend = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 8
  %m_fZoom = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 5
  %m_AmbFrontMic = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 7
  br i1 %cmp397, label %for.cond2.preheader.preheader, label %for.cond2.preheader.us.preheader, !prof !317

for.cond2.preheader.preheader:                    ; preds = %for.cond2.preheader.lr.ph
  %wide.trip.count120 = zext i32 %nSamples to i64
  %2 = add nsw i64 %wide.trip.count120, -1
  %xtraiter = and i64 %wide.trip.count120, 7
  %3 = icmp ult i64 %2, 7
  br i1 %3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond2.preheader.preheader.new

for.cond2.preheader.preheader.new:                ; preds = %for.cond2.preheader.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count120, %xtraiter
  br label %for.cond.cleanup12

for.cond2.preheader.us.preheader:                 ; preds = %for.cond2.preheader.lr.ph
  %_M_head_impl.i.i.i.i.i.i93 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrcDst, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112 = zext i32 %nSamples to i64
  %.pre = load float*, float** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %.pre122 = load float**, float*** %_M_head_impl.i.i.i.i.i.i95, align 8, !tbaa !76
  %4 = zext i32 %1 to i64
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i93, align 8, !tbaa !76
  %6 = add nsw i64 %4, -1
  %xtraiter126 = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter130 = sub nsw i64 %4, %xtraiter126
  %lcmp.mod128 = icmp eq i64 %xtraiter126, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond.cleanup12.us, %for.cond2.preheader.us.preheader
  %indvars.iv110 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next111, %for.cond.cleanup12.us ]
  br i1 %7, label %for.body13.us.preheader.unr-lcssa, label %for.body5.us

for.cond.cleanup12.us:                            ; preds = %for.inc52.us
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond113 = icmp eq i64 %indvars.iv.next111, %wide.trip.count112
  br i1 %exitcond113, label %for.cond.cleanup, label %for.cond2.preheader.us, !prof !316

for.body13.us:                                    ; preds = %for.body13.us.preheader, %for.inc52.us
  %indvars.iv108 = phi i64 [ %indvars.iv.next109, %for.inc52.us ], [ 0, %for.body13.us.preheader ]
  %arrayidx.i94.us = getelementptr inbounds float, float* %5, i64 %indvars.iv108
  %8 = load float, float* %arrayidx.i94.us, align 4, !tbaa !83
  %9 = tail call float @llvm.fabs.f32(float %8) #24
  %conv17.us = fpext float %9 to double
  %cmp18.us = fcmp ogt double %conv17.us, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us, label %if.then.us, label %if.else.us, !prof !318

if.else.us:                                       ; preds = %for.body13.us
  %arrayidx.i86.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv108
  %10 = load float*, float** %arrayidx.i86.us, align 8, !tbaa !76
  %arrayidx45.us = getelementptr inbounds float, float* %10, i64 %indvars.iv110
  %11 = load float, float* %arrayidx45.us, align 4, !tbaa !83
  %12 = load float, float* %m_fZoomRed, align 4, !tbaa !296
  %mul46.us = fmul float %11, %12
  store float %mul46.us, float* %arrayidx45.us, align 4, !tbaa !83
  br label %for.inc52.us

if.then.us:                                       ; preds = %for.body13.us
  %13 = load float, float* %m_fZoomBlend, align 4, !tbaa !315
  %arrayidx.i92.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv108
  %14 = load float*, float** %arrayidx.i92.us, align 8, !tbaa !76
  %arrayidx23.us = getelementptr inbounds float, float* %14, i64 %indvars.iv110
  %15 = load float, float* %arrayidx23.us, align 4, !tbaa !83
  %mul24.us = fmul float %13, %15
  %16 = load float, float* %m_fZoom, align 8, !tbaa !314
  %mul28.us = fmul float %8, %16
  %mul29.us = fmul float %add.us.lcssa, %mul28.us
  %add30.us = fadd float %mul24.us, %mul29.us
  %17 = tail call float @llvm.fabs.f32(float %16) #24
  %18 = load float, float* %m_AmbFrontMic, align 8, !tbaa !312
  %mul34.us = fmul float %17, %18
  %add35.us = fadd float %13, %mul34.us
  %div.us = fdiv float %add30.us, %add35.us
  store float %div.us, float* %arrayidx23.us, align 4, !tbaa !83
  br label %for.inc52.us

for.inc52.us:                                     ; preds = %if.then.us, %if.else.us
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1
  %exitcond = icmp eq i64 %indvars.iv.next109, %4
  br i1 %exitcond, label %for.cond.cleanup12.us, label %for.body13.us, !prof !317

for.body5.us:                                     ; preds = %for.body5.us, %for.cond2.preheader.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body5.us ], [ 0, %for.cond2.preheader.us ]
  %fMic.098.us = phi float [ %add.us.3, %for.body5.us ], [ 0.000000e+00, %for.cond2.preheader.us ]
  %niter131 = phi i64 [ %niter131.nsub.3, %for.body5.us ], [ %unroll_iter130, %for.cond2.preheader.us ]
  %arrayidx.i.us = getelementptr inbounds float, float* %.pre, i64 %indvars.iv
  %19 = load float, float* %arrayidx.i.us, align 4, !tbaa !83
  %arrayidx.i96.us = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv
  %20 = load float*, float** %arrayidx.i96.us, align 8, !tbaa !76
  %arrayidx.us = getelementptr inbounds float, float* %20, i64 %indvars.iv110
  %21 = load float, float* %arrayidx.us, align 4, !tbaa !83
  %mul.us = fmul float %19, %21
  %add.us = fadd float %fMic.098.us, %mul.us
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.i.us.1 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next
  %22 = load float, float* %arrayidx.i.us.1, align 4, !tbaa !83
  %arrayidx.i96.us.1 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next
  %23 = load float*, float** %arrayidx.i96.us.1, align 8, !tbaa !76
  %arrayidx.us.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv110
  %24 = load float, float* %arrayidx.us.1, align 4, !tbaa !83
  %mul.us.1 = fmul float %22, %24
  %add.us.1 = fadd float %add.us, %mul.us.1
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.i.us.2 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next.1
  %25 = load float, float* %arrayidx.i.us.2, align 4, !tbaa !83
  %arrayidx.i96.us.2 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next.1
  %26 = load float*, float** %arrayidx.i96.us.2, align 8, !tbaa !76
  %arrayidx.us.2 = getelementptr inbounds float, float* %26, i64 %indvars.iv110
  %27 = load float, float* %arrayidx.us.2, align 4, !tbaa !83
  %mul.us.2 = fmul float %25, %27
  %add.us.2 = fadd float %add.us.1, %mul.us.2
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.i.us.3 = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.next.2
  %28 = load float, float* %arrayidx.i.us.3, align 4, !tbaa !83
  %arrayidx.i96.us.3 = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.next.2
  %29 = load float*, float** %arrayidx.i96.us.3, align 8, !tbaa !76
  %arrayidx.us.3 = getelementptr inbounds float, float* %29, i64 %indvars.iv110
  %30 = load float, float* %arrayidx.us.3, align 4, !tbaa !83
  %mul.us.3 = fmul float %28, %30
  %add.us.3 = fadd float %add.us.2, %mul.us.3
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter131.nsub.3 = add i64 %niter131, -4
  %niter131.ncmp.3 = icmp eq i64 %niter131.nsub.3, 0
  br i1 %niter131.ncmp.3, label %for.body13.us.preheader.unr-lcssa, label %for.body5.us, !prof !317

for.body13.us.preheader.unr-lcssa:                ; preds = %for.body5.us, %for.cond2.preheader.us
  %add.us.lcssa.ph = phi float [ undef, %for.cond2.preheader.us ], [ %add.us.3, %for.body5.us ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us ], [ %indvars.iv.next.3, %for.body5.us ]
  %fMic.098.us.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us ], [ %add.us.3, %for.body5.us ]
  br i1 %lcmp.mod128, label %for.body13.us.preheader, label %for.body5.us.epil

for.body5.us.epil:                                ; preds = %for.body5.us.epil, %for.body13.us.preheader.unr-lcssa
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body5.us.epil ], [ %indvars.iv.unr, %for.body13.us.preheader.unr-lcssa ]
  %fMic.098.us.epil = phi float [ %add.us.epil, %for.body5.us.epil ], [ %fMic.098.us.unr, %for.body13.us.preheader.unr-lcssa ]
  %epil.iter127 = phi i64 [ %epil.iter127.sub, %for.body5.us.epil ], [ %xtraiter126, %for.body13.us.preheader.unr-lcssa ]
  %arrayidx.i.us.epil = getelementptr inbounds float, float* %.pre, i64 %indvars.iv.epil
  %31 = load float, float* %arrayidx.i.us.epil, align 4, !tbaa !83
  %arrayidx.i96.us.epil = getelementptr inbounds float*, float** %.pre122, i64 %indvars.iv.epil
  %32 = load float*, float** %arrayidx.i96.us.epil, align 8, !tbaa !76
  %arrayidx.us.epil = getelementptr inbounds float, float* %32, i64 %indvars.iv110
  %33 = load float, float* %arrayidx.us.epil, align 4, !tbaa !83
  %mul.us.epil = fmul float %31, %33
  %add.us.epil = fadd float %fMic.098.us.epil, %mul.us.epil
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter127.sub = add i64 %epil.iter127, -1
  %epil.iter127.cmp = icmp eq i64 %epil.iter127.sub, 0
  br i1 %epil.iter127.cmp, label %for.body13.us.preheader, label %for.body5.us.epil, !llvm.loop !319

for.body13.us.preheader:                          ; preds = %for.body5.us.epil, %for.body13.us.preheader.unr-lcssa
  %add.us.lcssa = phi float [ %add.us.lcssa.ph, %for.body13.us.preheader.unr-lcssa ], [ %add.us.epil, %for.body5.us.epil ]
  br label %for.body13.us

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.cond.cleanup12, %for.cond2.preheader.preheader
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.cond.cleanup, label %for.cond.cleanup12.epil

for.cond.cleanup12.epil:                          ; preds = %for.cond.cleanup12.epil, %for.cond.cleanup.loopexit.unr-lcssa
  %epil.iter = phi i64 [ %epil.iter.sub, %for.cond.cleanup12.epil ], [ %xtraiter, %for.cond.cleanup.loopexit.unr-lcssa ]
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.cond.cleanup, label %for.cond.cleanup12.epil, !llvm.loop !320

for.cond.cleanup:                                 ; preds = %for.cond.cleanup12.epil, %for.cond.cleanup.loopexit.unr-lcssa, %for.cond.cleanup12.us, %entry
  ret void

for.cond.cleanup12:                               ; preds = %for.cond.cleanup12, %for.cond2.preheader.preheader.new
  %niter = phi i64 [ %unroll_iter, %for.cond2.preheader.preheader.new ], [ %niter.nsub.7, %for.cond.cleanup12 ]
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.cond.cleanup12, !prof !316
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizerC2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !61 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 0
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  store i32 0, i32* %1, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  store i8 0, i8* %2, align 4, !tbaa !100
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  store i32 0, i32* %3, align 8, !tbaa !101
  %4 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 5
  store i8 0, i8* %4, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %5 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !97
  %7 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !100
  %8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !101
  %9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !68
  %m_nSpeakerSetUp.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 1
  %10 = bitcast i32* %m_nSpeakerSetUp.i to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #24
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8
  %11 = bitcast %"class.std::unique_ptr.20"* %m_pFFT_cfg to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (i8*)* @free to i64), i64 0>, <2 x i64>* %11, align 8, !tbaa !76
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9
  %12 = bitcast %"class.std::unique_ptr.20"* %m_pIFFT_cfg to i64*
  store i64 ptrtoint (void (i8*)* @free to i64), i64* %12, align 8, !tbaa !321
  %13 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 1
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  %14 = bitcast i32* %m_nBlockSize to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false)
  %15 = bitcast %"struct.std::_Head_base.25"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 184, i1 false)
  ret void
}

; Function Attrs: uwtable
define zeroext i1 @_ZN22CAmbisonicBinauralizer9ConfigureEjbjjRjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* %this, i32 %nOrder, i1 zeroext %b3D, i32 %nSampleRate, i32 %nBlockSize, i32* nocapture dereferenceable(4) %tailLength, %"class.std::__cxx11::basic_string"* nocapture readonly %HRTFPath) unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !61 {
entry:
  %ref.tmp.i.i = alloca float, align 4
  %ref.tmp5.i.i = alloca float, align 4
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %pfHRTF = alloca [2 x float*], align 16
  %myEncoder = alloca %class.CAmbisonicEncoder, align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !323
  %_M_p.i12.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %HRTFPath, i64 0, i32 0, i32 0
  %2 = load i8*, i8** %_M_p.i12.i, align 8, !tbaa !325
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %HRTFPath, i64 0, i32 1
  %3 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !328
  %add.ptr.i = getelementptr inbounds i8, i8* %2, i64 %3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i8* %2, i8* %add.ptr.i)
  %call = invoke %class.HRTF* @_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* undef, i32 %nSampleRate, %"class.std::__cxx11::basic_string"* undef)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !325
  %arraydecay.i.i.i.i = bitcast %union.anon* %0 to i8*
  %cmp.i.i.i = icmp eq i8* %4, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i, !prof !329

if.then.i.i:                                      ; preds = %invoke.cont
  call void @_ZdlPv(i8* %4) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont
  %cmp = icmp eq %class.HRTF* %call, null
  br i1 %cmp, label %cleanup307, label %if.end, !prof !330

lpad:                                             ; preds = %entry
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  %7 = extractvalue { i8*, i32 } %5, 1
  %_M_p.i.i.i.i428 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %8 = load i8*, i8** %_M_p.i.i.i.i428, align 8, !tbaa !325
  %arraydecay.i.i.i.i429 = bitcast %union.anon* %0 to i8*
  %cmp.i.i.i430 = icmp eq i8* %8, %arraydecay.i.i.i.i429
  br i1 %cmp.i.i.i430, label %ehcleanup308, label %if.then.i.i431, !prof !329

if.then.i.i431:                                   ; preds = %lpad
  call void @_ZdlPv(i8* %8) #24
  br label %ehcleanup308

if.end:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %i_len.i = getelementptr inbounds %class.HRTF, %class.HRTF* %call, i64 0, i32 2
  %9 = load i32, i32* %i_len.i, align 4, !tbaa !67
  %m_nTaps = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 3
  store i32 %9, i32* %m_nTaps, align 4, !tbaa !331
  store i32 %9, i32* %tailLength, align 4, !tbaa !72
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  store i32 %nBlockSize, i32* %m_nBlockSize, align 8, !tbaa !337
  %10 = load i32, i32* %m_nTaps, align 4, !tbaa !331
  %cmp5 = icmp ugt i32 %10, %nBlockSize
  %nBlockSize. = select i1 %cmp5, i32 %nBlockSize, i32 %10, !prof !330
  %cond = add i32 %nBlockSize., -1
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  store i32 %cond, i32* %m_nOverlapLength, align 4, !tbaa !338
  %add = add i32 %10, %nBlockSize
  %add13 = add i32 %add, %cond
  br label %while.cond

while.cond:                                       ; preds = %while.cond, %if.end
  %storemerge = phi i32 [ 1, %if.end ], [ %shl, %while.cond ]
  %cmp14 = icmp ult i32 %storemerge, %add13
  %shl = shl i32 %storemerge, 1
  br i1 %cmp14, label %while.cond, label %while.end, !prof !339

while.end:                                        ; preds = %while.cond
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  store i32 %storemerge, i32* %m_nFFTSize, align 8, !tbaa !340
  %div = lshr i32 %storemerge, 1
  %add17 = add nuw i32 %div, 1
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  store i32 %add17, i32* %m_nFFTBins, align 4, !tbaa !341
  %conv = uitofp i32 %storemerge to float
  %div19 = fdiv float 1.000000e+00, %conv
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  store float %div19, float* %m_fFFTScaler, align 8, !tbaa !342
  %frombool.i = zext i1 %b3D to i8
  %11 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  store i32 %nOrder, i32* %11, align 8, !tbaa !97
  %12 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  store i8 %frombool.i, i8* %12, align 4, !tbaa !100
  %call.i = call i32 @_Z17OrderToComponentsjb(i32 %nOrder, i1 zeroext %b3D)
  %13 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  store i32 %call.i, i32* %13, align 8, !tbaa !101
  %14 = bitcast %class.CAmbisonicBinauralizer* %this to void (%class.CAmbisonicBinauralizer*)***
  %vtable = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %14, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable, i64 6
  %15 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn, align 8
  call void %15(%class.CAmbisonicBinauralizer* nonnull %this)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 2
  %16 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !289
  %vtable22 = load void (%class.CAmbisonicBinauralizer*)**, void (%class.CAmbisonicBinauralizer*)*** %14, align 8, !tbaa !68
  %vfn23 = getelementptr inbounds void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vtable22, i64 7
  %17 = load void (%class.CAmbisonicBinauralizer*)*, void (%class.CAmbisonicBinauralizer*)** %vfn23, align 8
  call void %17(%class.CAmbisonicBinauralizer* nonnull %this)
  %18 = bitcast [2 x float*]* %pfHRTF to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #24
  %19 = load i32, i32* %m_nTaps, align 4, !tbaa !331
  %conv26 = zext i32 %19 to i64
  %20 = shl nuw nsw i64 %conv26, 2
  %call27 = call i8* @_Znam(i64 %20) #25
  %arrayidx = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 0
  %21 = bitcast [2 x float*]* %pfHRTF to i8**
  store i8* %call27, i8** %21, align 16, !tbaa !76
  %call27.1 = call i8* @_Znam(i64 %20) #25
  %arrayidx.1 = getelementptr inbounds [2 x float*], [2 x float*]* %pfHRTF, i64 0, i64 1
  %22 = bitcast float** %arrayidx.1 to i8**
  store i8* %call27.1, i8** %22, align 8, !tbaa !76
  %23 = load i32, i32* %13, align 8, !tbaa !101
  %conv31 = zext i32 %23 to i64
  %24 = shl nuw nsw i64 %conv31, 3
  %cmp37508 = icmp eq i32 %23, 0
  %call32 = call i8* @_Znam(i64 %24) #25
  br i1 %cmp37508, label %for.cond52.preheader.thread, label %for.body30.us.preheader, !prof !343

for.cond52.preheader.thread:                      ; preds = %while.end
  %call32.1 = call i8* @_Znam(i64 %24) #25
  %25 = bitcast i8* %call32 to float**
  %26 = bitcast i8* %call32.1 to float**
  br label %delete.notnull

for.body30.us.preheader:                          ; preds = %while.end
  %27 = bitcast i8* %call32 to float**
  br label %for.body38.us

for.body38.us:                                    ; preds = %for.body38.us, %for.body30.us.preheader
  %indvars.iv558 = phi i64 [ 0, %for.body30.us.preheader ], [ %indvars.iv.next559, %for.body38.us ]
  %call41.us = call i8* @_Znam(i64 %20) #25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call41.us, i8 0, i64 %20, i1 false)
  %arrayidx45.us = getelementptr inbounds float*, float** %27, i64 %indvars.iv558
  %28 = bitcast float** %arrayidx45.us to i8**
  store i8* %call41.us, i8** %28, align 8, !tbaa !76
  %indvars.iv.next559 = add nuw nsw i64 %indvars.iv558, 1
  %exitcond561 = icmp eq i64 %indvars.iv.next559, %conv31
  br i1 %exitcond561, label %for.cond35.for.inc49_crit_edge.us, label %for.body38.us, !prof !343

for.cond35.for.inc49_crit_edge.us:                ; preds = %for.body38.us
  %call32.us.1 = call i8* @_Znam(i64 %24) #25
  %29 = bitcast i8* %call32.us.1 to float**
  br label %for.body38.us.1

for.cond52.preheader:                             ; preds = %for.body38.us.1
  br i1 %cmp37508, label %delete.notnull, label %for.cond56.preheader.lr.ph, !prof !344

for.cond56.preheader.lr.ph:                       ; preds = %for.cond52.preheader
  %cmp57502 = icmp eq i32 %16, 0
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  %30 = bitcast %class.HRTF* %call to i1 (%class.HRTF*, float, float, float**)***
  %wide.trip.count554 = zext i32 %16 to i64
  br label %for.cond56.preheader

for.cond56.preheader:                             ; preds = %for.inc120, %for.cond56.preheader.lr.ph
  %31 = phi i32 [ %23, %for.cond56.preheader.lr.ph ], [ %168, %for.inc120 ]
  %indvars.iv556 = phi i64 [ 0, %for.cond56.preheader.lr.ph ], [ %indvars.iv.next557, %for.inc120 ]
  br i1 %cmp57502, label %for.inc120, label %for.body58.lr.ph, !prof !345

for.body58.lr.ph:                                 ; preds = %for.cond56.preheader
  %32 = trunc i64 %indvars.iv556 to i32
  %conv71 = uitofp i32 %32 to double
  %arrayidx100 = getelementptr inbounds float*, float** %27, i64 %indvars.iv556
  %arrayidx109 = getelementptr inbounds float*, float** %29, i64 %indvars.iv556
  br label %for.body58

for.body58:                                       ; preds = %for.inc117, %for.body58.lr.ph
  %indvars.iv552 = phi i64 [ 0, %for.body58.lr.ph ], [ %indvars.iv.next553, %for.inc117 ]
  %33 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !284
  %34 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %33, i64 %indvars.iv552, i32 0
  %35 = bitcast %class.CAmbisonicSource* %34 to { <2 x float>, float } (%class.CAmbisonicSource*)***
  %vtable.i = load { <2 x float>, float } (%class.CAmbisonicSource*)**, { <2 x float>, float } (%class.CAmbisonicSource*)*** %35, align 8, !tbaa !68
  %vfn.i = getelementptr inbounds { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vtable.i, i64 6
  %36 = load { <2 x float>, float } (%class.CAmbisonicSource*)*, { <2 x float>, float } (%class.CAmbisonicSource*)** %vfn.i, align 8
  %call.i433 = call { <2 x float>, float } %36(%class.CAmbisonicSource* %34)
  %call60.fca.0.extract = extractvalue { <2 x float>, float } %call.i433, 0
  %position.sroa.0.0.vec.extract = extractelement <2 x float> %call60.fca.0.extract, i32 0
  %position.sroa.0.4.vec.extract = extractelement <2 x float> %call60.fca.0.extract, i32 1
  %vtable61 = load i1 (%class.HRTF*, float, float, float**)**, i1 (%class.HRTF*, float, float, float**)*** %30, align 8, !tbaa !68
  %vfn62 = getelementptr inbounds i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vtable61, i64 2
  %37 = load i1 (%class.HRTF*, float, float, float**)*, i1 (%class.HRTF*, float, float, float**)** %vfn62, align 8
  %call63 = call zeroext i1 %37(%class.HRTF* nonnull %call, float %position.sroa.0.0.vec.extract, float %position.sroa.0.4.vec.extract, float** nonnull %arrayidx)
  br i1 %call63, label %if.end67, label %cleanup301, !prof !346

if.end67:                                         ; preds = %for.body58
  %38 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !284
  %39 = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %38, i64 %indvars.iv552, i32 0
  %40 = bitcast %class.CAmbisonicSource* %39 to float (%class.CAmbisonicSource*, i32)***
  %vtable.i436 = load float (%class.CAmbisonicSource*, i32)**, float (%class.CAmbisonicSource*, i32)*** %40, align 8, !tbaa !68
  %vfn.i437 = getelementptr inbounds float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vtable.i436, i64 11
  %41 = load float (%class.CAmbisonicSource*, i32)*, float (%class.CAmbisonicSource*, i32)** %vfn.i437, align 8
  %call.i438 = call float %41(%class.CAmbisonicSource* %39, i32 %32)
  %conv70 = fpext float %call.i438 to double
  %call72 = call double @sqrt(double %conv71) #24
  %42 = call double @llvm.floor.f64(double %call72)
  %mul = fmul double %42, 2.000000e+00
  %add73 = fadd double %mul, 1.000000e+00
  %mul74 = fmul double %add73, %conv70
  %conv75 = fptrunc double %mul74 to float
  %43 = load i32, i32* %m_nTaps, align 4, !tbaa !331
  %cmp78497 = icmp eq i32 %43, 0
  br i1 %cmp78497, label %for.inc117, label %for.body79.lr.ph, !prof !75

for.body79.lr.ph:                                 ; preds = %if.end67
  %44 = load float*, float** %arrayidx, align 16, !tbaa !76
  %45 = load float*, float** %arrayidx.1, align 8, !tbaa !76
  %46 = zext i32 %43 to i64
  %min.iters.check635 = icmp ult i32 %43, 8
  br i1 %min.iters.check635, label %for.body79.preheader, label %vector.memcheck645

for.body79.preheader:                             ; preds = %middle.block633, %vector.memcheck645, %for.body79.lr.ph
  %indvars.iv546.ph = phi i64 [ 0, %vector.memcheck645 ], [ 0, %for.body79.lr.ph ], [ %n.vec648, %middle.block633 ]
  %47 = or i64 %indvars.iv546.ph, 1
  %48 = icmp ugt i64 %47, %46
  %umax = select i1 %48, i64 %47, i64 %46
  %xtraiter757 = and i64 %umax, 1
  %lcmp.mod758 = icmp eq i64 %xtraiter757, 0
  br i1 %lcmp.mod758, label %for.body79.prol.loopexit, label %for.body79.prol

for.body79.prol:                                  ; preds = %for.body79.preheader
  %arrayidx82.prol = getelementptr inbounds float, float* %44, i64 %indvars.iv546.ph
  %49 = load float, float* %arrayidx82.prol, align 4, !tbaa !83
  %mul83.prol = fmul float %49, %conv75
  store float %mul83.prol, float* %arrayidx82.prol, align 4, !tbaa !83
  %arrayidx86.prol = getelementptr inbounds float, float* %45, i64 %indvars.iv546.ph
  %50 = load float, float* %arrayidx86.prol, align 4, !tbaa !83
  %mul87.prol = fmul float %50, %conv75
  store float %mul87.prol, float* %arrayidx86.prol, align 4, !tbaa !83
  %indvars.iv.next547.prol = or i64 %indvars.iv546.ph, 1
  br label %for.body79.prol.loopexit

for.body79.prol.loopexit:                         ; preds = %for.body79.prol, %for.body79.preheader
  %indvars.iv546.unr.ph = phi i64 [ %indvars.iv.next547.prol, %for.body79.prol ], [ %indvars.iv546.ph, %for.body79.preheader ]
  %51 = or i64 %indvars.iv546.ph, 1
  %52 = icmp eq i64 %umax, %51
  br i1 %52, label %for.cond91.preheader, label %for.body79

vector.memcheck645:                               ; preds = %for.body79.lr.ph
  %scevgep637 = getelementptr float, float* %44, i64 %46
  %scevgep639 = getelementptr float, float* %45, i64 %46
  %bound0641 = icmp ult float* %44, %scevgep639
  %bound1642 = icmp ult float* %45, %scevgep637
  %found.conflict643 = and i1 %bound0641, %bound1642
  br i1 %found.conflict643, label %for.body79.preheader, label %vector.ph646

vector.ph646:                                     ; preds = %vector.memcheck645
  %n.vec648 = and i64 %46, 4294967288
  %broadcast.splatinsert659 = insertelement <4 x float> undef, float %conv75, i32 0
  %broadcast.splat660 = shufflevector <4 x float> %broadcast.splatinsert659, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert661 = insertelement <4 x float> undef, float %conv75, i32 0
  %broadcast.splat662 = shufflevector <4 x float> %broadcast.splatinsert661, <4 x float> undef, <4 x i32> zeroinitializer
  %53 = add nsw i64 %n.vec648, -8
  %54 = lshr exact i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %xtraiter753 = and i64 %55, 1
  %56 = icmp eq i64 %53, 0
  br i1 %56, label %middle.block633.unr-lcssa, label %vector.ph646.new

vector.ph646.new:                                 ; preds = %vector.ph646
  %unroll_iter755 = sub nuw nsw i64 %55, %xtraiter753
  br label %vector.body632

vector.body632:                                   ; preds = %vector.body632, %vector.ph646.new
  %index649 = phi i64 [ 0, %vector.ph646.new ], [ %index.next650.1, %vector.body632 ]
  %niter756 = phi i64 [ %unroll_iter755, %vector.ph646.new ], [ %niter756.nsub.1, %vector.body632 ]
  %57 = getelementptr inbounds float, float* %44, i64 %index649
  %58 = bitcast float* %57 to <4 x float>*
  %wide.load657 = load <4 x float>, <4 x float>* %58, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %59 = getelementptr inbounds float, float* %57, i64 4
  %60 = bitcast float* %59 to <4 x float>*
  %wide.load658 = load <4 x float>, <4 x float>* %60, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %61 = fmul <4 x float> %wide.load657, %broadcast.splat660
  %62 = fmul <4 x float> %wide.load658, %broadcast.splat662
  %63 = bitcast float* %57 to <4 x float>*
  store <4 x float> %61, <4 x float>* %63, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %64 = bitcast float* %59 to <4 x float>*
  store <4 x float> %62, <4 x float>* %64, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %65 = getelementptr inbounds float, float* %45, i64 %index649
  %66 = bitcast float* %65 to <4 x float>*
  %wide.load663 = load <4 x float>, <4 x float>* %66, align 4, !tbaa !83, !alias.scope !350
  %67 = getelementptr inbounds float, float* %65, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %wide.load664 = load <4 x float>, <4 x float>* %68, align 4, !tbaa !83, !alias.scope !350
  %69 = fmul <4 x float> %wide.load663, %broadcast.splat660
  %70 = fmul <4 x float> %wide.load664, %broadcast.splat662
  %71 = bitcast float* %65 to <4 x float>*
  store <4 x float> %69, <4 x float>* %71, align 4, !tbaa !83, !alias.scope !350
  %72 = bitcast float* %67 to <4 x float>*
  store <4 x float> %70, <4 x float>* %72, align 4, !tbaa !83, !alias.scope !350
  %index.next650 = or i64 %index649, 8
  %73 = getelementptr inbounds float, float* %44, i64 %index.next650
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load657.1 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load658.1 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %77 = fmul <4 x float> %wide.load657.1, %broadcast.splat660
  %78 = fmul <4 x float> %wide.load658.1, %broadcast.splat662
  %79 = bitcast float* %73 to <4 x float>*
  store <4 x float> %77, <4 x float>* %79, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %80 = bitcast float* %75 to <4 x float>*
  store <4 x float> %78, <4 x float>* %80, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %81 = getelementptr inbounds float, float* %45, i64 %index.next650
  %82 = bitcast float* %81 to <4 x float>*
  %wide.load663.1 = load <4 x float>, <4 x float>* %82, align 4, !tbaa !83, !alias.scope !350
  %83 = getelementptr inbounds float, float* %81, i64 4
  %84 = bitcast float* %83 to <4 x float>*
  %wide.load664.1 = load <4 x float>, <4 x float>* %84, align 4, !tbaa !83, !alias.scope !350
  %85 = fmul <4 x float> %wide.load663.1, %broadcast.splat660
  %86 = fmul <4 x float> %wide.load664.1, %broadcast.splat662
  %87 = bitcast float* %81 to <4 x float>*
  store <4 x float> %85, <4 x float>* %87, align 4, !tbaa !83, !alias.scope !350
  %88 = bitcast float* %83 to <4 x float>*
  store <4 x float> %86, <4 x float>* %88, align 4, !tbaa !83, !alias.scope !350
  %index.next650.1 = add i64 %index649, 16
  %niter756.nsub.1 = add i64 %niter756, -2
  %niter756.ncmp.1 = icmp eq i64 %niter756.nsub.1, 0
  br i1 %niter756.ncmp.1, label %middle.block633.unr-lcssa, label %vector.body632, !llvm.loop !352

middle.block633.unr-lcssa:                        ; preds = %vector.body632, %vector.ph646
  %index649.unr = phi i64 [ 0, %vector.ph646 ], [ %index.next650.1, %vector.body632 ]
  %lcmp.mod754 = icmp eq i64 %xtraiter753, 0
  br i1 %lcmp.mod754, label %middle.block633, label %vector.body632.epil

vector.body632.epil:                              ; preds = %middle.block633.unr-lcssa
  %89 = getelementptr inbounds float, float* %44, i64 %index649.unr
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load657.epil = load <4 x float>, <4 x float>* %90, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %91 = getelementptr inbounds float, float* %89, i64 4
  %92 = bitcast float* %91 to <4 x float>*
  %wide.load658.epil = load <4 x float>, <4 x float>* %92, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %93 = fmul <4 x float> %wide.load657.epil, %broadcast.splat660
  %94 = fmul <4 x float> %wide.load658.epil, %broadcast.splat662
  %95 = bitcast float* %89 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %96 = bitcast float* %91 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !tbaa !83, !alias.scope !347, !noalias !350
  %97 = getelementptr inbounds float, float* %45, i64 %index649.unr
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load663.epil = load <4 x float>, <4 x float>* %98, align 4, !tbaa !83, !alias.scope !350
  %99 = getelementptr inbounds float, float* %97, i64 4
  %100 = bitcast float* %99 to <4 x float>*
  %wide.load664.epil = load <4 x float>, <4 x float>* %100, align 4, !tbaa !83, !alias.scope !350
  %101 = fmul <4 x float> %wide.load663.epil, %broadcast.splat660
  %102 = fmul <4 x float> %wide.load664.epil, %broadcast.splat662
  %103 = bitcast float* %97 to <4 x float>*
  store <4 x float> %101, <4 x float>* %103, align 4, !tbaa !83, !alias.scope !350
  %104 = bitcast float* %99 to <4 x float>*
  store <4 x float> %102, <4 x float>* %104, align 4, !tbaa !83, !alias.scope !350
  br label %middle.block633

middle.block633:                                  ; preds = %vector.body632.epil, %middle.block633.unr-lcssa
  %cmp.n652 = icmp eq i64 %n.vec648, %46
  br i1 %cmp.n652, label %for.cond91.preheader, label %for.body79.preheader

for.cond91.preheader:                             ; preds = %for.body79, %middle.block633, %for.body79.prol.loopexit
  %cmp93500 = icmp eq i32 %43, 0
  br i1 %cmp93500, label %for.inc117, label %for.body94.lr.ph, !prof !74

for.body94.lr.ph:                                 ; preds = %for.cond91.preheader
  %105 = load float*, float** %arrayidx, align 16, !tbaa !76
  %106 = load float*, float** %arrayidx100, align 8, !tbaa !76
  %107 = load float*, float** %arrayidx.1, align 8, !tbaa !76
  %108 = load float*, float** %arrayidx109, align 8, !tbaa !76
  %wide.trip.count550 = zext i32 %43 to i64
  %min.iters.check = icmp ult i32 %43, 4
  br i1 %min.iters.check, label %for.body94.preheader, label %vector.memcheck

for.body94.preheader:                             ; preds = %middle.block, %vector.memcheck, %for.body94.lr.ph
  %indvars.iv548.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body94.lr.ph ], [ %n.vec, %middle.block ]
  %109 = xor i64 %indvars.iv548.ph, -1
  %xtraiter763 = and i64 %46, 1
  %lcmp.mod764 = icmp eq i64 %xtraiter763, 0
  br i1 %lcmp.mod764, label %for.body94.prol.loopexit, label %for.body94.prol

for.body94.prol:                                  ; preds = %for.body94.preheader
  %arrayidx97.prol = getelementptr inbounds float, float* %105, i64 %indvars.iv548.ph
  %110 = load float, float* %arrayidx97.prol, align 4, !tbaa !83
  %arrayidx102.prol = getelementptr inbounds float, float* %106, i64 %indvars.iv548.ph
  %111 = load float, float* %arrayidx102.prol, align 4, !tbaa !83
  %add103.prol = fadd float %110, %111
  store float %add103.prol, float* %arrayidx102.prol, align 4, !tbaa !83
  %arrayidx106.prol = getelementptr inbounds float, float* %107, i64 %indvars.iv548.ph
  %112 = load float, float* %arrayidx106.prol, align 4, !tbaa !83
  %arrayidx111.prol = getelementptr inbounds float, float* %108, i64 %indvars.iv548.ph
  %113 = load float, float* %arrayidx111.prol, align 4, !tbaa !83
  %add112.prol = fadd float %112, %113
  store float %add112.prol, float* %arrayidx111.prol, align 4, !tbaa !83
  %indvars.iv.next549.prol = or i64 %indvars.iv548.ph, 1
  br label %for.body94.prol.loopexit

for.body94.prol.loopexit:                         ; preds = %for.body94.prol, %for.body94.preheader
  %indvars.iv548.unr.ph = phi i64 [ %indvars.iv.next549.prol, %for.body94.prol ], [ %indvars.iv548.ph, %for.body94.preheader ]
  %114 = sub nsw i64 0, %46
  %115 = icmp eq i64 %109, %114
  br i1 %115, label %for.inc117, label %for.body94

vector.memcheck:                                  ; preds = %for.body94.lr.ph
  %scevgep = getelementptr float, float* %106, i64 %wide.trip.count550
  %scevgep608 = getelementptr float, float* %108, i64 %wide.trip.count550
  %scevgep610 = getelementptr float, float* %105, i64 %wide.trip.count550
  %scevgep612 = getelementptr float, float* %107, i64 %wide.trip.count550
  %bound0 = icmp ult float* %106, %scevgep608
  %bound1 = icmp ult float* %108, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  %bound0614 = icmp ult float* %106, %scevgep610
  %bound1615 = icmp ult float* %105, %scevgep
  %found.conflict616 = and i1 %bound0614, %bound1615
  %conflict.rdx = or i1 %found.conflict, %found.conflict616
  %bound0617 = icmp ult float* %106, %scevgep612
  %bound1618 = icmp ult float* %107, %scevgep
  %found.conflict619 = and i1 %bound0617, %bound1618
  %conflict.rdx620 = or i1 %conflict.rdx, %found.conflict619
  %bound0621 = icmp ult float* %108, %scevgep610
  %bound1622 = icmp ult float* %105, %scevgep608
  %found.conflict623 = and i1 %bound0621, %bound1622
  %conflict.rdx624 = or i1 %conflict.rdx620, %found.conflict623
  %bound0625 = icmp ult float* %108, %scevgep612
  %bound1626 = icmp ult float* %107, %scevgep608
  %found.conflict627 = and i1 %bound0625, %bound1626
  %conflict.rdx628 = or i1 %conflict.rdx624, %found.conflict627
  br i1 %conflict.rdx628, label %for.body94.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count550, 4294967292
  %116 = add nsw i64 %n.vec, -4
  %117 = lshr exact i64 %116, 2
  %118 = add nuw nsw i64 %117, 1
  %xtraiter759 = and i64 %118, 1
  %119 = icmp eq i64 %116, 0
  br i1 %119, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter761 = sub nuw nsw i64 %118, %xtraiter759
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter762 = phi i64 [ %unroll_iter761, %vector.ph.new ], [ %niter762.nsub.1, %vector.body ]
  %120 = getelementptr inbounds float, float* %105, i64 %index
  %121 = bitcast float* %120 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %121, align 4, !tbaa !83, !alias.scope !353
  %122 = getelementptr inbounds float, float* %106, i64 %index
  %123 = bitcast float* %122 to <4 x float>*
  %wide.load629 = load <4 x float>, <4 x float>* %123, align 4, !tbaa !83, !alias.scope !356, !noalias !358
  %124 = fadd <4 x float> %wide.load, %wide.load629
  %125 = bitcast float* %122 to <4 x float>*
  store <4 x float> %124, <4 x float>* %125, align 4, !tbaa !83, !alias.scope !356, !noalias !358
  %126 = getelementptr inbounds float, float* %107, i64 %index
  %127 = bitcast float* %126 to <4 x float>*
  %wide.load630 = load <4 x float>, <4 x float>* %127, align 4, !tbaa !83, !alias.scope !361
  %128 = getelementptr inbounds float, float* %108, i64 %index
  %129 = bitcast float* %128 to <4 x float>*
  %wide.load631 = load <4 x float>, <4 x float>* %129, align 4, !tbaa !83, !alias.scope !362, !noalias !363
  %130 = fadd <4 x float> %wide.load630, %wide.load631
  %131 = bitcast float* %128 to <4 x float>*
  store <4 x float> %130, <4 x float>* %131, align 4, !tbaa !83, !alias.scope !362, !noalias !363
  %index.next = or i64 %index, 4
  %132 = getelementptr inbounds float, float* %105, i64 %index.next
  %133 = bitcast float* %132 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %133, align 4, !tbaa !83, !alias.scope !353
  %134 = getelementptr inbounds float, float* %106, i64 %index.next
  %135 = bitcast float* %134 to <4 x float>*
  %wide.load629.1 = load <4 x float>, <4 x float>* %135, align 4, !tbaa !83, !alias.scope !356, !noalias !358
  %136 = fadd <4 x float> %wide.load.1, %wide.load629.1
  %137 = bitcast float* %134 to <4 x float>*
  store <4 x float> %136, <4 x float>* %137, align 4, !tbaa !83, !alias.scope !356, !noalias !358
  %138 = getelementptr inbounds float, float* %107, i64 %index.next
  %139 = bitcast float* %138 to <4 x float>*
  %wide.load630.1 = load <4 x float>, <4 x float>* %139, align 4, !tbaa !83, !alias.scope !361
  %140 = getelementptr inbounds float, float* %108, i64 %index.next
  %141 = bitcast float* %140 to <4 x float>*
  %wide.load631.1 = load <4 x float>, <4 x float>* %141, align 4, !tbaa !83, !alias.scope !362, !noalias !363
  %142 = fadd <4 x float> %wide.load630.1, %wide.load631.1
  %143 = bitcast float* %140 to <4 x float>*
  store <4 x float> %142, <4 x float>* %143, align 4, !tbaa !83, !alias.scope !362, !noalias !363
  %index.next.1 = add i64 %index, 8
  %niter762.nsub.1 = add i64 %niter762, -2
  %niter762.ncmp.1 = icmp eq i64 %niter762.nsub.1, 0
  br i1 %niter762.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !364

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod760 = icmp eq i64 %xtraiter759, 0
  br i1 %lcmp.mod760, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %144 = getelementptr inbounds float, float* %105, i64 %index.unr
  %145 = bitcast float* %144 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %145, align 4, !tbaa !83, !alias.scope !353
  %146 = getelementptr inbounds float, float* %106, i64 %index.unr
  %147 = bitcast float* %146 to <4 x float>*
  %wide.load629.epil = load <4 x float>, <4 x float>* %147, align 4, !tbaa !83, !alias.scope !356, !noalias !358
  %148 = fadd <4 x float> %wide.load.epil, %wide.load629.epil
  %149 = bitcast float* %146 to <4 x float>*
  store <4 x float> %148, <4 x float>* %149, align 4, !tbaa !83, !alias.scope !356, !noalias !358
  %150 = getelementptr inbounds float, float* %107, i64 %index.unr
  %151 = bitcast float* %150 to <4 x float>*
  %wide.load630.epil = load <4 x float>, <4 x float>* %151, align 4, !tbaa !83, !alias.scope !361
  %152 = getelementptr inbounds float, float* %108, i64 %index.unr
  %153 = bitcast float* %152 to <4 x float>*
  %wide.load631.epil = load <4 x float>, <4 x float>* %153, align 4, !tbaa !83, !alias.scope !362, !noalias !363
  %154 = fadd <4 x float> %wide.load630.epil, %wide.load631.epil
  %155 = bitcast float* %152 to <4 x float>*
  store <4 x float> %154, <4 x float>* %155, align 4, !tbaa !83, !alias.scope !362, !noalias !363
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count550
  br i1 %cmp.n, label %for.inc117, label %for.body94.preheader

for.body79:                                       ; preds = %for.body79, %for.body79.prol.loopexit
  %indvars.iv546 = phi i64 [ %indvars.iv.next547.1, %for.body79 ], [ %indvars.iv546.unr.ph, %for.body79.prol.loopexit ]
  %arrayidx82 = getelementptr inbounds float, float* %44, i64 %indvars.iv546
  %156 = load float, float* %arrayidx82, align 4, !tbaa !83
  %mul83 = fmul float %156, %conv75
  store float %mul83, float* %arrayidx82, align 4, !tbaa !83
  %arrayidx86 = getelementptr inbounds float, float* %45, i64 %indvars.iv546
  %157 = load float, float* %arrayidx86, align 4, !tbaa !83
  %mul87 = fmul float %157, %conv75
  store float %mul87, float* %arrayidx86, align 4, !tbaa !83
  %indvars.iv.next547 = add nuw nsw i64 %indvars.iv546, 1
  %arrayidx82.1 = getelementptr inbounds float, float* %44, i64 %indvars.iv.next547
  %158 = load float, float* %arrayidx82.1, align 4, !tbaa !83
  %mul83.1 = fmul float %158, %conv75
  store float %mul83.1, float* %arrayidx82.1, align 4, !tbaa !83
  %arrayidx86.1 = getelementptr inbounds float, float* %45, i64 %indvars.iv.next547
  %159 = load float, float* %arrayidx86.1, align 4, !tbaa !83
  %mul87.1 = fmul float %159, %conv75
  store float %mul87.1, float* %arrayidx86.1, align 4, !tbaa !83
  %indvars.iv.next547.1 = add nuw nsw i64 %indvars.iv546, 2
  %cmp78.1 = icmp ult i64 %indvars.iv.next547.1, %46
  br i1 %cmp78.1, label %for.body79, label %for.cond91.preheader, !prof !93, !llvm.loop !365

for.body94:                                       ; preds = %for.body94, %for.body94.prol.loopexit
  %indvars.iv548 = phi i64 [ %indvars.iv.next549.1, %for.body94 ], [ %indvars.iv548.unr.ph, %for.body94.prol.loopexit ]
  %arrayidx97 = getelementptr inbounds float, float* %105, i64 %indvars.iv548
  %160 = load float, float* %arrayidx97, align 4, !tbaa !83
  %arrayidx102 = getelementptr inbounds float, float* %106, i64 %indvars.iv548
  %161 = load float, float* %arrayidx102, align 4, !tbaa !83
  %add103 = fadd float %160, %161
  store float %add103, float* %arrayidx102, align 4, !tbaa !83
  %arrayidx106 = getelementptr inbounds float, float* %107, i64 %indvars.iv548
  %162 = load float, float* %arrayidx106, align 4, !tbaa !83
  %arrayidx111 = getelementptr inbounds float, float* %108, i64 %indvars.iv548
  %163 = load float, float* %arrayidx111, align 4, !tbaa !83
  %add112 = fadd float %162, %163
  store float %add112, float* %arrayidx111, align 4, !tbaa !83
  %indvars.iv.next549 = add nuw nsw i64 %indvars.iv548, 1
  %arrayidx97.1 = getelementptr inbounds float, float* %105, i64 %indvars.iv.next549
  %164 = load float, float* %arrayidx97.1, align 4, !tbaa !83
  %arrayidx102.1 = getelementptr inbounds float, float* %106, i64 %indvars.iv.next549
  %165 = load float, float* %arrayidx102.1, align 4, !tbaa !83
  %add103.1 = fadd float %164, %165
  store float %add103.1, float* %arrayidx102.1, align 4, !tbaa !83
  %arrayidx106.1 = getelementptr inbounds float, float* %107, i64 %indvars.iv.next549
  %166 = load float, float* %arrayidx106.1, align 4, !tbaa !83
  %arrayidx111.1 = getelementptr inbounds float, float* %108, i64 %indvars.iv.next549
  %167 = load float, float* %arrayidx111.1, align 4, !tbaa !83
  %add112.1 = fadd float %166, %167
  store float %add112.1, float* %arrayidx111.1, align 4, !tbaa !83
  %indvars.iv.next549.1 = add nuw nsw i64 %indvars.iv548, 2
  %exitcond551.1 = icmp eq i64 %indvars.iv.next549.1, %wide.trip.count550
  br i1 %exitcond551.1, label %for.inc117, label %for.body94, !prof !75, !llvm.loop !366

for.inc117:                                       ; preds = %for.body94, %middle.block, %for.body94.prol.loopexit, %for.cond91.preheader, %if.end67
  %indvars.iv.next553 = add nuw nsw i64 %indvars.iv552, 1
  %exitcond555 = icmp eq i64 %indvars.iv.next553, %wide.trip.count554
  br i1 %exitcond555, label %for.inc120.loopexit, label %for.body58, !prof !345

for.inc120.loopexit:                              ; preds = %for.inc117
  %.pre = load i32, i32* %13, align 8, !tbaa !101
  br label %for.inc120

for.inc120:                                       ; preds = %for.inc120.loopexit, %for.cond56.preheader
  %168 = phi i32 [ %.pre, %for.inc120.loopexit ], [ %31, %for.cond56.preheader ]
  %indvars.iv.next557 = add nuw nsw i64 %indvars.iv556, 1
  %169 = zext i32 %168 to i64
  %cmp54 = icmp ult i64 %indvars.iv.next557, %169
  br i1 %cmp54, label %for.cond56.preheader, label %delete.notnull, !prof !367

delete.notnull:                                   ; preds = %for.inc120, %for.cond52.preheader, %for.cond52.preheader.thread
  %170 = phi float** [ %25, %for.cond52.preheader.thread ], [ %27, %for.cond52.preheader ], [ %27, %for.inc120 ]
  %171 = phi float** [ %26, %for.cond52.preheader.thread ], [ %29, %for.cond52.preheader ], [ %29, %for.inc120 ]
  %172 = phi i8* [ %call32.1, %for.cond52.preheader.thread ], [ %call32.us.1, %for.cond52.preheader ], [ %call32.us.1, %for.inc120 ]
  %173 = bitcast %class.HRTF* %call to void (%class.HRTF*)***
  %vtable123 = load void (%class.HRTF*)**, void (%class.HRTF*)*** %173, align 8, !tbaa !68
  %vfn124 = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable123, i64 1
  %174 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn124, align 8
  call void %174(%class.HRTF* nonnull %call) #24
  %175 = bitcast %class.CAmbisonicEncoder* %myEncoder to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %175) #24
  %176 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 1
  %178 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 2
  %179 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 4
  store i32 0, i32* %179, align 8, !tbaa !101
  %180 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 0, i32 5
  store i8 0, i8* %180, align 4, !tbaa !102
  %m_pfCoeff.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1
  %fDistance.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 3, i32 2
  %181 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %181, i8 0, i64 56, i1 false) #24
  store float 1.000000e+00, float* %fDistance.i.i, align 8, !tbaa !107
  %m_fGain.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 4
  store float 1.000000e+00, float* %m_fGain.i.i, align 4, !tbaa !111
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV17CAmbisonicEncoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %176, align 8, !tbaa !68
  %182 = load i32, i32* %11, align 8, !tbaa !97
  store i32 %182, i32* %177, align 8, !tbaa !97
  store i8 1, i8* %178, align 4, !tbaa !100
  %call.i.i.i447 = invoke i32 @_Z17OrderToComponentsjb(i32 %182, i1 zeroext true)
          to label %call.i.i.i.noexc unwind label %lpad125

call.i.i.i.noexc:                                 ; preds = %delete.notnull
  store i32 %call.i.i.i447, i32* %179, align 8, !tbaa !101
  %conv.i.i = zext i32 %call.i.i.i447 to i64
  %183 = bitcast float* %ref.tmp.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %183) #24
  store float 0.000000e+00, float* %ref.tmp.i.i, align 4, !tbaa !83
  %_M_finish.i.i.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %184 = bitcast float** %_M_finish.i.i.i.i to i64*
  %185 = load i64, i64* %184, align 8, !tbaa !113
  %186 = bitcast %"class.std::vector.0"* %m_pfCoeff.i.i to i64*
  %187 = load i64, i64* %186, align 8, !tbaa !116
  %sub.ptr.sub.i.i.i.i = sub i64 %185, %187
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %cmp.i.i.i446 = icmp ult i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  %188 = inttoptr i64 %187 to float*
  br i1 %cmp.i.i.i446, label %if.then.i.i.i, label %if.else.i.i.i, !prof !117

if.then.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %189 = inttoptr i64 %185 to float*
  %sub.i.i.i = sub nsw i64 %conv.i.i, %sub.ptr.div.i.i.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfCoeff.i.i, float* %189, i64 %sub.i.i.i, float* nonnull dereferenceable(4) %ref.tmp.i.i)
          to label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i unwind label %lpad125

if.else.i.i.i:                                    ; preds = %call.i.i.i.noexc
  %cmp8.i.i.i = icmp ugt i64 %sub.ptr.div.i.i.i.i, %conv.i.i
  br i1 %cmp8.i.i.i, label %if.then9.i.i.i, label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

if.then9.i.i.i:                                   ; preds = %if.else.i.i.i
  %add.ptr.i.i.i = getelementptr inbounds float, float* %188, i64 %conv.i.i
  store float* %add.ptr.i.i.i, float** %_M_finish.i.i.i.i, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i

_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i:        ; preds = %if.then9.i.i.i, %if.else.i.i.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183) #24
  %m_pfOrderWeights.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2
  %190 = load i32, i32* %177, align 8, !tbaa !97
  %add.i.i = add i32 %190, 1
  %conv4.i.i = zext i32 %add.i.i to i64
  %191 = bitcast float* %ref.tmp5.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %191) #24
  store float 1.000000e+00, float* %ref.tmp5.i.i, align 4, !tbaa !83
  %_M_finish.i.i6.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %192 = bitcast float** %_M_finish.i.i6.i.i to i64*
  %193 = load i64, i64* %192, align 8, !tbaa !113
  %194 = bitcast %"class.std::vector.0"* %m_pfOrderWeights.i.i to i64*
  %195 = load i64, i64* %194, align 8, !tbaa !116
  %sub.ptr.sub.i.i7.i.i = sub i64 %193, %195
  %sub.ptr.div.i.i8.i.i = ashr exact i64 %sub.ptr.sub.i.i7.i.i, 2
  %cmp.i9.i.i = icmp ult i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  %196 = inttoptr i64 %195 to float*
  br i1 %cmp.i9.i.i, label %if.then.i11.i.i, label %if.else.i13.i.i, !prof !117

if.then.i11.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %197 = inttoptr i64 %193 to float*
  %sub.i10.i.i = sub nsw i64 %conv4.i.i, %sub.ptr.div.i.i8.i.i
  invoke void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* nonnull %m_pfOrderWeights.i.i, float* %197, i64 %sub.i10.i.i, float* nonnull dereferenceable(4) %ref.tmp5.i.i)
          to label %invoke.cont126 unwind label %lpad125

if.else.i13.i.i:                                  ; preds = %_ZNSt6vectorIfSaIfEE6resizeEmRKf.exit.i.i
  %cmp8.i12.i.i = icmp ugt i64 %sub.ptr.div.i.i8.i.i, %conv4.i.i
  br i1 %cmp8.i12.i.i, label %if.then9.i15.i.i, label %invoke.cont126

if.then9.i15.i.i:                                 ; preds = %if.else.i13.i.i
  %add.ptr.i14.i.i = getelementptr inbounds float, float* %196, i64 %conv4.i.i
  store float* %add.ptr.i14.i.i, float** %_M_finish.i.i6.i.i, align 8, !tbaa !113
  br label %invoke.cont126

invoke.cont126:                                   ; preds = %if.then9.i15.i.i, %if.else.i13.i.i, %if.then.i11.i.i
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191) #24
  %call130 = invoke float @_Z16DegreesToRadiansf(float 9.000000e+01)
          to label %invoke.cont129 unwind label %lpad128

invoke.cont129:                                   ; preds = %invoke.cont126
  %position90.sroa.0.4.vec.insert = insertelement <2 x float> <float undef, float 0.000000e+00>, float %call130, i32 0
  %198 = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0
  %polPosition.sroa.0.0..sroa_idx.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 3
  %polPosition.sroa.0.0..sroa_cast.i = bitcast %struct.PolarPoint* %polPosition.sroa.0.0..sroa_idx.i to <2 x float>*
  store <2 x float> %position90.sroa.0.4.vec.insert, <2 x float>* %polPosition.sroa.0.0..sroa_cast.i, align 8
  store float 5.000000e+00, float* %fDistance.i.i, align 8
  call void @_ZN16CAmbisonicSource7RefreshEv(%class.CAmbisonicSource* nonnull %198) #24
  %199 = load i32, i32* %m_nTaps, align 4, !tbaa !331
  %conv137 = zext i32 %199 to i64
  %200 = shl nuw nsw i64 %conv137, 2
  %call140 = invoke i8* @_Znam(i64 %200) #25
          to label %invoke.cont139 unwind label %lpad138

invoke.cont139:                                   ; preds = %invoke.cont129
  %201 = bitcast i8* %call140 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call140, i8 0, i64 %200, i1 false)
  %202 = load i32, i32* %13, align 8, !tbaa !101
  %cmp143493 = icmp eq i32 %202, 0
  br i1 %cmp143493, label %for.cond166.preheader, label %for.cond145.preheader.lr.ph, !prof !368

for.cond145.preheader.lr.ph:                      ; preds = %invoke.cont139
  %cmp147491 = icmp eq i32 %199, 0
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicEncoder, %class.CAmbisonicEncoder* %myEncoder, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %203 = load float*, float** %_M_start.i.i, align 8
  br i1 %cmp147491, label %for.body217.lr.ph, label %for.cond145.preheader.us.preheader, !prof !369

for.cond145.preheader.us.preheader:               ; preds = %for.cond145.preheader.lr.ph
  %204 = zext i32 %202 to i64
  %205 = shl nuw nsw i64 %conv137, 2
  %scevgep670 = getelementptr i8, i8* %call140, i64 %205
  %min.iters.check668 = icmp ult i32 %199, 8
  %n.vec686 = and i64 %conv137, 4294967288
  %cmp.n690 = icmp eq i64 %n.vec686, %conv137
  %xtraiter751 = and i64 %conv137, 1
  %lcmp.mod752 = icmp eq i64 %xtraiter751, 0
  %206 = sub nsw i64 0, %conv137
  br label %for.cond145.preheader.us

for.cond145.preheader.us:                         ; preds = %for.cond145.for.inc163_crit_edge.us, %for.cond145.preheader.us.preheader
  %indvars.iv544 = phi i64 [ 0, %for.cond145.preheader.us.preheader ], [ %indvars.iv.next545, %for.cond145.for.inc163_crit_edge.us ]
  %add.ptr.i.i.us = getelementptr inbounds float, float* %203, i64 %indvars.iv544
  %arrayidx153.us = getelementptr inbounds float*, float** %170, i64 %indvars.iv544
  %207 = load float*, float** %arrayidx153.us, align 8, !tbaa !76
  br i1 %min.iters.check668, label %for.body148.us.preheader, label %vector.memcheck683

vector.memcheck683:                               ; preds = %for.cond145.preheader.us
  %208 = bitcast float* %207 to i8*
  %scevgep671 = getelementptr float, float* %203, i64 %indvars.iv544
  %scevgep671672 = bitcast float* %scevgep671 to i8*
  %uglygep = getelementptr i8, i8* %scevgep671672, i64 1
  %scevgep673 = getelementptr float, float* %207, i64 %conv137
  %scevgep673674 = bitcast float* %scevgep673 to i8*
  %bc = bitcast float* %add.ptr.i.i.us to i8*
  %bound0675 = icmp ult i8* %call140, %uglygep
  %bound1676 = icmp ugt i8* %scevgep670, %bc
  %found.conflict677 = and i1 %bound0675, %bound1676
  %bound0678 = icmp ult i8* %call140, %scevgep673674
  %bound1679 = icmp ugt i8* %scevgep670, %208
  %found.conflict680 = and i1 %bound0678, %bound1679
  %conflict.rdx681 = or i1 %found.conflict677, %found.conflict680
  br i1 %conflict.rdx681, label %for.body148.us.preheader, label %vector.ph684

vector.ph684:                                     ; preds = %vector.memcheck683
  %209 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !83, !alias.scope !370
  %210 = insertelement <4 x float> undef, float %209, i32 0
  %211 = shufflevector <4 x float> %210, <4 x float> undef, <4 x i32> zeroinitializer
  %212 = insertelement <4 x float> undef, float %209, i32 0
  %213 = shufflevector <4 x float> %212, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body665

vector.body665:                                   ; preds = %vector.body665, %vector.ph684
  %index687 = phi i64 [ 0, %vector.ph684 ], [ %index.next688, %vector.body665 ]
  %214 = getelementptr inbounds float, float* %207, i64 %index687
  %215 = bitcast float* %214 to <4 x float>*
  %wide.load695 = load <4 x float>, <4 x float>* %215, align 4, !tbaa !83, !alias.scope !373
  %216 = getelementptr inbounds float, float* %214, i64 4
  %217 = bitcast float* %216 to <4 x float>*
  %wide.load696 = load <4 x float>, <4 x float>* %217, align 4, !tbaa !83, !alias.scope !373
  %218 = fmul <4 x float> %211, %wide.load695
  %219 = fmul <4 x float> %213, %wide.load696
  %220 = getelementptr inbounds float, float* %201, i64 %index687
  %221 = bitcast float* %220 to <4 x float>*
  %wide.load697 = load <4 x float>, <4 x float>* %221, align 4, !tbaa !83, !alias.scope !375, !noalias !377
  %222 = getelementptr inbounds float, float* %220, i64 4
  %223 = bitcast float* %222 to <4 x float>*
  %wide.load698 = load <4 x float>, <4 x float>* %223, align 4, !tbaa !83, !alias.scope !375, !noalias !377
  %224 = fadd <4 x float> %wide.load697, %218
  %225 = fadd <4 x float> %wide.load698, %219
  %226 = bitcast float* %220 to <4 x float>*
  store <4 x float> %224, <4 x float>* %226, align 4, !tbaa !83, !alias.scope !375, !noalias !377
  %227 = bitcast float* %222 to <4 x float>*
  store <4 x float> %225, <4 x float>* %227, align 4, !tbaa !83, !alias.scope !375, !noalias !377
  %index.next688 = add i64 %index687, 8
  %228 = icmp eq i64 %index.next688, %n.vec686
  br i1 %228, label %middle.block666, label %vector.body665, !llvm.loop !378

middle.block666:                                  ; preds = %vector.body665
  br i1 %cmp.n690, label %for.cond145.for.inc163_crit_edge.us, label %for.body148.us.preheader

for.body148.us.preheader:                         ; preds = %middle.block666, %vector.memcheck683, %for.cond145.preheader.us
  %indvars.iv540.ph = phi i64 [ 0, %vector.memcheck683 ], [ 0, %for.cond145.preheader.us ], [ %n.vec686, %middle.block666 ]
  %229 = xor i64 %indvars.iv540.ph, -1
  br i1 %lcmp.mod752, label %for.body148.us.prol.loopexit, label %for.body148.us.prol

for.body148.us.prol:                              ; preds = %for.body148.us.preheader
  %230 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !83
  %arrayidx155.us.prol = getelementptr inbounds float, float* %207, i64 %indvars.iv540.ph
  %231 = load float, float* %arrayidx155.us.prol, align 4, !tbaa !83
  %mul156.us.prol = fmul float %230, %231
  %arrayidx158.us.prol = getelementptr inbounds float, float* %201, i64 %indvars.iv540.ph
  %232 = load float, float* %arrayidx158.us.prol, align 4, !tbaa !83
  %add159.us.prol = fadd float %232, %mul156.us.prol
  store float %add159.us.prol, float* %arrayidx158.us.prol, align 4, !tbaa !83
  %indvars.iv.next541.prol = or i64 %indvars.iv540.ph, 1
  br label %for.body148.us.prol.loopexit

for.body148.us.prol.loopexit:                     ; preds = %for.body148.us.prol, %for.body148.us.preheader
  %indvars.iv540.unr.ph = phi i64 [ %indvars.iv.next541.prol, %for.body148.us.prol ], [ %indvars.iv540.ph, %for.body148.us.preheader ]
  %233 = icmp eq i64 %229, %206
  br i1 %233, label %for.cond145.for.inc163_crit_edge.us, label %for.body148.us

for.body148.us:                                   ; preds = %for.body148.us, %for.body148.us.prol.loopexit
  %indvars.iv540 = phi i64 [ %indvars.iv.next541.1, %for.body148.us ], [ %indvars.iv540.unr.ph, %for.body148.us.prol.loopexit ]
  %234 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !83
  %arrayidx155.us = getelementptr inbounds float, float* %207, i64 %indvars.iv540
  %235 = load float, float* %arrayidx155.us, align 4, !tbaa !83
  %mul156.us = fmul float %234, %235
  %arrayidx158.us = getelementptr inbounds float, float* %201, i64 %indvars.iv540
  %236 = load float, float* %arrayidx158.us, align 4, !tbaa !83
  %add159.us = fadd float %236, %mul156.us
  store float %add159.us, float* %arrayidx158.us, align 4, !tbaa !83
  %indvars.iv.next541 = add nuw nsw i64 %indvars.iv540, 1
  %237 = load float, float* %add.ptr.i.i.us, align 4, !tbaa !83
  %arrayidx155.us.1 = getelementptr inbounds float, float* %207, i64 %indvars.iv.next541
  %238 = load float, float* %arrayidx155.us.1, align 4, !tbaa !83
  %mul156.us.1 = fmul float %237, %238
  %arrayidx158.us.1 = getelementptr inbounds float, float* %201, i64 %indvars.iv.next541
  %239 = load float, float* %arrayidx158.us.1, align 4, !tbaa !83
  %add159.us.1 = fadd float %239, %mul156.us.1
  store float %add159.us.1, float* %arrayidx158.us.1, align 4, !tbaa !83
  %indvars.iv.next541.1 = add nuw nsw i64 %indvars.iv540, 2
  %exitcond543.1 = icmp eq i64 %indvars.iv.next541.1, %conv137
  br i1 %exitcond543.1, label %for.cond145.for.inc163_crit_edge.us, label %for.body148.us, !prof !369, !llvm.loop !379

for.cond145.for.inc163_crit_edge.us:              ; preds = %for.body148.us, %for.body148.us.prol.loopexit, %middle.block666
  %indvars.iv.next545 = add nuw nsw i64 %indvars.iv544, 1
  %cmp143.us = icmp ult i64 %indvars.iv.next545, %204
  br i1 %cmp143.us, label %for.cond145.preheader.us, label %for.cond166.preheader, !prof !367

for.cond166.preheader:                            ; preds = %for.cond145.for.inc163_crit_edge.us, %invoke.cont139
  %cmp168487 = icmp eq i32 %199, 0
  br i1 %cmp168487, label %for.end181, label %for.body169.preheader, !prof !380

for.body169.preheader:                            ; preds = %for.cond166.preheader
  %240 = add nsw i64 %conv137, -1
  %xtraiter746 = and i64 %conv137, 3
  %241 = icmp ult i64 %240, 3
  br i1 %241, label %for.end181.loopexit.unr-lcssa, label %for.body169.preheader.new

for.body169.preheader.new:                        ; preds = %for.body169.preheader
  %unroll_iter749 = sub nsw i64 %conv137, %xtraiter746
  br label %for.body169

lpad125:                                          ; preds = %if.then.i11.i.i, %if.then.i.i.i, %delete.notnull
  %242 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad128:                                          ; preds = %invoke.cont126
  %243 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad138:                                          ; preds = %invoke.cont129
  %244 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

for.body169:                                      ; preds = %for.body169, %for.body169.preheader.new
  %indvars.iv536 = phi i64 [ 0, %for.body169.preheader.new ], [ %indvars.iv.next537.3, %for.body169 ]
  %fMax.0488 = phi float [ 0.000000e+00, %for.body169.preheader.new ], [ %cond178.3, %for.body169 ]
  %niter750 = phi i64 [ %unroll_iter749, %for.body169.preheader.new ], [ %niter750.nsub.3, %for.body169 ]
  %arrayidx171 = getelementptr inbounds float, float* %201, i64 %indvars.iv536
  %245 = load float, float* %arrayidx171, align 4, !tbaa !83
  %246 = call float @llvm.fabs.f32(float %245)
  %cmp174 = fcmp ogt float %246, %fMax.0488
  %cond178 = select i1 %cmp174, float %246, float %fMax.0488, !prof !381
  %indvars.iv.next537 = or i64 %indvars.iv536, 1
  %arrayidx171.1 = getelementptr inbounds float, float* %201, i64 %indvars.iv.next537
  %247 = load float, float* %arrayidx171.1, align 4, !tbaa !83
  %248 = call float @llvm.fabs.f32(float %247)
  %cmp174.1 = fcmp ogt float %248, %cond178
  %cond178.1 = select i1 %cmp174.1, float %248, float %cond178, !prof !381
  %indvars.iv.next537.1 = or i64 %indvars.iv536, 2
  %arrayidx171.2 = getelementptr inbounds float, float* %201, i64 %indvars.iv.next537.1
  %249 = load float, float* %arrayidx171.2, align 4, !tbaa !83
  %250 = call float @llvm.fabs.f32(float %249)
  %cmp174.2 = fcmp ogt float %250, %cond178.1
  %cond178.2 = select i1 %cmp174.2, float %250, float %cond178.1, !prof !381
  %indvars.iv.next537.2 = or i64 %indvars.iv536, 3
  %arrayidx171.3 = getelementptr inbounds float, float* %201, i64 %indvars.iv.next537.2
  %251 = load float, float* %arrayidx171.3, align 4, !tbaa !83
  %252 = call float @llvm.fabs.f32(float %251)
  %cmp174.3 = fcmp ogt float %252, %cond178.2
  %cond178.3 = select i1 %cmp174.3, float %252, float %cond178.2, !prof !381
  %indvars.iv.next537.3 = add nuw nsw i64 %indvars.iv536, 4
  %niter750.nsub.3 = add i64 %niter750, -4
  %niter750.ncmp.3 = icmp eq i64 %niter750.nsub.3, 0
  br i1 %niter750.ncmp.3, label %for.end181.loopexit.unr-lcssa, label %for.body169, !prof !382

for.end181.loopexit.unr-lcssa:                    ; preds = %for.body169, %for.body169.preheader
  %cond178.lcssa.ph = phi float [ undef, %for.body169.preheader ], [ %cond178.3, %for.body169 ]
  %indvars.iv536.unr = phi i64 [ 0, %for.body169.preheader ], [ %indvars.iv.next537.3, %for.body169 ]
  %fMax.0488.unr = phi float [ 0.000000e+00, %for.body169.preheader ], [ %cond178.3, %for.body169 ]
  %lcmp.mod747 = icmp eq i64 %xtraiter746, 0
  br i1 %lcmp.mod747, label %for.end181, label %for.body169.epil

for.body169.epil:                                 ; preds = %for.body169.epil, %for.end181.loopexit.unr-lcssa
  %indvars.iv536.epil = phi i64 [ %indvars.iv.next537.epil, %for.body169.epil ], [ %indvars.iv536.unr, %for.end181.loopexit.unr-lcssa ]
  %fMax.0488.epil = phi float [ %cond178.epil, %for.body169.epil ], [ %fMax.0488.unr, %for.end181.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body169.epil ], [ %xtraiter746, %for.end181.loopexit.unr-lcssa ]
  %arrayidx171.epil = getelementptr inbounds float, float* %201, i64 %indvars.iv536.epil
  %253 = load float, float* %arrayidx171.epil, align 4, !tbaa !83
  %254 = call float @llvm.fabs.f32(float %253)
  %cmp174.epil = fcmp ogt float %254, %fMax.0488.epil
  %cond178.epil = select i1 %cmp174.epil, float %254, float %fMax.0488.epil, !prof !381
  %indvars.iv.next537.epil = add nuw nsw i64 %indvars.iv536.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.end181, label %for.body169.epil, !llvm.loop !383

for.end181:                                       ; preds = %for.body169.epil, %for.end181.loopexit.unr-lcssa, %for.cond166.preheader
  %cmp168487581 = phi i1 [ true, %for.cond166.preheader ], [ %cmp168487, %for.body169.epil ], [ %cmp168487, %for.end181.loopexit.unr-lcssa ]
  %fMax.0.lcssa = phi float [ 0.000000e+00, %for.cond166.preheader ], [ %cond178.lcssa.ph, %for.end181.loopexit.unr-lcssa ], [ %cond178.epil, %for.body169.epil ]
  %div182 = fdiv float 1.000000e+00, %fMax.0.lcssa
  %mul183 = fmul float %div182, 0x3FD6666660000000
  %cmp189463 = icmp eq i32 %202, 0
  %brmerge = or i1 %cmp189463, %cmp168487581
  br i1 %brmerge, label %for.cond211.preheader, label %for.cond191.preheader.us.us.preheader, !prof !384

for.cond191.preheader.us.us.preheader:            ; preds = %for.end181
  %wide.trip.count530 = zext i32 %202 to i64
  %255 = and i64 %conv137, 4294967288
  %256 = add nsw i64 %255, -8
  %257 = lshr exact i64 %256, 3
  %258 = add nuw nsw i64 %257, 1
  %min.iters.check702 = icmp ult i32 %199, 8
  %n.vec705 = and i64 %conv137, 4294967288
  %broadcast.splatinsert716 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat717 = shufflevector <4 x float> %broadcast.splatinsert716, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert718 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat719 = shufflevector <4 x float> %broadcast.splatinsert718, <4 x float> undef, <4 x i32> zeroinitializer
  %xtraiter742 = and i64 %258, 1
  %259 = icmp eq i64 %256, 0
  %unroll_iter744 = sub nuw nsw i64 %258, %xtraiter742
  %lcmp.mod743 = icmp eq i64 %xtraiter742, 0
  %cmp.n709 = icmp eq i64 %n.vec705, %conv137
  br label %for.cond191.preheader.us.us

for.cond191.preheader.us.us:                      ; preds = %for.cond191.for.inc205_crit_edge.us.us, %for.cond191.preheader.us.us.preheader
  %indvars.iv528 = phi i64 [ 0, %for.cond191.preheader.us.us.preheader ], [ %indvars.iv.next529, %for.cond191.for.inc205_crit_edge.us.us ]
  %arrayidx198.us.us = getelementptr inbounds float*, float** %170, i64 %indvars.iv528
  %260 = load float*, float** %arrayidx198.us.us, align 8, !tbaa !76
  br i1 %min.iters.check702, label %for.body194.us.us.preheader, label %vector.ph703

for.body194.us.us.preheader:                      ; preds = %middle.block700, %for.cond191.preheader.us.us
  %indvars.iv526.ph = phi i64 [ 0, %for.cond191.preheader.us.us ], [ %n.vec705, %middle.block700 ]
  br label %for.body194.us.us

vector.ph703:                                     ; preds = %for.cond191.preheader.us.us
  br i1 %259, label %middle.block700.unr-lcssa, label %vector.body699

vector.body699:                                   ; preds = %vector.body699, %vector.ph703
  %index706 = phi i64 [ %index.next707.1, %vector.body699 ], [ 0, %vector.ph703 ]
  %niter745 = phi i64 [ %niter745.nsub.1, %vector.body699 ], [ %unroll_iter744, %vector.ph703 ]
  %261 = getelementptr inbounds float, float* %260, i64 %index706
  %262 = bitcast float* %261 to <4 x float>*
  %wide.load714 = load <4 x float>, <4 x float>* %262, align 4, !tbaa !83
  %263 = getelementptr inbounds float, float* %261, i64 4
  %264 = bitcast float* %263 to <4 x float>*
  %wide.load715 = load <4 x float>, <4 x float>* %264, align 4, !tbaa !83
  %265 = fmul <4 x float> %broadcast.splat717, %wide.load714
  %266 = fmul <4 x float> %broadcast.splat719, %wide.load715
  %267 = bitcast float* %261 to <4 x float>*
  store <4 x float> %265, <4 x float>* %267, align 4, !tbaa !83
  %268 = bitcast float* %263 to <4 x float>*
  store <4 x float> %266, <4 x float>* %268, align 4, !tbaa !83
  %index.next707 = or i64 %index706, 8
  %269 = getelementptr inbounds float, float* %260, i64 %index.next707
  %270 = bitcast float* %269 to <4 x float>*
  %wide.load714.1 = load <4 x float>, <4 x float>* %270, align 4, !tbaa !83
  %271 = getelementptr inbounds float, float* %269, i64 4
  %272 = bitcast float* %271 to <4 x float>*
  %wide.load715.1 = load <4 x float>, <4 x float>* %272, align 4, !tbaa !83
  %273 = fmul <4 x float> %broadcast.splat717, %wide.load714.1
  %274 = fmul <4 x float> %broadcast.splat719, %wide.load715.1
  %275 = bitcast float* %269 to <4 x float>*
  store <4 x float> %273, <4 x float>* %275, align 4, !tbaa !83
  %276 = bitcast float* %271 to <4 x float>*
  store <4 x float> %274, <4 x float>* %276, align 4, !tbaa !83
  %index.next707.1 = add i64 %index706, 16
  %niter745.nsub.1 = add i64 %niter745, -2
  %niter745.ncmp.1 = icmp eq i64 %niter745.nsub.1, 0
  br i1 %niter745.ncmp.1, label %middle.block700.unr-lcssa, label %vector.body699, !llvm.loop !385

middle.block700.unr-lcssa:                        ; preds = %vector.body699, %vector.ph703
  %index706.unr = phi i64 [ 0, %vector.ph703 ], [ %index.next707.1, %vector.body699 ]
  br i1 %lcmp.mod743, label %middle.block700, label %vector.body699.epil

vector.body699.epil:                              ; preds = %middle.block700.unr-lcssa
  %277 = getelementptr inbounds float, float* %260, i64 %index706.unr
  %278 = bitcast float* %277 to <4 x float>*
  %wide.load714.epil = load <4 x float>, <4 x float>* %278, align 4, !tbaa !83
  %279 = getelementptr inbounds float, float* %277, i64 4
  %280 = bitcast float* %279 to <4 x float>*
  %wide.load715.epil = load <4 x float>, <4 x float>* %280, align 4, !tbaa !83
  %281 = fmul <4 x float> %broadcast.splat717, %wide.load714.epil
  %282 = fmul <4 x float> %broadcast.splat719, %wide.load715.epil
  %283 = bitcast float* %277 to <4 x float>*
  store <4 x float> %281, <4 x float>* %283, align 4, !tbaa !83
  %284 = bitcast float* %279 to <4 x float>*
  store <4 x float> %282, <4 x float>* %284, align 4, !tbaa !83
  br label %middle.block700

middle.block700:                                  ; preds = %vector.body699.epil, %middle.block700.unr-lcssa
  br i1 %cmp.n709, label %for.cond191.for.inc205_crit_edge.us.us, label %for.body194.us.us.preheader

for.cond191.for.inc205_crit_edge.us.us:           ; preds = %for.body194.us.us, %middle.block700
  %indvars.iv.next529 = add nuw nsw i64 %indvars.iv528, 1
  %exitcond531 = icmp eq i64 %indvars.iv.next529, %wide.trip.count530
  br i1 %exitcond531, label %for.cond191.preheader.us.us.preheader.1, label %for.cond191.preheader.us.us, !prof !343

for.body194.us.us:                                ; preds = %for.body194.us.us, %for.body194.us.us.preheader
  %indvars.iv526 = phi i64 [ %indvars.iv.next527, %for.body194.us.us ], [ %indvars.iv526.ph, %for.body194.us.us.preheader ]
  %arrayidx200.us.us = getelementptr inbounds float, float* %260, i64 %indvars.iv526
  %285 = load float, float* %arrayidx200.us.us, align 4, !tbaa !83
  %mul201.us.us = fmul float %mul183, %285
  store float %mul201.us.us, float* %arrayidx200.us.us, align 4, !tbaa !83
  %indvars.iv.next527 = add nuw nsw i64 %indvars.iv526, 1
  %exitcond = icmp eq i64 %indvars.iv.next527, %conv137
  br i1 %exitcond, label %for.cond191.for.inc205_crit_edge.us.us, label %for.body194.us.us, !prof !386, !llvm.loop !387

for.cond211.preheader:                            ; preds = %for.cond191.for.inc205_crit_edge.us.us.1, %for.end181
  br i1 %cmp143493, label %for.inc248.1, label %for.body217.lr.ph, !prof !389

for.body217.lr.ph:                                ; preds = %for.cond211.preheader, %for.cond145.preheader.lr.ph
  %.in = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %286 = bitcast float** %.in to i8**
  %_M_head_impl.i.i.i.i.i441605 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body217

for.body217:                                      ; preds = %for.inc245.for.body217_crit_edge, %for.body217.lr.ph
  %287 = phi i32 [ %199, %for.body217.lr.ph ], [ %.pre571, %for.inc245.for.body217_crit_edge ]
  %indvars.iv522 = phi i64 [ 0, %for.body217.lr.ph ], [ %indvars.iv.next523, %for.inc245.for.body217_crit_edge ]
  %288 = load i8*, i8** %286, align 8, !tbaa !116
  %arrayidx222 = getelementptr inbounds float*, float** %170, i64 %indvars.iv522
  %289 = bitcast float** %arrayidx222 to i8**
  %290 = load i8*, i8** %289, align 8, !tbaa !76
  %conv224 = zext i32 %287 to i64
  %mul225 = shl nuw nsw i64 %conv224, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %288, i8* align 4 %290, i64 %mul225, i1 false)
  %291 = load i32, i32* %m_nTaps, align 4, !tbaa !331
  %conv228 = zext i32 %291 to i64
  %292 = load float*, float** %.in, align 8, !tbaa !116
  %add.ptr.i443 = getelementptr inbounds float, float* %292, i64 %conv228
  %293 = bitcast float* %add.ptr.i443 to i8*
  %294 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %sub232 = sub i32 %294, %291
  %conv233 = zext i32 %sub232 to i64
  %mul234 = shl nuw nsw i64 %conv233, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %293, i8 0, i64 %mul234, i1 false)
  %295 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i441605, align 8, !tbaa !76
  %296 = load float*, float** %.in, align 8, !tbaa !116
  %297 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i, align 8, !tbaa !390
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %297, i64 %indvars.iv522, i32 0, i32 0, i32 0, i32 0
  %298 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %295, float* %296, %struct.kiss_fft_cpx* %298)
          to label %for.inc245 unwind label %lpad243.loopexit

for.inc245:                                       ; preds = %for.body217
  %indvars.iv.next523 = add nuw nsw i64 %indvars.iv522, 1
  %299 = load i32, i32* %13, align 8, !tbaa !101
  %300 = zext i32 %299 to i64
  %cmp216 = icmp ult i64 %indvars.iv.next523, %300
  br i1 %cmp216, label %for.inc245.for.body217_crit_edge, label %for.inc248, !prof !393

for.inc245.for.body217_crit_edge:                 ; preds = %for.inc245
  %.pre571 = load i32, i32* %m_nTaps, align 4, !tbaa !331
  br label %for.body217

lpad243.loopexit:                                 ; preds = %for.body217
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

lpad243.loopexit.split-lp:                        ; preds = %for.body217.1
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup296

for.inc248:                                       ; preds = %for.inc245
  %phitmp = icmp eq i32 %299, 0
  br i1 %phitmp, label %for.inc248.1, label %for.body217.lr.ph.1, !prof !74

delete.notnull257:                                ; preds = %for.inc248.1
  %301 = bitcast float* %331 to i8*
  call void @_ZdaPv(i8* %301) #26
  br label %for.inc259

for.inc259:                                       ; preds = %for.inc248.1, %delete.notnull257
  %302 = load float*, float** %arrayidx.1, align 8, !tbaa !76
  %isnull256.1 = icmp eq float* %302, null
  br i1 %isnull256.1, label %for.inc259.1, label %delete.notnull257.1

for.body268:                                      ; preds = %for.inc259.1, %for.inc276
  %303 = phi i32 [ %306, %for.inc276 ], [ %316, %for.inc259.1 ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc276 ], [ 0, %for.inc259.1 ]
  %arrayidx272 = getelementptr inbounds float*, float** %170, i64 %indvars.iv
  %304 = load float*, float** %arrayidx272, align 8, !tbaa !76
  %isnull273 = icmp eq float* %304, null
  br i1 %isnull273, label %for.inc276, label %delete.notnull274

delete.notnull274:                                ; preds = %for.body268
  %305 = bitcast float* %304 to i8*
  call void @_ZdaPv(i8* %305) #26
  %.pre572 = load i32, i32* %13, align 8, !tbaa !101
  br label %for.inc276

for.inc276:                                       ; preds = %delete.notnull274, %for.body268
  %306 = phi i32 [ %303, %for.body268 ], [ %.pre572, %delete.notnull274 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %307 = zext i32 %306 to i64
  %cmp267 = icmp ult i64 %indvars.iv.next, %307
  br i1 %cmp267, label %for.body268, label %for.inc284, !prof !393

for.inc284:                                       ; preds = %for.inc259.1, %for.inc276
  call void @_ZdaPv(i8* %call32) #26
  %.pre573 = load i32, i32* %13, align 8, !tbaa !101
  %cmp267453.1 = icmp eq i32 %.pre573, 0
  br i1 %cmp267453.1, label %for.inc284.1, label %for.body268.1, !prof !343

ehcleanup296:                                     ; preds = %lpad243.loopexit.split-lp, %lpad243.loopexit, %lpad138, %lpad128, %lpad125
  %.sink741 = phi { i8*, i32 } [ %243, %lpad128 ], [ %244, %lpad138 ], [ %242, %lpad125 ], [ %lpad.loopexit, %lpad243.loopexit ], [ %lpad.loopexit.split-lp, %lpad243.loopexit.split-lp ]
  %308 = extractvalue { i8*, i32 } %.sink741, 0
  %309 = extractvalue { i8*, i32 } %.sink741, 1
  call void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* nonnull %myEncoder) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %175) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #24
  br label %ehcleanup308

cleanup301:                                       ; preds = %for.inc284.1, %for.body58
  %retval.3 = phi i1 [ true, %for.inc284.1 ], [ false, %for.body58 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #24
  br label %cleanup307

cleanup307:                                       ; preds = %cleanup301, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %retval.4 = phi i1 [ %retval.3, %cleanup301 ], [ false, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit ]
  ret i1 %retval.4

ehcleanup308:                                     ; preds = %ehcleanup296, %if.then.i.i431, %lpad
  %ehselector.slot.3 = phi i32 [ %309, %ehcleanup296 ], [ %7, %lpad ], [ %7, %if.then.i.i431 ]
  %exn.slot.3 = phi i8* [ %308, %ehcleanup296 ], [ %6, %lpad ], [ %6, %if.then.i.i431 ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.3, 0
  %lpad.val317 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.3, 1
  resume { i8*, i32 } %lpad.val317

for.body268.1:                                    ; preds = %for.inc276.1, %for.inc284
  %310 = phi i32 [ %313, %for.inc276.1 ], [ %.pre573, %for.inc284 ]
  %indvars.iv.1 = phi i64 [ %indvars.iv.next.1, %for.inc276.1 ], [ 0, %for.inc284 ]
  %arrayidx272.1 = getelementptr inbounds float*, float** %171, i64 %indvars.iv.1
  %311 = load float*, float** %arrayidx272.1, align 8, !tbaa !76
  %isnull273.1 = icmp eq float* %311, null
  br i1 %isnull273.1, label %for.inc276.1, label %delete.notnull274.1

delete.notnull274.1:                              ; preds = %for.body268.1
  %312 = bitcast float* %311 to i8*
  call void @_ZdaPv(i8* %312) #26
  %.pre574 = load i32, i32* %13, align 8, !tbaa !101
  br label %for.inc276.1

for.inc276.1:                                     ; preds = %delete.notnull274.1, %for.body268.1
  %313 = phi i32 [ %.pre574, %delete.notnull274.1 ], [ %310, %for.body268.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %314 = zext i32 %313 to i64
  %cmp267.1 = icmp ult i64 %indvars.iv.next.1, %314
  br i1 %cmp267.1, label %for.body268.1, label %for.inc284.1, !prof !393

for.inc284.1:                                     ; preds = %for.inc276.1, %for.inc284
  call void @_ZdaPv(i8* %172) #26
  call void @_ZdaPv(i8* nonnull %call140) #26
  call void @_ZN17CAmbisonicEncoderD2Ev(%class.CAmbisonicEncoder* nonnull %myEncoder) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %175) #24
  br label %cleanup301

delete.notnull257.1:                              ; preds = %for.inc259
  %315 = bitcast float* %302 to i8*
  call void @_ZdaPv(i8* %315) #26
  br label %for.inc259.1

for.inc259.1:                                     ; preds = %delete.notnull257.1, %for.inc259
  %316 = load i32, i32* %13, align 8, !tbaa !101
  %cmp267453 = icmp eq i32 %316, 0
  br i1 %cmp267453, label %for.inc284, label %for.body268, !prof !343

for.body217.lr.ph.1:                              ; preds = %for.inc248
  %_M_start.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  br label %for.body217.1

for.body217.1:                                    ; preds = %for.inc245.1, %for.body217.lr.ph.1
  %indvars.iv522.1 = phi i64 [ 0, %for.body217.lr.ph.1 ], [ %indvars.iv.next523.1, %for.inc245.1 ]
  %317 = load i8*, i8** %286, align 8, !tbaa !116
  %arrayidx222.1 = getelementptr inbounds float*, float** %171, i64 %indvars.iv522.1
  %318 = bitcast float** %arrayidx222.1 to i8**
  %319 = load i8*, i8** %318, align 8, !tbaa !76
  %320 = load i32, i32* %m_nTaps, align 4, !tbaa !331
  %conv224.1 = zext i32 %320 to i64
  %mul225.1 = shl nuw nsw i64 %conv224.1, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %317, i8* align 4 %319, i64 %mul225.1, i1 false)
  %321 = load i32, i32* %m_nTaps, align 4, !tbaa !331
  %conv228.1 = zext i32 %321 to i64
  %322 = load float*, float** %.in, align 8, !tbaa !116
  %add.ptr.i443.1 = getelementptr inbounds float, float* %322, i64 %conv228.1
  %323 = bitcast float* %add.ptr.i443.1 to i8*
  %324 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %sub232.1 = sub i32 %324, %321
  %conv233.1 = zext i32 %sub232.1 to i64
  %mul234.1 = shl nuw nsw i64 %conv233.1, 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %323, i8 0, i64 %mul234.1, i1 false)
  %325 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i441605, align 8, !tbaa !76
  %326 = load float*, float** %.in, align 8, !tbaa !116
  %327 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i.1, align 8, !tbaa !390
  %_M_head_impl.i.i.i.i.i.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %327, i64 %indvars.iv522.1, i32 0, i32 0, i32 0, i32 0
  %328 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.1, align 8, !tbaa !76
  invoke void @kiss_fftr(%struct.kiss_fftr_state* %325, float* %326, %struct.kiss_fft_cpx* %328)
          to label %for.inc245.1 unwind label %lpad243.loopexit.split-lp

for.inc245.1:                                     ; preds = %for.body217.1
  %indvars.iv.next523.1 = add nuw nsw i64 %indvars.iv522.1, 1
  %329 = load i32, i32* %13, align 8, !tbaa !101
  %330 = zext i32 %329 to i64
  %cmp216.1 = icmp ult i64 %indvars.iv.next523.1, %330
  br i1 %cmp216.1, label %for.body217.1, label %for.inc248.1, !prof !393

for.inc248.1:                                     ; preds = %for.inc245.1, %for.inc248, %for.cond211.preheader
  %331 = load float*, float** %arrayidx, align 16, !tbaa !76
  %isnull256 = icmp eq float* %331, null
  br i1 %isnull256, label %for.inc259, label %delete.notnull257

for.cond191.preheader.us.us.preheader.1:          ; preds = %for.cond191.for.inc205_crit_edge.us.us
  %wide.trip.count530.1 = zext i32 %202 to i64
  %332 = and i64 %conv137, 4294967288
  %333 = add nsw i64 %332, -8
  %334 = lshr exact i64 %333, 3
  %335 = add nuw nsw i64 %334, 1
  %min.iters.check723 = icmp ult i32 %199, 8
  %n.vec726 = and i64 %conv137, 4294967288
  %broadcast.splatinsert737 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat738 = shufflevector <4 x float> %broadcast.splatinsert737, <4 x float> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert739 = insertelement <4 x float> undef, float %mul183, i32 0
  %broadcast.splat740 = shufflevector <4 x float> %broadcast.splatinsert739, <4 x float> undef, <4 x i32> zeroinitializer
  %xtraiter = and i64 %335, 1
  %336 = icmp eq i64 %333, 0
  %unroll_iter = sub nuw nsw i64 %335, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  %cmp.n730 = icmp eq i64 %n.vec726, %conv137
  br label %for.cond191.preheader.us.us.1

for.cond191.preheader.us.us.1:                    ; preds = %for.cond191.for.inc205_crit_edge.us.us.1, %for.cond191.preheader.us.us.preheader.1
  %indvars.iv528.1 = phi i64 [ 0, %for.cond191.preheader.us.us.preheader.1 ], [ %indvars.iv.next529.1, %for.cond191.for.inc205_crit_edge.us.us.1 ]
  %arrayidx198.us.us.1 = getelementptr inbounds float*, float** %171, i64 %indvars.iv528.1
  %337 = load float*, float** %arrayidx198.us.us.1, align 8, !tbaa !76
  br i1 %min.iters.check723, label %for.body194.us.us.1.preheader, label %vector.ph724

vector.ph724:                                     ; preds = %for.cond191.preheader.us.us.1
  br i1 %336, label %middle.block721.unr-lcssa, label %vector.body720

vector.body720:                                   ; preds = %vector.body720, %vector.ph724
  %index727 = phi i64 [ %index.next728.1, %vector.body720 ], [ 0, %vector.ph724 ]
  %niter = phi i64 [ %niter.nsub.1, %vector.body720 ], [ %unroll_iter, %vector.ph724 ]
  %338 = getelementptr inbounds float, float* %337, i64 %index727
  %339 = bitcast float* %338 to <4 x float>*
  %wide.load735 = load <4 x float>, <4 x float>* %339, align 4, !tbaa !83
  %340 = getelementptr inbounds float, float* %338, i64 4
  %341 = bitcast float* %340 to <4 x float>*
  %wide.load736 = load <4 x float>, <4 x float>* %341, align 4, !tbaa !83
  %342 = fmul <4 x float> %broadcast.splat738, %wide.load735
  %343 = fmul <4 x float> %broadcast.splat740, %wide.load736
  %344 = bitcast float* %338 to <4 x float>*
  store <4 x float> %342, <4 x float>* %344, align 4, !tbaa !83
  %345 = bitcast float* %340 to <4 x float>*
  store <4 x float> %343, <4 x float>* %345, align 4, !tbaa !83
  %index.next728 = or i64 %index727, 8
  %346 = getelementptr inbounds float, float* %337, i64 %index.next728
  %347 = bitcast float* %346 to <4 x float>*
  %wide.load735.1 = load <4 x float>, <4 x float>* %347, align 4, !tbaa !83
  %348 = getelementptr inbounds float, float* %346, i64 4
  %349 = bitcast float* %348 to <4 x float>*
  %wide.load736.1 = load <4 x float>, <4 x float>* %349, align 4, !tbaa !83
  %350 = fmul <4 x float> %broadcast.splat738, %wide.load735.1
  %351 = fmul <4 x float> %broadcast.splat740, %wide.load736.1
  %352 = bitcast float* %346 to <4 x float>*
  store <4 x float> %350, <4 x float>* %352, align 4, !tbaa !83
  %353 = bitcast float* %348 to <4 x float>*
  store <4 x float> %351, <4 x float>* %353, align 4, !tbaa !83
  %index.next728.1 = add i64 %index727, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block721.unr-lcssa, label %vector.body720, !llvm.loop !394

middle.block721.unr-lcssa:                        ; preds = %vector.body720, %vector.ph724
  %index727.unr = phi i64 [ 0, %vector.ph724 ], [ %index.next728.1, %vector.body720 ]
  br i1 %lcmp.mod, label %middle.block721, label %vector.body720.epil

vector.body720.epil:                              ; preds = %middle.block721.unr-lcssa
  %354 = getelementptr inbounds float, float* %337, i64 %index727.unr
  %355 = bitcast float* %354 to <4 x float>*
  %wide.load735.epil = load <4 x float>, <4 x float>* %355, align 4, !tbaa !83
  %356 = getelementptr inbounds float, float* %354, i64 4
  %357 = bitcast float* %356 to <4 x float>*
  %wide.load736.epil = load <4 x float>, <4 x float>* %357, align 4, !tbaa !83
  %358 = fmul <4 x float> %broadcast.splat738, %wide.load735.epil
  %359 = fmul <4 x float> %broadcast.splat740, %wide.load736.epil
  %360 = bitcast float* %354 to <4 x float>*
  store <4 x float> %358, <4 x float>* %360, align 4, !tbaa !83
  %361 = bitcast float* %356 to <4 x float>*
  store <4 x float> %359, <4 x float>* %361, align 4, !tbaa !83
  br label %middle.block721

middle.block721:                                  ; preds = %vector.body720.epil, %middle.block721.unr-lcssa
  br i1 %cmp.n730, label %for.cond191.for.inc205_crit_edge.us.us.1, label %for.body194.us.us.1.preheader

for.body194.us.us.1.preheader:                    ; preds = %middle.block721, %for.cond191.preheader.us.us.1
  %indvars.iv526.1.ph = phi i64 [ 0, %for.cond191.preheader.us.us.1 ], [ %n.vec726, %middle.block721 ]
  br label %for.body194.us.us.1

for.body194.us.us.1:                              ; preds = %for.body194.us.us.1, %for.body194.us.us.1.preheader
  %indvars.iv526.1 = phi i64 [ %indvars.iv.next527.1, %for.body194.us.us.1 ], [ %indvars.iv526.1.ph, %for.body194.us.us.1.preheader ]
  %arrayidx200.us.us.1 = getelementptr inbounds float, float* %337, i64 %indvars.iv526.1
  %362 = load float, float* %arrayidx200.us.us.1, align 4, !tbaa !83
  %mul201.us.us.1 = fmul float %mul183, %362
  store float %mul201.us.us.1, float* %arrayidx200.us.us.1, align 4, !tbaa !83
  %indvars.iv.next527.1 = add nuw nsw i64 %indvars.iv526.1, 1
  %exitcond.1 = icmp eq i64 %indvars.iv.next527.1, %conv137
  br i1 %exitcond.1, label %for.cond191.for.inc205_crit_edge.us.us.1, label %for.body194.us.us.1, !prof !386, !llvm.loop !395

for.cond191.for.inc205_crit_edge.us.us.1:         ; preds = %for.body194.us.us.1, %middle.block721
  %indvars.iv.next529.1 = add nuw nsw i64 %indvars.iv528.1, 1
  %exitcond531.1 = icmp eq i64 %indvars.iv.next529.1, %wide.trip.count530.1
  br i1 %exitcond531.1, label %for.cond211.preheader, label %for.cond191.preheader.us.us.1, !prof !343

for.body38.us.1:                                  ; preds = %for.body38.us.1, %for.cond35.for.inc49_crit_edge.us
  %indvars.iv558.1 = phi i64 [ 0, %for.cond35.for.inc49_crit_edge.us ], [ %indvars.iv.next559.1, %for.body38.us.1 ]
  %call41.us.1 = call i8* @_Znam(i64 %20) #25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %call41.us.1, i8 0, i64 %20, i1 false)
  %arrayidx45.us.1 = getelementptr inbounds float*, float** %29, i64 %indvars.iv558.1
  %363 = bitcast float** %arrayidx45.us.1 to i8**
  store i8* %call41.us.1, i8** %363, align 8, !tbaa !76
  %indvars.iv.next559.1 = add nuw nsw i64 %indvars.iv558.1, 1
  %exitcond561.1 = icmp eq i64 %indvars.iv.next559.1, %conv31
  br i1 %exitcond561.1, label %for.cond52.preheader, label %for.body38.us.1, !prof !343
}

; Function Attrs: uwtable
define %class.HRTF* @_ZN22CAmbisonicBinauralizer7getHRTFEjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%class.CAmbisonicBinauralizer* nocapture readnone %this, i32 %nSampleRate, %"class.std::__cxx11::basic_string"* nocapture readnone %HRTFPath) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !61 {
entry:
  %call = tail call i8* @_Znwm(i64 16) #25
  %0 = bitcast i8* %call to i32 (...)***
  %i_sampleRate2.i.i = getelementptr inbounds i8, i8* %call, i64 8
  %1 = bitcast i8* %i_sampleRate2.i.i to i32*
  store i32 %nSampleRate, i32* %1, align 8, !tbaa !62
  %i_len.i.i = getelementptr inbounds i8, i8* %call, i64 12
  %2 = bitcast i8* %i_len.i.i to i32*
  store i32 0, i32* %2, align 4, !tbaa !67
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8MIT_HRTF, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %call.i10 = invoke i32 @mit_hrtf_availability(i32 0, i32 0, i32 %nSampleRate)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store i32 %call.i10, i32* %2, align 4, !tbaa !67
  %3 = bitcast i8* %call to %class.HRTF*
  %cmp.i = icmp eq i32 %call.i10, 0
  br i1 %cmp.i, label %delete.notnull, label %cleanup, !prof !330

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  tail call void @_ZdlPv(i8* nonnull %call) #26
  resume { i8*, i32 } %4

delete.notnull:                                   ; preds = %invoke.cont
  %5 = bitcast i8* %call to void (%class.HRTF*)***
  %vtable = load void (%class.HRTF*)**, void (%class.HRTF*)*** %5, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.HRTF*)*, void (%class.HRTF*)** %vtable, i64 1
  %6 = load void (%class.HRTF*)*, void (%class.HRTF*)** %vfn, align 8
  tail call void %6(%class.HRTF* nonnull %3) #24
  br label %cleanup

cleanup:                                          ; preds = %delete.notnull, %invoke.cont
  %retval.0 = phi %class.HRTF* [ null, %delete.notnull ], [ %3, %invoke.cont ]
  ret %class.HRTF* %retval.0
}

; Function Attrs: nounwind uwtable
define void @_ZN22CAmbisonicBinauralizer5ResetEv(%class.CAmbisonicBinauralizer* nocapture readonly %this) unnamed_addr #7 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !103 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !116
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %2 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !338
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %_M_start.i8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %3 = bitcast float** %_M_start.i8 to i8**
  %4 = load i8*, i8** %3, align 8, !tbaa !116
  %5 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !338
  %conv6 = zext i32 %5 to i64
  %mul7 = shl nuw nsw i64 %conv6, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 %mul7, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone uwtable
define void @_ZN22CAmbisonicBinauralizer7RefreshEv(%class.CAmbisonicBinauralizer* nocapture %this) unnamed_addr #8 align 2 !prof !103 {
entry:
  ret void
}

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* nocapture readonly %this, %class.CBFormat* nocapture readonly %pBFSrc, float** nocapture readonly %ppfDst) local_unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !103 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %m_nFFTSize208 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  %1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  %_M_start.i522 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0
  %2 = bitcast float** %_M_start.i522 to i8**
  %_M_head_impl.i.i.i.i.i.i520 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %pBFSrc, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize220 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i517 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i515 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %m_nFFTBins239 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i490 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %m_fFFTScaler331 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 6
  %m_nOverlapLength347 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %3 = load i8*, i8** %0, align 8, !tbaa !116
  %4 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !340
  %conv209 = zext i32 %4 to i64
  %mul210 = shl nuw nsw i64 %conv209, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 %mul210, i1 false)
  %5 = load i32, i32* %1, align 8, !tbaa !101
  %cmp213527 = icmp eq i32 %5, 0
  br i1 %cmp213527, label %entry.for.cond327.preheader_crit_edge, label %for.body214.lr.ph

entry.for.cond327.preheader_crit_edge:            ; preds = %entry
  %.pre = load i32, i32* %m_nFFTSize208, align 8, !tbaa !340
  br label %for.cond327.preheader

for.body214.lr.ph:                                ; preds = %entry
  %_M_start.i511 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  br label %for.body214

for.cond327.preheader:                            ; preds = %for.inc324, %entry.for.cond327.preheader_crit_edge
  %6 = phi i32 [ %.pre, %entry.for.cond327.preheader_crit_edge ], [ %37, %for.inc324 ]
  %cmp329529 = icmp eq i32 %6, 0
  br i1 %cmp329529, label %for.cond327.preheader.for.end338_crit_edge, label %for.body330.lr.ph

for.cond327.preheader.for.end338_crit_edge:       ; preds = %for.cond327.preheader
  %.pre546 = load i8*, i8** %0, align 8, !tbaa !116
  br label %for.end338

for.body330.lr.ph:                                ; preds = %for.cond327.preheader
  %7 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %8 = zext i32 %6 to i64
  %9 = bitcast float* %7 to i8*
  %10 = add nsw i64 %8, -1
  %xtraiter585 = and i64 %8, 3
  %11 = icmp ult i64 %10, 3
  br i1 %11, label %for.end338.loopexit.unr-lcssa, label %for.body330.lr.ph.new

for.body330.lr.ph.new:                            ; preds = %for.body330.lr.ph
  %unroll_iter588 = sub nsw i64 %8, %xtraiter585
  br label %for.body330

for.body214:                                      ; preds = %for.inc324, %for.body214.lr.ph
  %indvars.iv538 = phi i64 [ 0, %for.body214.lr.ph ], [ %indvars.iv.next539, %for.inc324 ]
  %12 = load i8*, i8** %2, align 8, !tbaa !116
  %13 = load float**, float*** %_M_head_impl.i.i.i.i.i.i520, align 8, !tbaa !76
  %arrayidx.i521 = getelementptr inbounds float*, float** %13, i64 %indvars.iv538
  %14 = bitcast float** %arrayidx.i521 to i8**
  %15 = load i8*, i8** %14, align 8, !tbaa !76
  %16 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !337
  %conv221 = zext i32 %16 to i64
  %mul222 = shl nuw nsw i64 %conv221, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %15, i64 %mul222, i1 false)
  %17 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !337
  %conv225 = zext i32 %17 to i64
  %18 = load float*, float** %_M_start.i522, align 8, !tbaa !116
  %add.ptr.i519 = getelementptr inbounds float, float* %18, i64 %conv225
  %19 = bitcast float* %add.ptr.i519 to i8*
  %20 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !340
  %sub229 = sub i32 %20, %17
  %conv230 = zext i32 %sub229 to i64
  %mul231 = shl nuw nsw i64 %conv230, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %19, i8 0, i64 %mul231, i1 false)
  %21 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i517, align 8, !tbaa !76
  %22 = load float*, float** %_M_start.i522, align 8, !tbaa !116
  %23 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !76
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %21, float* %22, %struct.kiss_fft_cpx* %23)
  %24 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !341
  %cmp240523 = icmp eq i32 %24, 0
  br i1 %cmp240523, label %for.end303, label %for.body241.lr.ph

for.body241.lr.ph:                                ; preds = %for.body214
  %25 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !76
  %26 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i511, align 8, !tbaa !390
  %_M_head_impl.i.i.i.i.i.i509 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %26, i64 %indvars.iv538, i32 0, i32 0, i32 0, i32 0
  %27 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i509, align 8, !tbaa !76
  br label %for.body241

for.body241:                                      ; preds = %for.body241, %for.body241.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body241.lr.ph ], [ %indvars.iv.next, %for.body241 ]
  %r245 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv, i32 0
  %28 = load float, float* %r245, align 4, !tbaa !263
  %r253 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %27, i64 %indvars.iv, i32 0
  %29 = load float, float* %r253, align 4, !tbaa !263
  %mul254 = fmul float %28, %29
  %i258 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %25, i64 %indvars.iv, i32 1
  %30 = load float, float* %i258, align 4, !tbaa !265
  %i266 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %27, i64 %indvars.iv, i32 1
  %31 = load float, float* %i266, align 4, !tbaa !265
  %mul267 = fmul float %30, %31
  %sub268 = fsub float %mul254, %mul267
  %mul282 = fmul float %28, %31
  %mul295 = fmul float %29, %30
  %add296 = fadd float %mul295, %mul282
  store float %sub268, float* %r245, align 4
  store float %add296, float* %i258, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %32 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !341
  %33 = zext i32 %32 to i64
  %cmp240 = icmp ult i64 %indvars.iv.next, %33
  br i1 %cmp240, label %for.body241, label %for.end303

for.end303:                                       ; preds = %for.body241, %for.body214
  %34 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i490, align 8, !tbaa !76
  %35 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !76
  %36 = load float*, float** %_M_start.i522, align 8, !tbaa !116
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %34, %struct.kiss_fft_cpx* %35, float* %36)
  %37 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !340
  %cmp312525 = icmp eq i32 %37, 0
  br i1 %cmp312525, label %for.inc324, label %for.body313.lr.ph

for.body313.lr.ph:                                ; preds = %for.end303
  %38 = load float*, float** %_M_start.i522, align 8, !tbaa !116
  %39 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %40 = zext i32 %37 to i64
  %41 = add nsw i64 %40, -1
  %xtraiter595 = and i64 %40, 3
  %42 = icmp ult i64 %41, 3
  br i1 %42, label %for.inc324.loopexit.unr-lcssa, label %for.body313.lr.ph.new

for.body313.lr.ph.new:                            ; preds = %for.body313.lr.ph
  %unroll_iter598 = sub nsw i64 %40, %xtraiter595
  br label %for.body313

for.body313:                                      ; preds = %for.body313, %for.body313.lr.ph.new
  %indvars.iv536 = phi i64 [ 0, %for.body313.lr.ph.new ], [ %indvars.iv.next537.3, %for.body313 ]
  %niter599 = phi i64 [ %unroll_iter598, %for.body313.lr.ph.new ], [ %niter599.nsub.3, %for.body313 ]
  %add.ptr.i488 = getelementptr inbounds float, float* %38, i64 %indvars.iv536
  %43 = load float, float* %add.ptr.i488, align 4, !tbaa !83
  %add.ptr.i486 = getelementptr inbounds float, float* %39, i64 %indvars.iv536
  %44 = load float, float* %add.ptr.i486, align 4, !tbaa !83
  %add320 = fadd float %43, %44
  store float %add320, float* %add.ptr.i486, align 4, !tbaa !83
  %indvars.iv.next537 = or i64 %indvars.iv536, 1
  %add.ptr.i488.1601 = getelementptr inbounds float, float* %38, i64 %indvars.iv.next537
  %45 = load float, float* %add.ptr.i488.1601, align 4, !tbaa !83
  %add.ptr.i486.1602 = getelementptr inbounds float, float* %39, i64 %indvars.iv.next537
  %46 = load float, float* %add.ptr.i486.1602, align 4, !tbaa !83
  %add320.1603 = fadd float %45, %46
  store float %add320.1603, float* %add.ptr.i486.1602, align 4, !tbaa !83
  %indvars.iv.next537.1604 = or i64 %indvars.iv536, 2
  %add.ptr.i488.2 = getelementptr inbounds float, float* %38, i64 %indvars.iv.next537.1604
  %47 = load float, float* %add.ptr.i488.2, align 4, !tbaa !83
  %add.ptr.i486.2 = getelementptr inbounds float, float* %39, i64 %indvars.iv.next537.1604
  %48 = load float, float* %add.ptr.i486.2, align 4, !tbaa !83
  %add320.2 = fadd float %47, %48
  store float %add320.2, float* %add.ptr.i486.2, align 4, !tbaa !83
  %indvars.iv.next537.2 = or i64 %indvars.iv536, 3
  %add.ptr.i488.3 = getelementptr inbounds float, float* %38, i64 %indvars.iv.next537.2
  %49 = load float, float* %add.ptr.i488.3, align 4, !tbaa !83
  %add.ptr.i486.3 = getelementptr inbounds float, float* %39, i64 %indvars.iv.next537.2
  %50 = load float, float* %add.ptr.i486.3, align 4, !tbaa !83
  %add320.3 = fadd float %49, %50
  store float %add320.3, float* %add.ptr.i486.3, align 4, !tbaa !83
  %indvars.iv.next537.3 = add nuw nsw i64 %indvars.iv536, 4
  %niter599.nsub.3 = add i64 %niter599, -4
  %niter599.ncmp.3 = icmp eq i64 %niter599.nsub.3, 0
  br i1 %niter599.ncmp.3, label %for.inc324.loopexit.unr-lcssa, label %for.body313

for.inc324.loopexit.unr-lcssa:                    ; preds = %for.body313, %for.body313.lr.ph
  %indvars.iv536.unr = phi i64 [ 0, %for.body313.lr.ph ], [ %indvars.iv.next537.3, %for.body313 ]
  %lcmp.mod597 = icmp eq i64 %xtraiter595, 0
  br i1 %lcmp.mod597, label %for.inc324, label %for.body313.epil

for.body313.epil:                                 ; preds = %for.body313.epil, %for.inc324.loopexit.unr-lcssa
  %indvars.iv536.epil = phi i64 [ %indvars.iv.next537.epil, %for.body313.epil ], [ %indvars.iv536.unr, %for.inc324.loopexit.unr-lcssa ]
  %epil.iter596 = phi i64 [ %epil.iter596.sub, %for.body313.epil ], [ %xtraiter595, %for.inc324.loopexit.unr-lcssa ]
  %add.ptr.i488.epil = getelementptr inbounds float, float* %38, i64 %indvars.iv536.epil
  %51 = load float, float* %add.ptr.i488.epil, align 4, !tbaa !83
  %add.ptr.i486.epil = getelementptr inbounds float, float* %39, i64 %indvars.iv536.epil
  %52 = load float, float* %add.ptr.i486.epil, align 4, !tbaa !83
  %add320.epil = fadd float %51, %52
  store float %add320.epil, float* %add.ptr.i486.epil, align 4, !tbaa !83
  %indvars.iv.next537.epil = add nuw nsw i64 %indvars.iv536.epil, 1
  %epil.iter596.sub = add i64 %epil.iter596, -1
  %epil.iter596.cmp = icmp eq i64 %epil.iter596.sub, 0
  br i1 %epil.iter596.cmp, label %for.inc324, label %for.body313.epil, !llvm.loop !396

for.inc324:                                       ; preds = %for.body313.epil, %for.inc324.loopexit.unr-lcssa, %for.end303
  %indvars.iv.next539 = add nuw nsw i64 %indvars.iv538, 1
  %53 = load i32, i32* %1, align 8, !tbaa !101
  %54 = zext i32 %53 to i64
  %cmp213 = icmp ult i64 %indvars.iv.next539, %54
  br i1 %cmp213, label %for.body214, label %for.cond327.preheader

for.body330:                                      ; preds = %for.body330, %for.body330.lr.ph.new
  %indvars.iv540 = phi i64 [ 0, %for.body330.lr.ph.new ], [ %indvars.iv.next541.3, %for.body330 ]
  %niter589 = phi i64 [ %unroll_iter588, %for.body330.lr.ph.new ], [ %niter589.nsub.3, %for.body330 ]
  %55 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484 = getelementptr inbounds float, float* %7, i64 %indvars.iv540
  %56 = load float, float* %add.ptr.i484, align 4, !tbaa !83
  %mul335 = fmul float %55, %56
  store float %mul335, float* %add.ptr.i484, align 4, !tbaa !83
  %indvars.iv.next541 = or i64 %indvars.iv540, 1
  %57 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.1591 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next541
  %58 = load float, float* %add.ptr.i484.1591, align 4, !tbaa !83
  %mul335.1592 = fmul float %57, %58
  store float %mul335.1592, float* %add.ptr.i484.1591, align 4, !tbaa !83
  %indvars.iv.next541.1593 = or i64 %indvars.iv540, 2
  %59 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next541.1593
  %60 = load float, float* %add.ptr.i484.2, align 4, !tbaa !83
  %mul335.2 = fmul float %59, %60
  store float %mul335.2, float* %add.ptr.i484.2, align 4, !tbaa !83
  %indvars.iv.next541.2 = or i64 %indvars.iv540, 3
  %61 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next541.2
  %62 = load float, float* %add.ptr.i484.3, align 4, !tbaa !83
  %mul335.3 = fmul float %61, %62
  store float %mul335.3, float* %add.ptr.i484.3, align 4, !tbaa !83
  %indvars.iv.next541.3 = add nuw nsw i64 %indvars.iv540, 4
  %niter589.nsub.3 = add i64 %niter589, -4
  %niter589.ncmp.3 = icmp eq i64 %niter589.nsub.3, 0
  br i1 %niter589.ncmp.3, label %for.end338.loopexit.unr-lcssa, label %for.body330

for.end338.loopexit.unr-lcssa:                    ; preds = %for.body330, %for.body330.lr.ph
  %indvars.iv540.unr = phi i64 [ 0, %for.body330.lr.ph ], [ %indvars.iv.next541.3, %for.body330 ]
  %lcmp.mod587 = icmp eq i64 %xtraiter585, 0
  br i1 %lcmp.mod587, label %for.end338, label %for.body330.epil

for.body330.epil:                                 ; preds = %for.body330.epil, %for.end338.loopexit.unr-lcssa
  %indvars.iv540.epil = phi i64 [ %indvars.iv.next541.epil, %for.body330.epil ], [ %indvars.iv540.unr, %for.end338.loopexit.unr-lcssa ]
  %epil.iter586 = phi i64 [ %epil.iter586.sub, %for.body330.epil ], [ %xtraiter585, %for.end338.loopexit.unr-lcssa ]
  %63 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.epil = getelementptr inbounds float, float* %7, i64 %indvars.iv540.epil
  %64 = load float, float* %add.ptr.i484.epil, align 4, !tbaa !83
  %mul335.epil = fmul float %63, %64
  store float %mul335.epil, float* %add.ptr.i484.epil, align 4, !tbaa !83
  %indvars.iv.next541.epil = add nuw nsw i64 %indvars.iv540.epil, 1
  %epil.iter586.sub = add i64 %epil.iter586, -1
  %epil.iter586.cmp = icmp eq i64 %epil.iter586.sub, 0
  br i1 %epil.iter586.cmp, label %for.end338, label %for.body330.epil, !llvm.loop !397

for.end338:                                       ; preds = %for.body330.epil, %for.end338.loopexit.unr-lcssa, %for.cond327.preheader.for.end338_crit_edge
  %65 = phi i8* [ %.pre546, %for.cond327.preheader.for.end338_crit_edge ], [ %9, %for.body330.epil ], [ %9, %for.end338.loopexit.unr-lcssa ]
  %66 = bitcast float** %ppfDst to i8**
  %67 = load i8*, i8** %66, align 8, !tbaa !76
  %68 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !337
  %conv344 = zext i32 %68 to i64
  %mul345 = shl nuw nsw i64 %conv344, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %65, i64 %mul345, i1 false)
  %69 = load i32, i32* %m_nOverlapLength347, align 4, !tbaa !338
  %cmp348531 = icmp eq i32 %69, 0
  %arrayidx352 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0
  br i1 %cmp348531, label %for.end338.for.end362_crit_edge, label %for.body349.lr.ph

for.end338.for.end362_crit_edge:                  ; preds = %for.end338
  %.phi.trans.insert = bitcast %"class.std::vector.0"* %arrayidx352 to i8**
  %.pre547 = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !116
  br label %for.end362

for.body349.lr.ph:                                ; preds = %for.end338
  %_M_start.i480 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx352, i64 0, i32 0, i32 0, i32 0
  %70 = load float*, float** %_M_start.i480, align 8, !tbaa !116
  %71 = load float*, float** %ppfDst, align 8, !tbaa !76
  %72 = zext i32 %69 to i64
  %73 = bitcast float* %70 to i8*
  %74 = add nsw i64 %72, -1
  %xtraiter574 = and i64 %72, 3
  %75 = icmp ult i64 %74, 3
  br i1 %75, label %for.end362.loopexit.unr-lcssa, label %for.body349.lr.ph.new

for.body349.lr.ph.new:                            ; preds = %for.body349.lr.ph
  %unroll_iter577 = sub nsw i64 %72, %xtraiter574
  br label %for.body349

for.body349:                                      ; preds = %for.body349, %for.body349.lr.ph.new
  %indvars.iv542 = phi i64 [ 0, %for.body349.lr.ph.new ], [ %indvars.iv.next543.3, %for.body349 ]
  %niter578 = phi i64 [ %unroll_iter577, %for.body349.lr.ph.new ], [ %niter578.nsub.3, %for.body349 ]
  %add.ptr.i481 = getelementptr inbounds float, float* %70, i64 %indvars.iv542
  %76 = load float, float* %add.ptr.i481, align 4, !tbaa !83
  %arrayidx358 = getelementptr inbounds float, float* %71, i64 %indvars.iv542
  %77 = load float, float* %arrayidx358, align 4, !tbaa !83
  %add359 = fadd float %76, %77
  store float %add359, float* %arrayidx358, align 4, !tbaa !83
  %indvars.iv.next543 = or i64 %indvars.iv542, 1
  %add.ptr.i481.1580 = getelementptr inbounds float, float* %70, i64 %indvars.iv.next543
  %78 = load float, float* %add.ptr.i481.1580, align 4, !tbaa !83
  %arrayidx358.1581 = getelementptr inbounds float, float* %71, i64 %indvars.iv.next543
  %79 = load float, float* %arrayidx358.1581, align 4, !tbaa !83
  %add359.1582 = fadd float %78, %79
  store float %add359.1582, float* %arrayidx358.1581, align 4, !tbaa !83
  %indvars.iv.next543.1583 = or i64 %indvars.iv542, 2
  %add.ptr.i481.2 = getelementptr inbounds float, float* %70, i64 %indvars.iv.next543.1583
  %80 = load float, float* %add.ptr.i481.2, align 4, !tbaa !83
  %arrayidx358.2 = getelementptr inbounds float, float* %71, i64 %indvars.iv.next543.1583
  %81 = load float, float* %arrayidx358.2, align 4, !tbaa !83
  %add359.2 = fadd float %80, %81
  store float %add359.2, float* %arrayidx358.2, align 4, !tbaa !83
  %indvars.iv.next543.2 = or i64 %indvars.iv542, 3
  %add.ptr.i481.3 = getelementptr inbounds float, float* %70, i64 %indvars.iv.next543.2
  %82 = load float, float* %add.ptr.i481.3, align 4, !tbaa !83
  %arrayidx358.3 = getelementptr inbounds float, float* %71, i64 %indvars.iv.next543.2
  %83 = load float, float* %arrayidx358.3, align 4, !tbaa !83
  %add359.3 = fadd float %82, %83
  store float %add359.3, float* %arrayidx358.3, align 4, !tbaa !83
  %indvars.iv.next543.3 = add nuw nsw i64 %indvars.iv542, 4
  %niter578.nsub.3 = add i64 %niter578, -4
  %niter578.ncmp.3 = icmp eq i64 %niter578.nsub.3, 0
  br i1 %niter578.ncmp.3, label %for.end362.loopexit.unr-lcssa, label %for.body349

for.end362.loopexit.unr-lcssa:                    ; preds = %for.body349, %for.body349.lr.ph
  %indvars.iv542.unr = phi i64 [ 0, %for.body349.lr.ph ], [ %indvars.iv.next543.3, %for.body349 ]
  %lcmp.mod576 = icmp eq i64 %xtraiter574, 0
  br i1 %lcmp.mod576, label %for.end362.loopexit, label %for.body349.epil

for.body349.epil:                                 ; preds = %for.body349.epil, %for.end362.loopexit.unr-lcssa
  %indvars.iv542.epil = phi i64 [ %indvars.iv.next543.epil, %for.body349.epil ], [ %indvars.iv542.unr, %for.end362.loopexit.unr-lcssa ]
  %epil.iter575 = phi i64 [ %epil.iter575.sub, %for.body349.epil ], [ %xtraiter574, %for.end362.loopexit.unr-lcssa ]
  %add.ptr.i481.epil = getelementptr inbounds float, float* %70, i64 %indvars.iv542.epil
  %84 = load float, float* %add.ptr.i481.epil, align 4, !tbaa !83
  %arrayidx358.epil = getelementptr inbounds float, float* %71, i64 %indvars.iv542.epil
  %85 = load float, float* %arrayidx358.epil, align 4, !tbaa !83
  %add359.epil = fadd float %84, %85
  store float %add359.epil, float* %arrayidx358.epil, align 4, !tbaa !83
  %indvars.iv.next543.epil = add nuw nsw i64 %indvars.iv542.epil, 1
  %epil.iter575.sub = add i64 %epil.iter575, -1
  %epil.iter575.cmp = icmp eq i64 %epil.iter575.sub, 0
  br i1 %epil.iter575.cmp, label %for.end362.loopexit, label %for.body349.epil, !llvm.loop !398

for.end362.loopexit:                              ; preds = %for.body349.epil, %for.end362.loopexit.unr-lcssa
  %phitmp = zext i32 %69 to i64
  %phitmp555 = shl nuw nsw i64 %phitmp, 2
  br label %for.end362

for.end362:                                       ; preds = %for.end362.loopexit, %for.end338.for.end362_crit_edge
  %86 = phi i8* [ %.pre547, %for.end338.for.end362_crit_edge ], [ %73, %for.end362.loopexit ]
  %.lcssa = phi i64 [ 0, %for.end338.for.end362_crit_edge ], [ %phitmp555, %for.end362.loopexit ]
  %87 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !337
  %conv369 = zext i32 %87 to i64
  %88 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i = getelementptr inbounds float, float* %88, i64 %conv369
  %89 = bitcast float* %add.ptr.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* nonnull align 4 %89, i64 %.lcssa, i1 false)
  %90 = load i8*, i8** %0, align 8, !tbaa !116
  %91 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !340
  %conv209.1 = zext i32 %91 to i64
  %mul210.1 = shl nuw nsw i64 %conv209.1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %90, i8 0, i64 %mul210.1, i1 false)
  %92 = load i32, i32* %1, align 8, !tbaa !101
  %cmp213527.1 = icmp eq i32 %92, 0
  br i1 %cmp213527.1, label %for.end362.for.cond327.preheader.1_crit_edge, label %for.body214.lr.ph.1

for.end362.for.cond327.preheader.1_crit_edge:     ; preds = %for.end362
  %.pre548 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !340
  br label %for.cond327.preheader.1

for.body214.lr.ph.1:                              ; preds = %for.end362
  %_M_start.i511.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  br label %for.body214.1

for.body214.1:                                    ; preds = %for.inc324.1, %for.body214.lr.ph.1
  %indvars.iv538.1 = phi i64 [ 0, %for.body214.lr.ph.1 ], [ %indvars.iv.next539.1, %for.inc324.1 ]
  %93 = load i8*, i8** %2, align 8, !tbaa !116
  %94 = load float**, float*** %_M_head_impl.i.i.i.i.i.i520, align 8, !tbaa !76
  %arrayidx.i521.1 = getelementptr inbounds float*, float** %94, i64 %indvars.iv538.1
  %95 = bitcast float** %arrayidx.i521.1 to i8**
  %96 = load i8*, i8** %95, align 8, !tbaa !76
  %97 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !337
  %conv221.1 = zext i32 %97 to i64
  %mul222.1 = shl nuw nsw i64 %conv221.1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %96, i64 %mul222.1, i1 false)
  %98 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !337
  %conv225.1 = zext i32 %98 to i64
  %99 = load float*, float** %_M_start.i522, align 8, !tbaa !116
  %add.ptr.i519.1 = getelementptr inbounds float, float* %99, i64 %conv225.1
  %100 = bitcast float* %add.ptr.i519.1 to i8*
  %101 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !340
  %sub229.1 = sub i32 %101, %98
  %conv230.1 = zext i32 %sub229.1 to i64
  %mul231.1 = shl nuw nsw i64 %conv230.1, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %100, i8 0, i64 %mul231.1, i1 false)
  %102 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i517, align 8, !tbaa !76
  %103 = load float*, float** %_M_start.i522, align 8, !tbaa !116
  %104 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !76
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %102, float* %103, %struct.kiss_fft_cpx* %104)
  %105 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !341
  %cmp240523.1 = icmp eq i32 %105, 0
  br i1 %cmp240523.1, label %for.end303.1, label %for.body241.lr.ph.1

for.body241.lr.ph.1:                              ; preds = %for.body214.1
  %106 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !76
  %107 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i511.1, align 8, !tbaa !390
  %_M_head_impl.i.i.i.i.i.i509.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %107, i64 %indvars.iv538.1, i32 0, i32 0, i32 0, i32 0
  %108 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i509.1, align 8, !tbaa !76
  br label %for.body241.1

for.body241.1:                                    ; preds = %for.body241.1, %for.body241.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body241.lr.ph.1 ], [ %indvars.iv.next.1, %for.body241.1 ]
  %r245.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %106, i64 %indvars.iv.1, i32 0
  %109 = load float, float* %r245.1, align 4, !tbaa !263
  %r253.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %108, i64 %indvars.iv.1, i32 0
  %110 = load float, float* %r253.1, align 4, !tbaa !263
  %mul254.1 = fmul float %109, %110
  %i258.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %106, i64 %indvars.iv.1, i32 1
  %111 = load float, float* %i258.1, align 4, !tbaa !265
  %i266.1 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %108, i64 %indvars.iv.1, i32 1
  %112 = load float, float* %i266.1, align 4, !tbaa !265
  %mul267.1 = fmul float %111, %112
  %sub268.1 = fsub float %mul254.1, %mul267.1
  %mul282.1 = fmul float %109, %112
  %mul295.1 = fmul float %110, %111
  %add296.1 = fadd float %mul295.1, %mul282.1
  store float %sub268.1, float* %r245.1, align 4
  store float %add296.1, float* %i258.1, align 4
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %113 = load i32, i32* %m_nFFTBins239, align 4, !tbaa !341
  %114 = zext i32 %113 to i64
  %cmp240.1 = icmp ult i64 %indvars.iv.next.1, %114
  br i1 %cmp240.1, label %for.body241.1, label %for.end303.1

for.end303.1:                                     ; preds = %for.body241.1, %for.body214.1
  %115 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i490, align 8, !tbaa !76
  %116 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i515, align 8, !tbaa !76
  %117 = load float*, float** %_M_start.i522, align 8, !tbaa !116
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %115, %struct.kiss_fft_cpx* %116, float* %117)
  %118 = load i32, i32* %m_nFFTSize208, align 8, !tbaa !340
  %cmp312525.1 = icmp eq i32 %118, 0
  br i1 %cmp312525.1, label %for.inc324.1, label %for.body313.lr.ph.1

for.body313.lr.ph.1:                              ; preds = %for.end303.1
  %119 = load float*, float** %_M_start.i522, align 8, !tbaa !116
  %120 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %121 = zext i32 %118 to i64
  %122 = add nsw i64 %121, -1
  %xtraiter569 = and i64 %121, 3
  %123 = icmp ult i64 %122, 3
  br i1 %123, label %for.inc324.1.loopexit.unr-lcssa, label %for.body313.lr.ph.1.new

for.body313.lr.ph.1.new:                          ; preds = %for.body313.lr.ph.1
  %unroll_iter572 = sub nsw i64 %121, %xtraiter569
  br label %for.body313.1

for.body313.1:                                    ; preds = %for.body313.1, %for.body313.lr.ph.1.new
  %indvars.iv536.1 = phi i64 [ 0, %for.body313.lr.ph.1.new ], [ %indvars.iv.next537.1.3, %for.body313.1 ]
  %niter573 = phi i64 [ %unroll_iter572, %for.body313.lr.ph.1.new ], [ %niter573.nsub.3, %for.body313.1 ]
  %add.ptr.i488.1 = getelementptr inbounds float, float* %119, i64 %indvars.iv536.1
  %124 = load float, float* %add.ptr.i488.1, align 4, !tbaa !83
  %add.ptr.i486.1 = getelementptr inbounds float, float* %120, i64 %indvars.iv536.1
  %125 = load float, float* %add.ptr.i486.1, align 4, !tbaa !83
  %add320.1 = fadd float %124, %125
  store float %add320.1, float* %add.ptr.i486.1, align 4, !tbaa !83
  %indvars.iv.next537.1 = or i64 %indvars.iv536.1, 1
  %add.ptr.i488.1.1 = getelementptr inbounds float, float* %119, i64 %indvars.iv.next537.1
  %126 = load float, float* %add.ptr.i488.1.1, align 4, !tbaa !83
  %add.ptr.i486.1.1 = getelementptr inbounds float, float* %120, i64 %indvars.iv.next537.1
  %127 = load float, float* %add.ptr.i486.1.1, align 4, !tbaa !83
  %add320.1.1 = fadd float %126, %127
  store float %add320.1.1, float* %add.ptr.i486.1.1, align 4, !tbaa !83
  %indvars.iv.next537.1.1 = or i64 %indvars.iv536.1, 2
  %add.ptr.i488.1.2 = getelementptr inbounds float, float* %119, i64 %indvars.iv.next537.1.1
  %128 = load float, float* %add.ptr.i488.1.2, align 4, !tbaa !83
  %add.ptr.i486.1.2 = getelementptr inbounds float, float* %120, i64 %indvars.iv.next537.1.1
  %129 = load float, float* %add.ptr.i486.1.2, align 4, !tbaa !83
  %add320.1.2 = fadd float %128, %129
  store float %add320.1.2, float* %add.ptr.i486.1.2, align 4, !tbaa !83
  %indvars.iv.next537.1.2 = or i64 %indvars.iv536.1, 3
  %add.ptr.i488.1.3 = getelementptr inbounds float, float* %119, i64 %indvars.iv.next537.1.2
  %130 = load float, float* %add.ptr.i488.1.3, align 4, !tbaa !83
  %add.ptr.i486.1.3 = getelementptr inbounds float, float* %120, i64 %indvars.iv.next537.1.2
  %131 = load float, float* %add.ptr.i486.1.3, align 4, !tbaa !83
  %add320.1.3 = fadd float %130, %131
  store float %add320.1.3, float* %add.ptr.i486.1.3, align 4, !tbaa !83
  %indvars.iv.next537.1.3 = add nuw nsw i64 %indvars.iv536.1, 4
  %niter573.nsub.3 = add i64 %niter573, -4
  %niter573.ncmp.3 = icmp eq i64 %niter573.nsub.3, 0
  br i1 %niter573.ncmp.3, label %for.inc324.1.loopexit.unr-lcssa, label %for.body313.1

for.inc324.1.loopexit.unr-lcssa:                  ; preds = %for.body313.1, %for.body313.lr.ph.1
  %indvars.iv536.1.unr = phi i64 [ 0, %for.body313.lr.ph.1 ], [ %indvars.iv.next537.1.3, %for.body313.1 ]
  %lcmp.mod571 = icmp eq i64 %xtraiter569, 0
  br i1 %lcmp.mod571, label %for.inc324.1, label %for.body313.1.epil

for.body313.1.epil:                               ; preds = %for.body313.1.epil, %for.inc324.1.loopexit.unr-lcssa
  %indvars.iv536.1.epil = phi i64 [ %indvars.iv.next537.1.epil, %for.body313.1.epil ], [ %indvars.iv536.1.unr, %for.inc324.1.loopexit.unr-lcssa ]
  %epil.iter570 = phi i64 [ %epil.iter570.sub, %for.body313.1.epil ], [ %xtraiter569, %for.inc324.1.loopexit.unr-lcssa ]
  %add.ptr.i488.1.epil = getelementptr inbounds float, float* %119, i64 %indvars.iv536.1.epil
  %132 = load float, float* %add.ptr.i488.1.epil, align 4, !tbaa !83
  %add.ptr.i486.1.epil = getelementptr inbounds float, float* %120, i64 %indvars.iv536.1.epil
  %133 = load float, float* %add.ptr.i486.1.epil, align 4, !tbaa !83
  %add320.1.epil = fadd float %132, %133
  store float %add320.1.epil, float* %add.ptr.i486.1.epil, align 4, !tbaa !83
  %indvars.iv.next537.1.epil = add nuw nsw i64 %indvars.iv536.1.epil, 1
  %epil.iter570.sub = add i64 %epil.iter570, -1
  %epil.iter570.cmp = icmp eq i64 %epil.iter570.sub, 0
  br i1 %epil.iter570.cmp, label %for.inc324.1, label %for.body313.1.epil, !llvm.loop !399

for.inc324.1:                                     ; preds = %for.body313.1.epil, %for.inc324.1.loopexit.unr-lcssa, %for.end303.1
  %indvars.iv.next539.1 = add nuw nsw i64 %indvars.iv538.1, 1
  %134 = load i32, i32* %1, align 8, !tbaa !101
  %135 = zext i32 %134 to i64
  %cmp213.1 = icmp ult i64 %indvars.iv.next539.1, %135
  br i1 %cmp213.1, label %for.body214.1, label %for.cond327.preheader.1

for.cond327.preheader.1:                          ; preds = %for.inc324.1, %for.end362.for.cond327.preheader.1_crit_edge
  %136 = phi i32 [ %.pre548, %for.end362.for.cond327.preheader.1_crit_edge ], [ %118, %for.inc324.1 ]
  %cmp329529.1 = icmp eq i32 %136, 0
  br i1 %cmp329529.1, label %for.cond327.preheader.1.for.end338.1_crit_edge, label %for.body330.lr.ph.1

for.cond327.preheader.1.for.end338.1_crit_edge:   ; preds = %for.cond327.preheader.1
  %.pre549 = load i8*, i8** %0, align 8, !tbaa !116
  br label %for.end338.1

for.body330.lr.ph.1:                              ; preds = %for.cond327.preheader.1
  %137 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %138 = zext i32 %136 to i64
  %139 = bitcast float* %137 to i8*
  %140 = add nsw i64 %138, -1
  %xtraiter564 = and i64 %138, 3
  %141 = icmp ult i64 %140, 3
  br i1 %141, label %for.end338.1.loopexit.unr-lcssa, label %for.body330.lr.ph.1.new

for.body330.lr.ph.1.new:                          ; preds = %for.body330.lr.ph.1
  %unroll_iter567 = sub nsw i64 %138, %xtraiter564
  br label %for.body330.1

for.body330.1:                                    ; preds = %for.body330.1, %for.body330.lr.ph.1.new
  %indvars.iv540.1 = phi i64 [ 0, %for.body330.lr.ph.1.new ], [ %indvars.iv.next541.1.3, %for.body330.1 ]
  %niter568 = phi i64 [ %unroll_iter567, %for.body330.lr.ph.1.new ], [ %niter568.nsub.3, %for.body330.1 ]
  %142 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.1 = getelementptr inbounds float, float* %137, i64 %indvars.iv540.1
  %143 = load float, float* %add.ptr.i484.1, align 4, !tbaa !83
  %mul335.1 = fmul float %142, %143
  store float %mul335.1, float* %add.ptr.i484.1, align 4, !tbaa !83
  %indvars.iv.next541.1 = or i64 %indvars.iv540.1, 1
  %144 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.1.1 = getelementptr inbounds float, float* %137, i64 %indvars.iv.next541.1
  %145 = load float, float* %add.ptr.i484.1.1, align 4, !tbaa !83
  %mul335.1.1 = fmul float %144, %145
  store float %mul335.1.1, float* %add.ptr.i484.1.1, align 4, !tbaa !83
  %indvars.iv.next541.1.1 = or i64 %indvars.iv540.1, 2
  %146 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.1.2 = getelementptr inbounds float, float* %137, i64 %indvars.iv.next541.1.1
  %147 = load float, float* %add.ptr.i484.1.2, align 4, !tbaa !83
  %mul335.1.2 = fmul float %146, %147
  store float %mul335.1.2, float* %add.ptr.i484.1.2, align 4, !tbaa !83
  %indvars.iv.next541.1.2 = or i64 %indvars.iv540.1, 3
  %148 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.1.3 = getelementptr inbounds float, float* %137, i64 %indvars.iv.next541.1.2
  %149 = load float, float* %add.ptr.i484.1.3, align 4, !tbaa !83
  %mul335.1.3 = fmul float %148, %149
  store float %mul335.1.3, float* %add.ptr.i484.1.3, align 4, !tbaa !83
  %indvars.iv.next541.1.3 = add nuw nsw i64 %indvars.iv540.1, 4
  %niter568.nsub.3 = add i64 %niter568, -4
  %niter568.ncmp.3 = icmp eq i64 %niter568.nsub.3, 0
  br i1 %niter568.ncmp.3, label %for.end338.1.loopexit.unr-lcssa, label %for.body330.1

for.end338.1.loopexit.unr-lcssa:                  ; preds = %for.body330.1, %for.body330.lr.ph.1
  %indvars.iv540.1.unr = phi i64 [ 0, %for.body330.lr.ph.1 ], [ %indvars.iv.next541.1.3, %for.body330.1 ]
  %lcmp.mod566 = icmp eq i64 %xtraiter564, 0
  br i1 %lcmp.mod566, label %for.end338.1, label %for.body330.1.epil

for.body330.1.epil:                               ; preds = %for.body330.1.epil, %for.end338.1.loopexit.unr-lcssa
  %indvars.iv540.1.epil = phi i64 [ %indvars.iv.next541.1.epil, %for.body330.1.epil ], [ %indvars.iv540.1.unr, %for.end338.1.loopexit.unr-lcssa ]
  %epil.iter565 = phi i64 [ %epil.iter565.sub, %for.body330.1.epil ], [ %xtraiter564, %for.end338.1.loopexit.unr-lcssa ]
  %150 = load float, float* %m_fFFTScaler331, align 8, !tbaa !342
  %add.ptr.i484.1.epil = getelementptr inbounds float, float* %137, i64 %indvars.iv540.1.epil
  %151 = load float, float* %add.ptr.i484.1.epil, align 4, !tbaa !83
  %mul335.1.epil = fmul float %150, %151
  store float %mul335.1.epil, float* %add.ptr.i484.1.epil, align 4, !tbaa !83
  %indvars.iv.next541.1.epil = add nuw nsw i64 %indvars.iv540.1.epil, 1
  %epil.iter565.sub = add i64 %epil.iter565, -1
  %epil.iter565.cmp = icmp eq i64 %epil.iter565.sub, 0
  br i1 %epil.iter565.cmp, label %for.end338.1, label %for.body330.1.epil, !llvm.loop !400

for.end338.1:                                     ; preds = %for.body330.1.epil, %for.end338.1.loopexit.unr-lcssa, %for.cond327.preheader.1.for.end338.1_crit_edge
  %152 = phi i8* [ %.pre549, %for.cond327.preheader.1.for.end338.1_crit_edge ], [ %139, %for.body330.1.epil ], [ %139, %for.end338.1.loopexit.unr-lcssa ]
  %arrayidx340.1 = getelementptr inbounds float*, float** %ppfDst, i64 1
  %153 = bitcast float** %arrayidx340.1 to i8**
  %154 = load i8*, i8** %153, align 8, !tbaa !76
  %155 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !337
  %conv344.1 = zext i32 %155 to i64
  %mul345.1 = shl nuw nsw i64 %conv344.1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %152, i64 %mul345.1, i1 false)
  %156 = load i32, i32* %m_nOverlapLength347, align 4, !tbaa !338
  %cmp348531.1 = icmp eq i32 %156, 0
  %arrayidx352.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1
  br i1 %cmp348531.1, label %for.end338.1.for.end362.1_crit_edge, label %for.body349.lr.ph.1

for.end338.1.for.end362.1_crit_edge:              ; preds = %for.end338.1
  %.phi.trans.insert550 = bitcast %"class.std::vector.0"* %arrayidx352.1 to i8**
  %.pre551 = load i8*, i8** %.phi.trans.insert550, align 8, !tbaa !116
  br label %for.end362.1

for.body349.lr.ph.1:                              ; preds = %for.end338.1
  %_M_start.i480.1 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx352.1, i64 0, i32 0, i32 0, i32 0
  %157 = load float*, float** %_M_start.i480.1, align 8, !tbaa !116
  %158 = load float*, float** %arrayidx340.1, align 8, !tbaa !76
  %159 = zext i32 %156 to i64
  %160 = bitcast float* %157 to i8*
  %161 = add nsw i64 %159, -1
  %xtraiter = and i64 %159, 3
  %162 = icmp ult i64 %161, 3
  br i1 %162, label %for.end362.loopexit.1.unr-lcssa, label %for.body349.lr.ph.1.new

for.body349.lr.ph.1.new:                          ; preds = %for.body349.lr.ph.1
  %unroll_iter = sub nsw i64 %159, %xtraiter
  br label %for.body349.1

for.body349.1:                                    ; preds = %for.body349.1, %for.body349.lr.ph.1.new
  %indvars.iv542.1 = phi i64 [ 0, %for.body349.lr.ph.1.new ], [ %indvars.iv.next543.1.3, %for.body349.1 ]
  %niter = phi i64 [ %unroll_iter, %for.body349.lr.ph.1.new ], [ %niter.nsub.3, %for.body349.1 ]
  %add.ptr.i481.1 = getelementptr inbounds float, float* %157, i64 %indvars.iv542.1
  %163 = load float, float* %add.ptr.i481.1, align 4, !tbaa !83
  %arrayidx358.1 = getelementptr inbounds float, float* %158, i64 %indvars.iv542.1
  %164 = load float, float* %arrayidx358.1, align 4, !tbaa !83
  %add359.1 = fadd float %163, %164
  store float %add359.1, float* %arrayidx358.1, align 4, !tbaa !83
  %indvars.iv.next543.1 = or i64 %indvars.iv542.1, 1
  %add.ptr.i481.1.1 = getelementptr inbounds float, float* %157, i64 %indvars.iv.next543.1
  %165 = load float, float* %add.ptr.i481.1.1, align 4, !tbaa !83
  %arrayidx358.1.1 = getelementptr inbounds float, float* %158, i64 %indvars.iv.next543.1
  %166 = load float, float* %arrayidx358.1.1, align 4, !tbaa !83
  %add359.1.1 = fadd float %165, %166
  store float %add359.1.1, float* %arrayidx358.1.1, align 4, !tbaa !83
  %indvars.iv.next543.1.1 = or i64 %indvars.iv542.1, 2
  %add.ptr.i481.1.2 = getelementptr inbounds float, float* %157, i64 %indvars.iv.next543.1.1
  %167 = load float, float* %add.ptr.i481.1.2, align 4, !tbaa !83
  %arrayidx358.1.2 = getelementptr inbounds float, float* %158, i64 %indvars.iv.next543.1.1
  %168 = load float, float* %arrayidx358.1.2, align 4, !tbaa !83
  %add359.1.2 = fadd float %167, %168
  store float %add359.1.2, float* %arrayidx358.1.2, align 4, !tbaa !83
  %indvars.iv.next543.1.2 = or i64 %indvars.iv542.1, 3
  %add.ptr.i481.1.3 = getelementptr inbounds float, float* %157, i64 %indvars.iv.next543.1.2
  %169 = load float, float* %add.ptr.i481.1.3, align 4, !tbaa !83
  %arrayidx358.1.3 = getelementptr inbounds float, float* %158, i64 %indvars.iv.next543.1.2
  %170 = load float, float* %arrayidx358.1.3, align 4, !tbaa !83
  %add359.1.3 = fadd float %169, %170
  store float %add359.1.3, float* %arrayidx358.1.3, align 4, !tbaa !83
  %indvars.iv.next543.1.3 = add nuw nsw i64 %indvars.iv542.1, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.end362.loopexit.1.unr-lcssa, label %for.body349.1

for.end362.loopexit.1.unr-lcssa:                  ; preds = %for.body349.1, %for.body349.lr.ph.1
  %indvars.iv542.1.unr = phi i64 [ 0, %for.body349.lr.ph.1 ], [ %indvars.iv.next543.1.3, %for.body349.1 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.end362.loopexit.1, label %for.body349.1.epil

for.body349.1.epil:                               ; preds = %for.body349.1.epil, %for.end362.loopexit.1.unr-lcssa
  %indvars.iv542.1.epil = phi i64 [ %indvars.iv.next543.1.epil, %for.body349.1.epil ], [ %indvars.iv542.1.unr, %for.end362.loopexit.1.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body349.1.epil ], [ %xtraiter, %for.end362.loopexit.1.unr-lcssa ]
  %add.ptr.i481.1.epil = getelementptr inbounds float, float* %157, i64 %indvars.iv542.1.epil
  %171 = load float, float* %add.ptr.i481.1.epil, align 4, !tbaa !83
  %arrayidx358.1.epil = getelementptr inbounds float, float* %158, i64 %indvars.iv542.1.epil
  %172 = load float, float* %arrayidx358.1.epil, align 4, !tbaa !83
  %add359.1.epil = fadd float %171, %172
  store float %add359.1.epil, float* %arrayidx358.1.epil, align 4, !tbaa !83
  %indvars.iv.next543.1.epil = add nuw nsw i64 %indvars.iv542.1.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.end362.loopexit.1, label %for.body349.1.epil, !llvm.loop !401

for.end362.loopexit.1:                            ; preds = %for.body349.1.epil, %for.end362.loopexit.1.unr-lcssa
  %phitmp556 = zext i32 %156 to i64
  %phitmp557 = shl nuw nsw i64 %phitmp556, 2
  br label %for.end362.1

for.end362.1:                                     ; preds = %for.end362.loopexit.1, %for.end338.1.for.end362.1_crit_edge
  %173 = phi i8* [ %.pre551, %for.end338.1.for.end362.1_crit_edge ], [ %160, %for.end362.loopexit.1 ]
  %.lcssa.1 = phi i64 [ 0, %for.end338.1.for.end362.1_crit_edge ], [ %phitmp557, %for.end362.loopexit.1 ]
  %174 = load i32, i32* %m_nBlockSize220, align 8, !tbaa !337
  %conv369.1 = zext i32 %174 to i64
  %175 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i.1 = getelementptr inbounds float, float* %175, i64 %conv369.1
  %176 = bitcast float* %add.ptr.i.1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* nonnull align 4 %176, i64 %.lcssa.1, i1 false)
  ret void
}

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer15ArrangeSpeakersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 !prof !61 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !97
  %2 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 2
  %3 = load i8, i8* %2, align 4, !tbaa !100, !range !104
  %tobool = icmp ne i8 %3, 0
  %call = tail call i32 @_Z15OrderToSpeakersjb(i32 %1, i1 zeroext %tobool)
  %4 = load i32, i32* %0, align 8, !tbaa !97
  %cmp = icmp eq i32 %4, 1
  br i1 %cmp, label %if.then, label %if.else, !prof !330

if.then:                                          ; preds = %entry
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 24)
  br label %if.end

if.else:                                          ; preds = %entry
  %call1.i15 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0), i64 39)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %nSpeakerSetUp.0 = phi i32 [ 13, %if.then ], [ 12, %if.else ]
  %call.i16 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout)
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1
  %5 = load i32, i32* %0, align 8, !tbaa !97
  %6 = load i8, i8* %2, align 4, !tbaa !100, !range !104
  %tobool9 = icmp ne i8 %6, 0
  %call10 = tail call zeroext i1 @_ZN17CAmbisonicDecoder9ConfigureEjbij(%class.CAmbisonicDecoder* nonnull %m_AmbDecoder, i32 %5, i1 zeroext %tobool9, i32 %nSpeakerSetUp.0, i32 %call)
  %m_nSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 2
  %7 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !289
  %cmp5.i = icmp eq i32 %7, 0
  br i1 %cmp5.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, label %for.body.lr.ph.i, !prof !293

for.body.lr.ph.i:                                 ; preds = %if.end
  %m_pAmbSpeakers.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %8 = load %class.CAmbisonicSpeaker*, %class.CAmbisonicSpeaker** %m_pAmbSpeakers.i, align 8, !tbaa !284
  %arrayidx.i = getelementptr inbounds %class.CAmbisonicSpeaker, %class.CAmbisonicSpeaker* %8, i64 %indvars.iv.i
  %9 = bitcast %class.CAmbisonicSpeaker* %arrayidx.i to void (%class.CAmbisonicSpeaker*)***
  %vtable.i = load void (%class.CAmbisonicSpeaker*)**, void (%class.CAmbisonicSpeaker*)*** %9, align 8, !tbaa !68
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vtable.i, i64 4
  %10 = load void (%class.CAmbisonicSpeaker*)*, void (%class.CAmbisonicSpeaker*)** %vfn.i, align 8
  tail call void %10(%class.CAmbisonicSpeaker* %arrayidx.i)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %11 = load i32, i32* %m_nSpeakers.i, align 4, !tbaa !289
  %12 = zext i32 %11 to i64
  %cmp.i = icmp ult i64 %indvars.iv.next.i, %12
  br i1 %cmp.i, label %for.body.i, label %_ZN17CAmbisonicDecoder7RefreshEv.exit, !prof !294

_ZN17CAmbisonicDecoder7RefreshEv.exit:            ; preds = %for.body.i, %if.end
  ret void
}

declare i32 @_Z15OrderToSpeakersjb(i32, i1 zeroext) local_unnamed_addr #0

; Function Attrs: inlinehint uwtable
declare dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) local_unnamed_addr #18

; Function Attrs: inlinehint uwtable
declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) local_unnamed_addr #18

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: uwtable
define void @_ZN22CAmbisonicBinauralizer15AllocateBuffersEv(%class.CAmbisonicBinauralizer* %this) unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !61 {
entry:
  %m_pfScratchBufferA = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 4
  %0 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %conv = zext i32 %0 to i64
  %_M_finish.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 1
  %1 = bitcast float** %_M_finish.i.i to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !113
  %3 = bitcast %"class.std::vector.0"* %m_pfScratchBufferA to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !116
  %sub.ptr.sub.i.i = sub i64 %2, %4
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 2
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv
  %5 = inttoptr i64 %4 to float*
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !prof !142

if.then.i:                                        ; preds = %entry
  %sub.i = sub nsw i64 %conv, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferA, i64 %sub.i)
  %.pre = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %.pre107 = zext i32 %.pre to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.else.i:                                        ; preds = %entry
  %cmp4.i = icmp ugt i64 %sub.ptr.div.i.i, %conv
  br i1 %cmp4.i, label %if.then5.i, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

if.then5.i:                                       ; preds = %if.else.i
  %add.ptr.i = getelementptr inbounds float, float* %5, i64 %conv
  store float* %add.ptr.i, float** %_M_finish.i.i, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit

_ZNSt6vectorIfSaIfEE6resizeEm.exit:               ; preds = %if.then5.i, %if.else.i, %if.then.i
  %conv3.pre-phi = phi i64 [ %.pre107, %if.then.i ], [ %conv, %if.else.i ], [ %conv, %if.then5.i ]
  %m_pfScratchBufferB = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13
  %_M_finish.i.i41 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 1
  %6 = bitcast float** %_M_finish.i.i41 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !113
  %8 = bitcast %"class.std::vector.0"* %m_pfScratchBufferB to i64*
  %9 = load i64, i64* %8, align 8, !tbaa !116
  %sub.ptr.sub.i.i42 = sub i64 %7, %9
  %sub.ptr.div.i.i43 = ashr exact i64 %sub.ptr.sub.i.i42, 2
  %cmp.i44 = icmp ugt i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  %10 = inttoptr i64 %9 to float*
  br i1 %cmp.i44, label %if.then.i46, label %if.else.i48, !prof !142

if.then.i46:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %sub.i45 = sub nsw i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferB, i64 %sub.i45)
  %.pre103 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %.pre108 = zext i32 %.pre103 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit51

if.else.i48:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit
  %cmp4.i47 = icmp ult i64 %conv3.pre-phi, %sub.ptr.div.i.i43
  br i1 %cmp4.i47, label %if.then5.i50, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit51

if.then5.i50:                                     ; preds = %if.else.i48
  %add.ptr.i49 = getelementptr inbounds float, float* %10, i64 %conv3.pre-phi
  store float* %add.ptr.i49, float** %_M_finish.i.i41, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit51

_ZNSt6vectorIfSaIfEE6resizeEm.exit51:             ; preds = %if.then5.i50, %if.else.i48, %if.then.i46
  %conv5.pre-phi = phi i64 [ %.pre108, %if.then.i46 ], [ %conv3.pre-phi, %if.else.i48 ], [ %conv3.pre-phi, %if.then5.i50 ]
  %m_pfScratchBufferC = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14
  %_M_finish.i.i52 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14, i32 0, i32 0, i32 1
  %11 = bitcast float** %_M_finish.i.i52 to i64*
  %12 = load i64, i64* %11, align 8, !tbaa !113
  %13 = bitcast %"class.std::vector.0"* %m_pfScratchBufferC to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !116
  %sub.ptr.sub.i.i53 = sub i64 %12, %14
  %sub.ptr.div.i.i54 = ashr exact i64 %sub.ptr.sub.i.i53, 2
  %cmp.i55 = icmp ugt i64 %conv5.pre-phi, %sub.ptr.div.i.i54
  %15 = inttoptr i64 %14 to float*
  br i1 %cmp.i55, label %if.then.i57, label %if.else.i59, !prof !142

if.then.i57:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit51
  %sub.i56 = sub nsw i64 %conv5.pre-phi, %sub.ptr.div.i.i54
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %m_pfScratchBufferC, i64 %sub.i56)
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit62

if.else.i59:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit51
  %cmp4.i58 = icmp ult i64 %conv5.pre-phi, %sub.ptr.div.i.i54
  br i1 %cmp4.i58, label %if.then5.i61, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit62

if.then5.i61:                                     ; preds = %if.else.i59
  %add.ptr.i60 = getelementptr inbounds float, float* %15, i64 %conv5.pre-phi
  store float* %add.ptr.i60, float** %_M_finish.i.i52, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit62

_ZNSt6vectorIfSaIfEE6resizeEm.exit62:             ; preds = %if.then5.i61, %if.else.i59, %if.then.i57
  %arrayidx = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 7
  %16 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !338
  %conv6 = zext i32 %16 to i64
  %_M_finish.i.i63 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast float** %_M_finish.i.i63 to i64*
  %18 = load i64, i64* %17, align 8, !tbaa !113
  %19 = bitcast %"class.std::vector.0"* %arrayidx to i64*
  %20 = load i64, i64* %19, align 8, !tbaa !116
  %sub.ptr.sub.i.i64 = sub i64 %18, %20
  %sub.ptr.div.i.i65 = ashr exact i64 %sub.ptr.sub.i.i64, 2
  %cmp.i66 = icmp ult i64 %sub.ptr.div.i.i65, %conv6
  %21 = inttoptr i64 %20 to float*
  br i1 %cmp.i66, label %if.then.i68, label %if.else.i70, !prof !142

if.then.i68:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit62
  %sub.i67 = sub nsw i64 %conv6, %sub.ptr.div.i.i65
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %arrayidx, i64 %sub.i67)
  %.pre104 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !338
  %.pre109 = zext i32 %.pre104 to i64
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit73

if.else.i70:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit62
  %cmp4.i69 = icmp ugt i64 %sub.ptr.div.i.i65, %conv6
  br i1 %cmp4.i69, label %if.then5.i72, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit73

if.then5.i72:                                     ; preds = %if.else.i70
  %add.ptr.i71 = getelementptr inbounds float, float* %21, i64 %conv6
  store float* %add.ptr.i71, float** %_M_finish.i.i63, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit73

_ZNSt6vectorIfSaIfEE6resizeEm.exit73:             ; preds = %if.then5.i72, %if.else.i70, %if.then.i68
  %conv10.pre-phi = phi i64 [ %.pre109, %if.then.i68 ], [ %conv6, %if.else.i70 ], [ %conv6, %if.then5.i72 ]
  %arrayidx8 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1
  %_M_finish.i.i74 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 1
  %22 = bitcast float** %_M_finish.i.i74 to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !113
  %24 = bitcast %"class.std::vector.0"* %arrayidx8 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !116
  %sub.ptr.sub.i.i75 = sub i64 %23, %25
  %sub.ptr.div.i.i76 = ashr exact i64 %sub.ptr.sub.i.i75, 2
  %cmp.i77 = icmp ugt i64 %conv10.pre-phi, %sub.ptr.div.i.i76
  %26 = inttoptr i64 %25 to float*
  br i1 %cmp.i77, label %if.then.i79, label %if.else.i81, !prof !142

if.then.i79:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit73
  %sub.i78 = sub nsw i64 %conv10.pre-phi, %sub.ptr.div.i.i76
  tail call void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* nonnull %arrayidx8, i64 %sub.i78)
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit84

if.else.i81:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit73
  %cmp4.i80 = icmp ult i64 %conv10.pre-phi, %sub.ptr.div.i.i76
  br i1 %cmp4.i80, label %if.then5.i83, label %_ZNSt6vectorIfSaIfEE6resizeEm.exit84

if.then5.i83:                                     ; preds = %if.else.i81
  %add.ptr.i82 = getelementptr inbounds float, float* %26, i64 %conv10.pre-phi
  store float* %add.ptr.i82, float** %_M_finish.i.i74, align 8, !tbaa !113
  br label %_ZNSt6vectorIfSaIfEE6resizeEm.exit84

_ZNSt6vectorIfSaIfEE6resizeEm.exit84:             ; preds = %if.then5.i83, %if.else.i81, %if.then.i79
  %27 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %call = tail call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %27, i32 0, i8* null, i64* null)
  %28 = ptrtoint %struct.kiss_fftr_state* %call to i64
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %29 = bitcast %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !76
  store i64 %28, i64* %29, align 8, !tbaa !76
  %cmp.i85 = icmp eq i64 %30, 0
  br i1 %cmp.i85, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit, label %if.then.i86, !prof !402

if.then.i86:                                      ; preds = %_ZNSt6vectorIfSaIfEE6resizeEm.exit84
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %32 = inttoptr i64 %30 to i8*
  invoke void %31(i8* %32)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %if.then.i86
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  tail call void @__clang_call_terminate(i8* %34) #27
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit: ; preds = %if.then.i86, %_ZNSt6vectorIfSaIfEE6resizeEm.exit84
  %35 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %call13 = tail call %struct.kiss_fftr_state* @kiss_fftr_alloc(i32 %35, i32 1, i8* null, i64* null)
  %36 = ptrtoint %struct.kiss_fftr_state* %call13 to i64
  %_M_head_impl.i.i.i.i.i87 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %37 = bitcast %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i87 to i64*
  %38 = load i64, i64* %37, align 8, !tbaa !76
  store i64 %36, i64* %37, align 8, !tbaa !76
  %cmp.i88 = icmp eq i64 %38, 0
  br i1 %cmp.i88, label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92, label %if.then.i90, !prof !402

if.then.i90:                                      ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
  %_M_head_impl.i.i.i.i.i.i89 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i.i89, align 8, !tbaa !76
  %40 = inttoptr i64 %38 to i8*
  invoke void %39(i8* %40)
          to label %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92 unwind label %terminate.lpad.i91

terminate.lpad.i91:                               ; preds = %if.then.i90
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  tail call void @__clang_call_terminate(i8* %42) #27
  unreachable

_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92: ; preds = %if.then.i90, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit
  %43 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 4
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 5
  %arrayidx14 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0
  %44 = load i32, i32* %43, align 8, !tbaa !101
  %conv15 = zext i32 %44 to i64
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm(%"class.std::vector.26"* nonnull %arrayidx14, i64 %conv15)
  %45 = load i32, i32* %43, align 8, !tbaa !101
  %cmp1898 = icmp eq i32 %45, 0
  br i1 %cmp1898, label %for.cond.cleanup19, label %for.body20.lr.ph, !prof !343

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i: ; preds = %for.cond.cleanup19.1
  %46 = bitcast %struct.kiss_fft_cpx* %76 to i8*
  tail call void @_ZdaPv(i8* %46) #26
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit: ; preds = %for.cond.cleanup19.1, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i
  ret void

for.body20.lr.ph:                                 ; preds = %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92
  %_M_start.i = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %arrayidx14, i64 0, i32 0, i32 0, i32 0
  br label %for.body20

for.cond.cleanup19:                               ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92
  %47 = phi i32 [ 0, %_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEE5resetEPS0_.exit92 ], [ %58, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97 ]
  %arrayidx14.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1
  %conv15.1 = zext i32 %47 to i64
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm(%"class.std::vector.26"* nonnull %arrayidx14.1, i64 %conv15.1)
  %48 = load i32, i32* %43, align 8, !tbaa !101
  %cmp1898.1 = icmp eq i32 %48, 0
  br i1 %cmp1898.1, label %for.cond.cleanup19.1, label %for.body20.lr.ph.1, !prof !343

for.body20:                                       ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97, %for.body20.lr.ph
  %49 = phi i32 [ %45, %for.body20.lr.ph ], [ %58, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97 ]
  %indvars.iv = phi i64 [ 0, %for.body20.lr.ph ], [ %indvars.iv.next, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97 ]
  %50 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i, align 8, !tbaa !390
  %add.ptr.i94 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %50, i64 %indvars.iv
  %51 = load i32, i32* %m_nFFTBins, align 4, !tbaa !341
  %conv26 = zext i32 %51 to i64
  %52 = shl nuw nsw i64 %conv26, 3
  %call27 = tail call i8* @_Znam(i64 %52) #25
  %53 = ptrtoint i8* %call27 to i64
  %54 = bitcast %"class.std::unique_ptr.31"* %add.ptr.i94 to i64*
  %55 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %add.ptr.i94, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %55, align 8, !tbaa !76
  store i64 %53, i64* %54, align 8, !tbaa !76
  %cmp.i95 = icmp eq %struct.kiss_fft_cpx* %56, null
  br i1 %cmp.i95, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i96, !prof !403

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i96: ; preds = %for.body20
  %57 = bitcast %struct.kiss_fft_cpx* %56 to i8*
  tail call void @_ZdaPv(i8* %57) #26
  %.pre105 = load i32, i32* %43, align 8, !tbaa !101
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i96, %for.body20
  %58 = phi i32 [ %49, %for.body20 ], [ %.pre105, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i96 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %59 = zext i32 %58 to i64
  %cmp18 = icmp ult i64 %indvars.iv.next, %59
  br i1 %cmp18, label %for.body20, label %for.cond.cleanup19, !prof !393

for.body20.lr.ph.1:                               ; preds = %for.cond.cleanup19
  %_M_start.i.1 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %arrayidx14.1, i64 0, i32 0, i32 0, i32 0
  br label %for.body20.1

for.body20.1:                                     ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97.1, %for.body20.lr.ph.1
  %60 = phi i32 [ %48, %for.body20.lr.ph.1 ], [ %69, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97.1 ]
  %indvars.iv.1 = phi i64 [ 0, %for.body20.lr.ph.1 ], [ %indvars.iv.next.1, %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97.1 ]
  %61 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i.1, align 8, !tbaa !390
  %add.ptr.i94.1 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %61, i64 %indvars.iv.1
  %62 = load i32, i32* %m_nFFTBins, align 4, !tbaa !341
  %conv26.1 = zext i32 %62 to i64
  %63 = shl nuw nsw i64 %conv26.1, 3
  %call27.1 = tail call i8* @_Znam(i64 %63) #25
  %64 = ptrtoint i8* %call27.1 to i64
  %65 = bitcast %"class.std::unique_ptr.31"* %add.ptr.i94.1 to i64*
  %66 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %add.ptr.i94.1, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %66, align 8, !tbaa !76
  store i64 %64, i64* %65, align 8, !tbaa !76
  %cmp.i95.1 = icmp eq %struct.kiss_fft_cpx* %67, null
  br i1 %cmp.i95.1, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97.1, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i96.1, !prof !403

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i96.1: ; preds = %for.body20.1
  %68 = bitcast %struct.kiss_fft_cpx* %67 to i8*
  tail call void @_ZdaPv(i8* %68) #26
  %.pre106 = load i32, i32* %43, align 8, !tbaa !101
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97.1

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97.1: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i96.1, %for.body20.1
  %69 = phi i32 [ %.pre106, %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i96.1 ], [ %60, %for.body20.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %70 = zext i32 %69 to i64
  %cmp18.1 = icmp ult i64 %indvars.iv.next.1, %70
  br i1 %cmp18.1, label %for.body20.1, label %for.cond.cleanup19.1, !prof !393

for.cond.cleanup19.1:                             ; preds = %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit97.1, %for.cond.cleanup19
  %m_pcpScratch = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11
  %71 = load i32, i32* %m_nFFTBins, align 4, !tbaa !341
  %conv32 = zext i32 %71 to i64
  %72 = shl nuw nsw i64 %conv32, 3
  %call33 = tail call i8* @_Znam(i64 %72) #25
  %73 = ptrtoint i8* %call33 to i64
  %74 = bitcast %"class.std::unique_ptr.31"* %m_pcpScratch to i64*
  %75 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %m_pcpScratch, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %75, align 8, !tbaa !76
  store i64 %73, i64* %74, align 8, !tbaa !76
  %cmp.i93 = icmp eq %struct.kiss_fft_cpx* %76, null
  br i1 %cmp.i93, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE5resetEPS0_.exit, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i, !prof !403
}

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE6resizeEm(%"class.std::vector.26"* %this, i64 %__new_size) local_unnamed_addr #3 comdat align 2 !prof !404 {
entry:
  %_M_finish.i = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = bitcast %"class.std::unique_ptr.31"** %_M_finish.i to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !405
  %2 = bitcast %"class.std::vector.26"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !390
  %sub.ptr.sub.i = sub i64 %1, %3
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp = icmp ult i64 %sub.ptr.div.i, %__new_size
  %4 = inttoptr i64 %3 to %"class.std::unique_ptr.31"*
  br i1 %cmp, label %if.then, label %if.else, !prof !402

if.then:                                          ; preds = %entry
  %sub = sub i64 %__new_size, %sub.ptr.div.i
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.26"* nonnull %this, i64 %sub)
  br label %if.end6

if.else:                                          ; preds = %entry
  %cmp4 = icmp ugt i64 %sub.ptr.div.i, %__new_size
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.else
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %4, i64 %__new_size
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector.26"* nonnull %this, %"class.std::unique_ptr.31"* %add.ptr) #24
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.else, %if.then
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, %"class.std::__cxx11::basic_string"* %srcFilename, i32 %nOrder, i1 zeroext %b3D) unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !146 {
entry:
  %temp = alloca [44 x i8], align 16
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  store float 1.000000e+00, float* %amp, align 4, !tbaa !406
  %call = tail call i8* @_Znwm(i64 528) #25
  %0 = bitcast i8* %call to %"class.std::basic_fstream"*
  invoke void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"* nonnull %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %srcFilename, i32 8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"* %this to i8**
  store i8* %call, i8** %1, align 8, !tbaa !408
  %2 = getelementptr inbounds [44 x i8], [44 x i8]* %temp, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %2) #24
  %.cast = bitcast i8* %call to %"class.std::basic_istream"*
  %call3 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* nonnull %.cast, i8* nonnull %2, i64 44)
  %call4 = call i8* @_Znwm(i64 64) #25
  %3 = bitcast i8* %call4 to %class.CBFormat*
  %4 = bitcast i8* %call4 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %call4, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8, !tbaa !97
  %7 = getelementptr inbounds i8, i8* %call4, i64 12
  store i8 0, i8* %7, align 4, !tbaa !100
  %8 = getelementptr inbounds i8, i8* %call4, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8, !tbaa !101
  %10 = getelementptr inbounds i8, i8* %call4, i64 20
  store i8 0, i8* %10, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !68
  %m_nSamples.i = getelementptr inbounds i8, i8* %call4, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSamples.i, i8 0, i64 40, i1 false) #24
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %11 = bitcast %class.CBFormat** %BFormat to i8**
  store i8* %call4, i8** %11, align 8, !tbaa !409
  %call8 = call zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %3, i32 %nOrder, i1 zeroext true, i32 1024)
  %12 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !409
  %13 = bitcast %class.CBFormat* %12 to void (%class.CBFormat*)***
  %vtable11 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %13, align 8, !tbaa !68
  %vfn12 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable11, i64 4
  %14 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn12, align 8
  call void %14(%class.CBFormat* %12)
  %call13 = call i8* @_Znwm(i64 136) #25
  %15 = bitcast i8* %call13 to %class.CAmbisonicEncoderDist*
  invoke void @_ZN21CAmbisonicEncoderDistC2Ev(%class.CAmbisonicEncoderDist* nonnull %15)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %16 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to i8**
  store i8* %call13, i8** %16, align 8, !tbaa !410
  %17 = bitcast i8* %call13 to i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)***
  %vtable17 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)**, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*** %17, align 8, !tbaa !68
  %vfn18 = getelementptr inbounds i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vtable17, i64 2
  %18 = load i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)*, i1 (%class.CAmbisonicEncoderDist*, i32, i1, i32)** %vfn18, align 8
  %call19 = call zeroext i1 %18(%class.CAmbisonicEncoderDist* nonnull %15, i32 %nOrder, i1 zeroext true, i32 48000)
  %19 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !410
  %20 = bitcast %class.CAmbisonicEncoderDist* %19 to void (%class.CAmbisonicEncoderDist*)***
  %vtable24 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %20, align 8, !tbaa !68
  %vfn25 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable24, i64 4
  %21 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn25, align 8
  call void %21(%class.CAmbisonicEncoderDist* %19)
  %fAzimuth = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 0
  store float 0.000000e+00, float* %fAzimuth, align 8, !tbaa !411
  %fElevation = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 1
  store float 0.000000e+00, float* %fElevation, align 4, !tbaa !412
  %fDistance = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 2
  store float 0.000000e+00, float* %fDistance, align 8, !tbaa !413
  %22 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to %class.CAmbisonicSource**
  %23 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %22, align 8, !tbaa !410
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4
  %agg.tmp.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %agg.tmp.sroa.0.0..sroa_idx to <2 x float>*
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast, align 8
  %24 = bitcast %class.CAmbisonicSource* %23 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable31 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %24, align 8, !tbaa !68
  %vfn32 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable31, i64 5
  %25 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn32, align 8
  call void %25(%class.CAmbisonicSource* %23, <2 x float> %agg.tmp.sroa.0.0.copyload, float 0.000000e+00)
  %26 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !410
  %27 = bitcast %class.CAmbisonicEncoderDist* %26 to void (%class.CAmbisonicEncoderDist*)***
  %vtable34 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %27, align 8, !tbaa !68
  %vfn35 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable34, i64 4
  %28 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn35, align 8
  call void %28(%class.CAmbisonicEncoderDist* %26)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  ret void

lpad:                                             ; preds = %entry
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  %31 = extractvalue { i8*, i32 } %29, 1
  tail call void @_ZdlPv(i8* nonnull %call) #26
  br label %eh.resume

lpad14:                                           ; preds = %invoke.cont
  %32 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %call13) #26
  %33 = extractvalue { i8*, i32 } %32, 1
  %34 = extractvalue { i8*, i32 } %32, 0
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %2) #24
  br label %eh.resume

eh.resume:                                        ; preds = %lpad14, %lpad
  %ehselector.slot.1 = phi i32 [ %33, %lpad14 ], [ %31, %lpad ]
  %exn.slot.1 = phi i8* [ %34, %lpad14 ], [ %30, %lpad ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.1, 0
  %lpad.val36 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.1, 1
  resume { i8*, i32 } %lpad.val36
}

; Function Attrs: uwtable
declare void @_ZNSt13basic_fstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_fstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #3 align 2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO5Sound9setSrcPosER10PolarPoint(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, %struct.PolarPoint* nocapture readonly dereferenceable(12) %pos) local_unnamed_addr #16 align 2 !prof !146 {
entry:
  %0 = bitcast %struct.PolarPoint* %pos to i32*
  %1 = load i32, i32* %0, align 4, !tbaa !414
  %srcPos = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4
  %2 = bitcast %struct.PolarPoint* %srcPos to i32*
  store i32 %1, i32* %2, align 8, !tbaa !411
  %fElevation = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %pos, i64 0, i32 1
  %3 = bitcast float* %fElevation to i32*
  %4 = load i32, i32* %3, align 4, !tbaa !415
  %fElevation4 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 1
  %5 = bitcast float* %fElevation4 to i32*
  store i32 %4, i32* %5, align 4, !tbaa !412
  %fDistance = getelementptr inbounds %struct.PolarPoint, %struct.PolarPoint* %pos, i64 0, i32 2
  %6 = bitcast float* %fDistance to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !416
  %fDistance6 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 4, i32 2
  %8 = bitcast float* %fDistance6 to i32*
  store i32 %7, i32* %8, align 8, !tbaa !413
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %9 = bitcast %class.CAmbisonicEncoderDist** %BEncoder to %class.CAmbisonicSource**
  %10 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %9, align 8, !tbaa !410
  %agg.tmp.sroa.0.0..sroa_cast = bitcast %struct.PolarPoint* %srcPos to <2 x float>*
  %agg.tmp.sroa.0.0.copyload = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast, align 8
  %agg.tmp.sroa.2.0.copyload.cast = bitcast i32 %7 to float
  %11 = bitcast %class.CAmbisonicSource* %10 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %11, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable, i64 5
  %12 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn, align 8
  tail call void %12(%class.CAmbisonicSource* %10, <2 x float> %agg.tmp.sroa.0.0.copyload, float %agg.tmp.sroa.2.0.copyload.cast)
  %13 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !410
  %14 = bitcast %class.CAmbisonicEncoderDist* %13 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %14, align 8, !tbaa !68
  %vfn10 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9, i64 4
  %15 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10, align 8
  tail call void %15(%class.CAmbisonicEncoderDist* %13)
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable writeonly
define void @_ZN12ILLIXR_AUDIO5Sound9setSrcAmpEf(%"class.ILLIXR_AUDIO::Sound"* nocapture %this, float %ampScale) local_unnamed_addr #5 align 2 !prof !103 {
entry:
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  store float %ampScale, float* %amp, align 4, !tbaa !406
  ret void
}

; Function Attrs: uwtable
define %class.CBFormat* @_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv(%"class.ILLIXR_AUDIO::Sound"* nocapture %this) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %sampleTemp = alloca [1024 x i16], align 16
  %0 = bitcast [1024 x i16]* %sampleTemp to i8*
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %0) #24
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"* %this to %"class.std::basic_istream"**
  %2 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %1, align 8, !tbaa !408
  %call = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSi4readEPcl(%"class.std::basic_istream"* %2, i8* nonnull %0, i64 2048)
  %amp = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 5
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %3 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !410
  %arraydecay8 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 0
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !409
  call void @_ZN21CAmbisonicEncoderDist7ProcessEPfjP8CBFormat(%class.CAmbisonicEncoderDist* %3, float* nonnull %arraydecay8, i32 1024, %class.CBFormat* %4)
  %5 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !409
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %0) #24
  ret %class.CBFormat* %5

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next.1, %for.body ]
  %6 = load float, float* %amp, align 4, !tbaa !406
  %conv = fpext float %6 to double
  %arrayidx = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %indvars.iv
  %7 = load i16, i16* %arrayidx, align 4, !tbaa !78
  %conv3 = sitofp i16 %7 to double
  %div = fdiv double %conv3, 3.276700e+04
  %mul = fmul double %div, %conv
  %conv4 = fptrunc double %mul to float
  %arrayidx6 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 %indvars.iv
  store float %conv4, float* %arrayidx6, align 4, !tbaa !83
  %indvars.iv.next = or i64 %indvars.iv, 1
  %8 = load float, float* %amp, align 4, !tbaa !406
  %conv.1 = fpext float %8 to double
  %arrayidx.1 = getelementptr inbounds [1024 x i16], [1024 x i16]* %sampleTemp, i64 0, i64 %indvars.iv.next
  %9 = load i16, i16* %arrayidx.1, align 2, !tbaa !78
  %conv3.1 = sitofp i16 %9 to double
  %div.1 = fdiv double %conv3.1, 3.276700e+04
  %mul.1 = fmul double %div.1, %conv.1
  %conv4.1 = fptrunc double %mul.1 to float
  %arrayidx6.1 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 1, i64 %indvars.iv.next
  store float %conv4.1, float* %arrayidx6.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.1 = icmp eq i64 %indvars.iv.next.1, 1024
  br i1 %exitcond.1, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO5SoundD2Ev(%"class.ILLIXR_AUDIO::Sound"* nocapture readonly %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !103 {
entry:
  %srcFile = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 0
  %0 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8, !tbaa !408
  invoke void @_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv(%"class.std::basic_fstream"* %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %1 = load %"class.std::basic_fstream"*, %"class.std::basic_fstream"** %srcFile, align 8, !tbaa !408
  %isnull = icmp eq %"class.std::basic_fstream"* %1, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %invoke.cont
  %2 = bitcast %"class.std::basic_fstream"* %1 to void (%"class.std::basic_fstream"*)***
  %vtable = load void (%"class.std::basic_fstream"*)**, void (%"class.std::basic_fstream"*)*** %2, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vtable, i64 1
  %3 = load void (%"class.std::basic_fstream"*)*, void (%"class.std::basic_fstream"*)** %vfn, align 8
  tail call void %3(%"class.std::basic_fstream"* nonnull %1) #24
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %invoke.cont
  %BFormat = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 2
  %4 = load %class.CBFormat*, %class.CBFormat** %BFormat, align 8, !tbaa !409
  %isnull3 = icmp eq %class.CBFormat* %4, null
  br i1 %isnull3, label %delete.end7, label %delete.notnull4

delete.notnull4:                                  ; preds = %delete.end
  %5 = bitcast %class.CBFormat* %4 to void (%class.CBFormat*)***
  %vtable5 = load void (%class.CBFormat*)**, void (%class.CBFormat*)*** %5, align 8, !tbaa !68
  %vfn6 = getelementptr inbounds void (%class.CBFormat*)*, void (%class.CBFormat*)** %vtable5, i64 1
  %6 = load void (%class.CBFormat*)*, void (%class.CBFormat*)** %vfn6, align 8
  tail call void %6(%class.CBFormat* nonnull %4) #24
  br label %delete.end7

delete.end7:                                      ; preds = %delete.notnull4, %delete.end
  %BEncoder = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound", %"class.ILLIXR_AUDIO::Sound"* %this, i64 0, i32 3
  %7 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %BEncoder, align 8, !tbaa !410
  %isnull8 = icmp eq %class.CAmbisonicEncoderDist* %7, null
  br i1 %isnull8, label %delete.end12, label %delete.notnull9

delete.notnull9:                                  ; preds = %delete.end7
  %8 = bitcast %class.CAmbisonicEncoderDist* %7 to void (%class.CAmbisonicEncoderDist*)***
  %vtable10 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %8, align 8, !tbaa !68
  %vfn11 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable10, i64 1
  %9 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn11, align 8
  tail call void %9(%class.CAmbisonicEncoderDist* nonnull %7) #24
  br label %delete.end12

delete.end12:                                     ; preds = %delete.notnull9, %delete.end7
  ret void

terminate.lpad:                                   ; preds = %entry
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  tail call void @__clang_call_terminate(i8* %11) #27
  unreachable
}

; Function Attrs: uwtable
declare void @_ZNSt13basic_fstreamIcSt11char_traitsIcEE5closeEv(%"class.std::basic_fstream"*) local_unnamed_addr #3 align 2

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #19 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #24
  tail call void @_ZSt9terminatev() #27
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* nocapture %this, %"class.std::__cxx11::basic_string"* %outputFilePath, i32 %procTypeIn) unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !175 {
entry:
  %temp = alloca i32, align 4
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::allocator.39", align 1
  %agg.tmp19 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp20 = alloca %"class.std::allocator.39", align 1
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  store i32 %procTypeIn, i32* %processType, align 8, !tbaa !417
  %cmp = icmp eq i32 %procTypeIn, 0
  br i1 %cmp, label %if.then, label %invoke.cont11, !prof !197

if.then:                                          ; preds = %entry
  %call = tail call i8* @_Znwm(i64 512) #25
  %0 = bitcast i8* %call to %"class.std::basic_ofstream"*
  invoke void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"* nonnull %0, %"class.std::__cxx11::basic_string"* dereferenceable(32) %outputFilePath, i32 20)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %if.then
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to i8**
  store i8* %call, i8** %1, align 8, !tbaa !420
  tail call void @_ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this)
  br label %invoke.cont11

lpad:                                             ; preds = %if.then
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  %4 = extractvalue { i8*, i32 } %2, 1
  tail call void @_ZdlPv(i8* nonnull %call) #26
  br label %eh.resume

invoke.cont11:                                    ; preds = %invoke.cont4, %entry
  %call5 = tail call i8* @_Znwm(i64 24) #25
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call5, i8 0, i64 24, i1 false) #24
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %5 = bitcast %"class.std::vector.43"** %soundSrcs to i8**
  store i8* %call5, i8** %5, align 8, !tbaa !421
  %call6 = tail call i8* @_Znwm(i64 296) #25
  %6 = bitcast i8* %call6 to %class.CAmbisonicBinauralizer*
  tail call void @_ZN22CAmbisonicBinauralizerC2Ev(%class.CAmbisonicBinauralizer* nonnull %6)
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %7 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i8**
  store i8* %call6, i8** %7, align 8, !tbaa !422
  %call9 = tail call i8* @_Znwm(i64 296) #25
  %8 = bitcast i8* %call9 to %class.CAmbisonicBinauralizer*
  tail call void @_ZN22CAmbisonicBinauralizerC2Ev(%class.CAmbisonicBinauralizer* nonnull %8)
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %9 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i8**
  store i8* %call9, i8** %9, align 8, !tbaa !423
  %10 = bitcast i32* %temp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #24
  %11 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0, align 8, !tbaa !422
  %12 = getelementptr inbounds %"class.std::allocator.39", %"class.std::allocator.39"* %ref.tmp, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #24
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %"class.std::allocator.39"* nonnull dereferenceable(1) %ref.tmp)
          to label %invoke.cont14 unwind label %lpad13

invoke.cont14:                                    ; preds = %invoke.cont11
  %13 = bitcast %class.CAmbisonicBinauralizer* %11 to i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)***
  %vtable = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)**, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*** %13, align 8, !tbaa !68
  %vfn = getelementptr inbounds i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vtable, i64 5
  %14 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vfn, align 8
  %call17 = invoke zeroext i1 %14(%class.CAmbisonicBinauralizer* %11, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* nonnull dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp)
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont14
  br i1 %call17, label %land.rhs, label %cleanup.done41, !prof !194

land.rhs:                                         ; preds = %invoke.cont16
  %15 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8, !tbaa !423
  %16 = getelementptr inbounds %"class.std::allocator.39", %"class.std::allocator.39"* %ref.tmp20, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #24
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %"class.std::allocator.39"* nonnull dereferenceable(1) %ref.tmp20)
          to label %invoke.cont23 unwind label %lpad22

invoke.cont23:                                    ; preds = %land.rhs
  %17 = bitcast %class.CAmbisonicBinauralizer* %15 to i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)***
  %vtable25 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)**, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*** %17, align 8, !tbaa !68
  %vfn26 = getelementptr inbounds i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vtable25, i64 5
  %18 = load i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)*, i1 (%class.CAmbisonicBinauralizer*, i32, i1, i32, i32, i32*, %"class.std::__cxx11::basic_string"*)** %vfn26, align 8
  %call29 = invoke zeroext i1 %18(%class.CAmbisonicBinauralizer* %15, i32 3, i1 zeroext true, i32 48000, i32 1024, i32* nonnull dereferenceable(4) %temp, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp19)
          to label %cleanup.action unwind label %lpad27

cleanup.action:                                   ; preds = %invoke.cont23
  %_M_p.i.i.i.i70 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp19, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %_M_p.i.i.i.i70, align 8, !tbaa !325
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp19, i64 0, i32 2
  %arraydecay.i.i.i.i71 = bitcast %union.anon* %20 to i8*
  %cmp.i.i.i72 = icmp eq i8* %19, %arraydecay.i.i.i.i71
  br i1 %cmp.i.i.i72, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit74, label %if.then.i.i73, !prof !329

if.then.i.i73:                                    ; preds = %cleanup.action
  call void @_ZdlPv(i8* %19) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit74

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit74: ; preds = %if.then.i.i73, %cleanup.action
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #24
  br label %cleanup.done41

cleanup.done41:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit74, %invoke.cont16
  %21 = phi i1 [ %call29, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit74 ], [ false, %invoke.cont16 ]
  %_M_p.i.i.i.i80 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %22 = load i8*, i8** %_M_p.i.i.i.i80, align 8, !tbaa !325
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %arraydecay.i.i.i.i81 = bitcast %union.anon* %23 to i8*
  %cmp.i.i.i82 = icmp eq i8* %22, %arraydecay.i.i.i.i81
  br i1 %cmp.i.i.i82, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit84, label %if.then.i.i83, !prof !329

if.then.i.i83:                                    ; preds = %cleanup.done41
  call void @_ZdlPv(i8* %22) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit84

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit84: ; preds = %if.then.i.i83, %cleanup.done41
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #24
  br i1 %21, label %invoke.cont60, label %if.then49, !prof !194

if.then49:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit84
  %puts = call i32 @puts(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @str, i64 0, i64 0))
  br label %invoke.cont60

lpad13:                                           ; preds = %invoke.cont11
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  %26 = extractvalue { i8*, i32 } %24, 1
  br label %ehcleanup66

lpad15:                                           ; preds = %invoke.cont14
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  %29 = extractvalue { i8*, i32 } %27, 1
  br label %ehcleanup46

lpad22:                                           ; preds = %land.rhs
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  %32 = extractvalue { i8*, i32 } %30, 1
  br label %cleanup.action37

lpad27:                                           ; preds = %invoke.cont23
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 1
  %35 = extractvalue { i8*, i32 } %33, 0
  %_M_p.i.i.i.i75 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp19, i64 0, i32 0, i32 0
  %36 = load i8*, i8** %_M_p.i.i.i.i75, align 8, !tbaa !325
  %37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp19, i64 0, i32 2
  %arraydecay.i.i.i.i76 = bitcast %union.anon* %37 to i8*
  %cmp.i.i.i77 = icmp eq i8* %36, %arraydecay.i.i.i.i76
  br i1 %cmp.i.i.i77, label %cleanup.action37, label %if.then.i.i78, !prof !329

if.then.i.i78:                                    ; preds = %lpad27
  call void @_ZdlPv(i8* %36) #24
  br label %cleanup.action37

cleanup.action37:                                 ; preds = %if.then.i.i78, %lpad27, %lpad22
  %ehselector.slot.0 = phi i32 [ %32, %lpad22 ], [ %34, %lpad27 ], [ %34, %if.then.i.i78 ]
  %exn.slot.0 = phi i8* [ %31, %lpad22 ], [ %35, %lpad27 ], [ %35, %if.then.i.i78 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #24
  br label %ehcleanup46

ehcleanup46:                                      ; preds = %cleanup.action37, %lpad15
  %ehselector.slot.1 = phi i32 [ %ehselector.slot.0, %cleanup.action37 ], [ %29, %lpad15 ]
  %exn.slot.1 = phi i8* [ %exn.slot.0, %cleanup.action37 ], [ %28, %lpad15 ]
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !325
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %39 to i8*
  %cmp.i.i.i = icmp eq i8* %38, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %ehcleanup66, label %if.then.i.i, !prof !329

if.then.i.i:                                      ; preds = %ehcleanup46
  call void @_ZdlPv(i8* %38) #24
  br label %ehcleanup66

invoke.cont60:                                    ; preds = %if.then49, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit84
  %call52 = call i8* @_Znwm(i64 200) #25
  %40 = bitcast i8* %call52 to %class.CAmbisonicProcessor*
  call void @_ZN19CAmbisonicProcessorC2Ev(%class.CAmbisonicProcessor* nonnull %40)
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %41 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  store i8* %call52, i8** %41, align 8, !tbaa !424
  %call57 = call zeroext i1 @_ZN19CAmbisonicProcessor9ConfigureEjbjj(%class.CAmbisonicProcessor* nonnull %40, i32 3, i1 zeroext true, i32 1024, i32 undef)
  %call58 = call i8* @_Znwm(i64 104) #25
  %42 = bitcast i8* %call58 to %class.CAmbisonicZoomer*
  %43 = bitcast i8* %call58 to i32 (...)***
  %44 = getelementptr inbounds i8, i8* %call58, i64 8
  %45 = bitcast i8* %44 to i32*
  store i32 0, i32* %45, align 8, !tbaa !97
  %46 = getelementptr inbounds i8, i8* %call58, i64 12
  store i8 0, i8* %46, align 4, !tbaa !100
  %47 = getelementptr inbounds i8, i8* %call58, i64 16
  %48 = bitcast i8* %47 to i32*
  store i32 0, i32* %48, align 8, !tbaa !101
  %49 = getelementptr inbounds i8, i8* %call58, i64 20
  store i8 0, i8* %49, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8, !tbaa !68
  %50 = getelementptr inbounds i8, i8* %call58, i64 24
  %51 = bitcast i8* %50 to i32 (...)***
  %52 = getelementptr inbounds i8, i8* %call58, i64 32
  %53 = bitcast i8* %52 to i32*
  store i32 0, i32* %53, align 8, !tbaa !97
  %54 = getelementptr inbounds i8, i8* %call58, i64 36
  store i8 0, i8* %54, align 4, !tbaa !100
  %55 = getelementptr inbounds i8, i8* %call58, i64 40
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 8, !tbaa !101
  %57 = getelementptr inbounds i8, i8* %call58, i64 44
  store i8 0, i8* %57, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17CAmbisonicDecoder, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8, !tbaa !68
  %m_nSpeakerSetUp.i.i = getelementptr inbounds i8, i8* %call58, i64 48
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSpeakerSetUp.i.i, i8 0, i64 44, i1 false) #24
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %58 = bitcast %class.CAmbisonicZoomer** %zoomer to i8**
  store i8* %call58, i8** %58, align 8, !tbaa !425
  %call65 = call zeroext i1 @_ZN16CAmbisonicZoomer9ConfigureEjbj(%class.CAmbisonicZoomer* nonnull %42, i32 3, i1 zeroext true, i32 0)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24
  ret void

ehcleanup66:                                      ; preds = %if.then.i.i, %ehcleanup46, %lpad13
  %ehselector.slot.2 = phi i32 [ %26, %lpad13 ], [ %ehselector.slot.1, %ehcleanup46 ], [ %ehselector.slot.1, %if.then.i.i ]
  %exn.slot.2 = phi i8* [ %25, %lpad13 ], [ %exn.slot.1, %ehcleanup46 ], [ %exn.slot.1, %if.then.i.i ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #24
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup66, %lpad
  %ehselector.slot.4 = phi i32 [ %ehselector.slot.2, %ehcleanup66 ], [ %4, %lpad ]
  %exn.slot.4 = phi i8* [ %exn.slot.2, %ehcleanup66 ], [ %3, %lpad ]
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.4, 0
  %lpad.val68 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.4, 1
  resume { i8*, i32 } %lpad.val68
}

; Function Attrs: uwtable
declare void @_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1ERKNSt7__cxx1112basic_stringIcS1_SaIcEEESt13_Ios_Openmode(%"class.std::basic_ofstream"*, %"class.std::__cxx11::basic_string"* dereferenceable(32), i32) unnamed_addr #3 align 2

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio17generateWAVHeaderEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %wavh = alloca %"struct.ILLIXR_AUDIO::WAVHeader_t", align 16
  %0 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %0) #24
  %1 = bitcast %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh to <4 x i32>*
  store <4 x i32> <i32 1179011410, i32 48000000, i32 1163280727, i32 544501094>, <4 x i32>* %1, align 16, !tbaa !72
  %subchunksize.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 4
  store i32 16, i32* %subchunksize.i, align 16, !tbaa !426
  %audioFormat.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 5
  store i16 1, i16* %audioFormat.i, align 4, !tbaa !428
  %NumChannels.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 6
  store i16 2, i16* %NumChannels.i, align 2, !tbaa !429
  %SampleRate.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 7
  store i32 48000, i32* %SampleRate.i, align 8, !tbaa !430
  %byteRate.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 8
  store i32 192000, i32* %byteRate.i, align 4, !tbaa !431
  %BlockAlign.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 9
  store i16 4, i16* %BlockAlign.i, align 16, !tbaa !432
  %BitsPerSample.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 10
  store i16 16, i16* %BitsPerSample.i, align 2, !tbaa !433
  %dataChunkID.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 11
  store i32 1635017060, i32* %dataChunkID.i, align 4, !tbaa !434
  %dataChunkSize.i = getelementptr inbounds %"struct.ILLIXR_AUDIO::WAVHeader_t", %"struct.ILLIXR_AUDIO::WAVHeader_t"* %wavh, i64 0, i32 12
  store i32 48000000, i32* %dataChunkSize.i, align 8, !tbaa !435
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %2 = bitcast %"class.std::basic_ofstream"** %outputFile to %"class.std::basic_ostream"**
  %3 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !420
  %call = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %3, i8* nonnull %0, i64 44)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %0) #24
  ret void
}

; Function Attrs: uwtable
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"*, i8*, %"class.std::allocator.39"* dereferenceable(1)) unnamed_addr #3 align 2

; Function Attrs: nounwind uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) unnamed_addr #7 align 2 !prof !175 {
entry:
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %0 = load i32, i32* %processType, align 8, !tbaa !417
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end, !prof !197

if.then:                                          ; preds = %entry
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %1 = bitcast %"class.std::basic_ofstream"** %outputFile to i8**
  %2 = load i8*, i8** %1, align 8, !tbaa !420
  tail call void @free(i8* %2) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %3 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !421
  %_M_finish.i10 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %3, i64 0, i32 0, i32 0, i32 1
  %4 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i10 to i64*
  %5 = load i64, i64* %4, align 8, !tbaa !436
  %6 = bitcast %"class.std::vector.43"* %3 to i64*
  %7 = load i64, i64* %6, align 8, !tbaa !439
  %cmp213 = icmp eq i64 %5, %7
  br i1 %cmp213, label %for.cond.cleanup, label %for.body, !prof !203

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %.in = phi %"class.std::vector.43"* [ %3, %if.end ], [ %21, %for.body ]
  %8 = bitcast %"class.std::vector.43"* %.in to i8*
  tail call void @free(i8* %8) #24
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %9 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !422
  tail call void @free(i8* %10) #24
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %11 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !423
  tail call void @free(i8* %12) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %13 = bitcast %class.CAmbisonicProcessor** %rotator to i8**
  %14 = load i8*, i8** %13, align 8, !tbaa !424
  tail call void @free(i8* %14) #24
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %15 = bitcast %class.CAmbisonicZoomer** %zoomer to i8**
  %16 = load i8*, i8** %15, align 8, !tbaa !425
  tail call void @free(i8* %16) #24
  ret void

for.body:                                         ; preds = %for.body, %if.end
  %17 = phi %"class.std::vector.43"* [ %21, %for.body ], [ %3, %if.end ]
  %conv15 = phi i64 [ %conv, %for.body ], [ 0, %if.end ]
  %soundIdx.014 = phi i32 [ %inc, %for.body ], [ 0, %if.end ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %17, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !439
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %18, i64 %conv15
  %19 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !76
  tail call void @free(i8* %20) #24
  %inc = add i32 %soundIdx.014, 1
  %conv = zext i32 %inc to i64
  %21 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !421
  %_M_finish.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %21, i64 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %23 = load i64, i64* %22, align 8, !tbaa !436
  %24 = bitcast %"class.std::vector.43"* %21 to i64*
  %25 = load i64, i64* %24, align 8, !tbaa !439
  %sub.ptr.sub.i = sub i64 %23, %25
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp2 = icmp ugt i64 %sub.ptr.div.i, %conv
  br i1 %cmp2, label %for.body, label %for.cond.cleanup, !prof !229
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #16 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !175 {
entry:
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::allocator.39", align 1
  %agg.tmp7 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp8 = alloca %"class.std::allocator.39", align 1
  %agg.tmp27 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp28 = alloca %"class.std::allocator.39", align 1
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %0 = load i32, i32* %processType, align 8, !tbaa !417
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %for.cond.preheader, !prof !197

for.cond.preheader:                               ; preds = %entry
  %1 = getelementptr inbounds %"class.std::allocator.39", %"class.std::allocator.39"* %ref.tmp28, i64 0, i32 0
  %_M_p.i.i.i.i172 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 0, i32 0
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp27, i64 0, i32 2
  %arraydecay.i.i.i.i173 = bitcast %union.anon* %2 to i8*
  %soundSrcs50 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  br label %for.body

if.then:                                          ; preds = %entry
  %call = tail call i8* @_Znwm(i64 4136) #25
  %3 = getelementptr inbounds %"class.std::allocator.39", %"class.std::allocator.39"* %ref.tmp, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), %"class.std::allocator.39"* nonnull dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  %4 = bitcast i8* %call to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %4, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32 3, i1 zeroext undef)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  %5 = ptrtoint i8* %call to i64
  %_M_p.i.i.i.i61 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %_M_p.i.i.i.i61, align 8, !tbaa !325
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %arraydecay.i.i.i.i62 = bitcast %union.anon* %7 to i8*
  %cmp.i.i.i63 = icmp eq i8* %6, %arraydecay.i.i.i.i62
  br i1 %cmp.i.i.i63, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65, label %if.then.i.i64, !prof !329

if.then.i.i64:                                    ; preds = %invoke.cont3
  call void @_ZdlPv(i8* %6) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65: ; preds = %if.then.i.i64, %invoke.cont3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24
  %srcPos.i = getelementptr inbounds i8, i8* %call, i64 4120
  %8 = bitcast i8* %srcPos.i to i32*
  store i32 -1110651699, i32* %8, align 8, !tbaa !411
  %fElevation4.i = getelementptr inbounds i8, i8* %call, i64 4124
  %9 = bitcast i8* %fElevation4.i to i32*
  store i32 1070134723, i32* %9, align 4, !tbaa !412
  %fDistance6.i = getelementptr inbounds i8, i8* %call, i64 4128
  %10 = bitcast i8* %fDistance6.i to i32*
  store i32 1065353216, i32* %10, align 8, !tbaa !413
  %BEncoder.i = getelementptr inbounds i8, i8* %call, i64 4112
  %11 = bitcast i8* %BEncoder.i to %class.CAmbisonicEncoderDist**
  %12 = bitcast i8* %BEncoder.i to %class.CAmbisonicSource**
  %13 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %12, align 8, !tbaa !410
  %agg.tmp.sroa.0.0..sroa_cast.i = bitcast i8* %srcPos.i to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i, align 8
  %14 = bitcast %class.CAmbisonicSource* %13 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %14, align 8, !tbaa !68
  %vfn.i = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i, i64 5
  %15 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i, align 8
  call void %15(%class.CAmbisonicSource* %13, <2 x float> %agg.tmp.sroa.0.0.copyload.i, float 1.000000e+00)
  %16 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %11, align 8, !tbaa !410
  %17 = bitcast %class.CAmbisonicEncoderDist* %16 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %17, align 8, !tbaa !68
  %vfn10.i = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i, i64 4
  %18 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i, align 8
  call void %18(%class.CAmbisonicEncoderDist* %16)
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %19 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !421
  %_M_finish.i66 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %19, i64 0, i32 0, i32 0, i32 1
  %20 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i66, align 8, !tbaa !436
  %_M_end_of_storage.i67 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %19, i64 0, i32 0, i32 0, i32 2
  %21 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i67, align 8, !tbaa !440
  %cmp.i68 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %20, %21
  br i1 %cmp.i68, label %if.else.i81, label %if.then.i70, !prof !441

if.then.i70:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
  %22 = bitcast %"class.ILLIXR_AUDIO::Sound"** %20 to i64*
  store i64 %5, i64* %22, align 8, !tbaa !76
  %23 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i66, align 8, !tbaa !436
  %incdec.ptr.i69 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %23, i64 1
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit104

if.else.i81:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit65
  %24 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %20 to i64
  %25 = bitcast %"class.std::vector.43"* %19 to i64*
  %26 = load i64, i64* %25, align 8, !tbaa !439
  %sub.ptr.sub.i21.i.i.i71 = sub i64 %24, %26
  %sub.ptr.div.i22.i.i.i72 = ashr exact i64 %sub.ptr.sub.i21.i.i.i71, 3
  %cmp.i.i.i.i73 = icmp eq i64 %sub.ptr.sub.i21.i.i.i71, 0
  %.sroa.speculated.i.i.i74 = select i1 %cmp.i.i.i.i73, i64 1, i64 %sub.ptr.div.i22.i.i.i72
  %add.i.i.i75 = add nsw i64 %.sroa.speculated.i.i.i74, %sub.ptr.div.i22.i.i.i72
  %cmp7.i.i.i76 = icmp ult i64 %add.i.i.i75, %sub.ptr.div.i22.i.i.i72
  %cmp9.i.i.i77 = icmp ugt i64 %add.i.i.i75, 2305843009213693951
  %or.cond.i.i.i78 = or i1 %cmp7.i.i.i76, %cmp9.i.i.i77
  %cond.i.i.i79 = select i1 %or.cond.i.i.i78, i64 2305843009213693951, i64 %add.i.i.i75, !prof !442
  %cmp.i56.i.i80 = icmp eq i64 %cond.i.i.i79, 0
  br i1 %cmp.i56.i.i80, label %invoke.cont.i.i95, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i88, !prof !443

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i88: ; preds = %if.else.i81
  %27 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i66 to i64*
  %mul.i.i.i.i.i82 = shl i64 %cond.i.i.i79, 3
  %call2.i.i.i.i.i83 = call i8* @_Znwm(i64 %mul.i.i.i.i.i82)
  %28 = bitcast i8* %call2.i.i.i.i.i83 to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i84 = load i64, i64* %27, align 8, !tbaa !436
  %.pre65.i.i85 = load i64, i64* %25, align 8, !tbaa !439
  %.pre66.i.i86 = sub i64 %.pre.i.i84, %.pre65.i.i85
  %.pre67.i.i87 = ashr exact i64 %.pre66.i.i86, 3
  br label %invoke.cont.i.i95

invoke.cont.i.i95:                                ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i88, %if.else.i81
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i89 = phi i64 [ %.pre67.i.i87, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i88 ], [ %sub.ptr.div.i22.i.i.i72, %if.else.i81 ]
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i90 = phi i64 [ %.pre66.i.i86, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i88 ], [ %sub.ptr.sub.i21.i.i.i71, %if.else.i81 ]
  %.in.i.i91 = phi i64 [ %.pre65.i.i85, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i88 ], [ %26, %if.else.i81 ]
  %29 = phi i8* [ %call2.i.i.i.i.i83, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i88 ], [ null, %if.else.i81 ]
  %cond.i57.i.i92 = phi %"class.ILLIXR_AUDIO::Sound"** [ %28, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i88 ], [ null, %if.else.i81 ]
  %add.ptr.i.i93 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i92, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i89
  %30 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i93 to i64*
  store i64 %5, i64* %30, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i.i.i.i.i94 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i90, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i94, label %invoke.cont8.i.i100, label %if.then.i.i.i.i.i.i.i.i.i.i96, !prof !204

if.then.i.i.i.i.i.i.i.i.i.i96:                    ; preds = %invoke.cont.i.i95
  %31 = inttoptr i64 %.in.i.i91 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %31, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i90, i1 false) #24
  br label %invoke.cont8.i.i100

invoke.cont8.i.i100:                              ; preds = %if.then.i.i.i.i.i.i.i.i.i.i96, %invoke.cont.i.i95
  %incdec.ptr.i.i98 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i93, i64 1
  %tobool.i62.i.i99 = icmp eq i64 %.in.i.i91, 0
  br i1 %tobool.i62.i.i99, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i103, label %if.then.i63.i.i101, !prof !204

if.then.i63.i.i101:                               ; preds = %invoke.cont8.i.i100
  %32 = inttoptr i64 %.in.i.i91 to i8*
  call void @_ZdlPv(i8* nonnull %32) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i103

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i103: ; preds = %if.then.i63.i.i101, %invoke.cont8.i.i100
  %33 = bitcast %"class.std::vector.43"* %19 to i8**
  store i8* %29, i8** %33, align 8, !tbaa !439
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i98, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i66, align 8, !tbaa !436
  %add.ptr33.i.i102 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i92, i64 %cond.i.i.i79
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit104

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit104: ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i103, %if.then.i70
  %_M_finish.i66.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_finish.i66, %if.then.i70 ], [ %_M_end_of_storage.i67, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i103 ]
  %incdec.ptr.i69.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %incdec.ptr.i69, %if.then.i70 ], [ %add.ptr33.i.i102, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i103 ]
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i69.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i66.sink, align 8, !tbaa !76
  %call6 = call i8* @_Znwm(i64 4136) #25
  %34 = getelementptr inbounds %"class.std::allocator.39", %"class.std::allocator.39"* %ref.tmp8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %34) #24
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), %"class.std::allocator.39"* nonnull dereferenceable(1) %ref.tmp8)
          to label %invoke.cont10 unwind label %lpad9

invoke.cont10:                                    ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit104
  %35 = bitcast i8* %call6 to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %35, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp7, i32 3, i1 zeroext undef)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %invoke.cont10
  %36 = ptrtoint i8* %call6 to i64
  %_M_p.i.i.i.i105 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 0, i32 0
  %37 = load i8*, i8** %_M_p.i.i.i.i105, align 8, !tbaa !325
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 2
  %arraydecay.i.i.i.i106 = bitcast %union.anon* %38 to i8*
  %cmp.i.i.i107 = icmp eq i8* %37, %arraydecay.i.i.i.i106
  br i1 %cmp.i.i.i107, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit109, label %if.then.i.i108, !prof !329

if.then.i.i108:                                   ; preds = %invoke.cont12
  call void @_ZdlPv(i8* %37) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit109

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit109: ; preds = %if.then.i.i108, %invoke.cont12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %34) #24
  %srcPos.i110 = getelementptr inbounds i8, i8* %call6, i64 4120
  %39 = bitcast i8* %srcPos.i110 to i32*
  store i32 1065353216, i32* %39, align 8, !tbaa !411
  %fElevation4.i112 = getelementptr inbounds i8, i8* %call6, i64 4124
  %40 = bitcast i8* %fElevation4.i112 to i32*
  store i32 0, i32* %40, align 4, !tbaa !412
  %fDistance6.i114 = getelementptr inbounds i8, i8* %call6, i64 4128
  %41 = bitcast i8* %fDistance6.i114 to i32*
  store i32 1084227584, i32* %41, align 8, !tbaa !413
  %BEncoder.i115 = getelementptr inbounds i8, i8* %call6, i64 4112
  %42 = bitcast i8* %BEncoder.i115 to %class.CAmbisonicEncoderDist**
  %43 = bitcast i8* %BEncoder.i115 to %class.CAmbisonicSource**
  %44 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %43, align 8, !tbaa !410
  %agg.tmp.sroa.0.0..sroa_cast.i116 = bitcast i8* %srcPos.i110 to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i117 = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i116, align 8
  %45 = bitcast %class.CAmbisonicSource* %44 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i119 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %45, align 8, !tbaa !68
  %vfn.i120 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i119, i64 5
  %46 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i120, align 8
  call void %46(%class.CAmbisonicSource* %44, <2 x float> %agg.tmp.sroa.0.0.copyload.i117, float 5.000000e+00)
  %47 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %42, align 8, !tbaa !410
  %48 = bitcast %class.CAmbisonicEncoderDist* %47 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i121 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %48, align 8, !tbaa !68
  %vfn10.i122 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i121, i64 4
  %49 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i122, align 8
  call void %49(%class.CAmbisonicEncoderDist* %47)
  %50 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !421
  %_M_finish.i123 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %50, i64 0, i32 0, i32 0, i32 1
  %51 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i123, align 8, !tbaa !436
  %_M_end_of_storage.i124 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %50, i64 0, i32 0, i32 0, i32 2
  %52 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i124, align 8, !tbaa !440
  %cmp.i125 = icmp eq %"class.ILLIXR_AUDIO::Sound"** %51, %52
  br i1 %cmp.i125, label %if.else.i138, label %if.then.i127, !prof !441

if.then.i127:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit109
  %53 = bitcast %"class.ILLIXR_AUDIO::Sound"** %51 to i64*
  store i64 %36, i64* %53, align 8, !tbaa !76
  %54 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i123, align 8, !tbaa !436
  %incdec.ptr.i126 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %54, i64 1
  br label %if.end.sink.split

if.else.i138:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit109
  %55 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %51 to i64
  %56 = bitcast %"class.std::vector.43"* %50 to i64*
  %57 = load i64, i64* %56, align 8, !tbaa !439
  %sub.ptr.sub.i21.i.i.i128 = sub i64 %55, %57
  %sub.ptr.div.i22.i.i.i129 = ashr exact i64 %sub.ptr.sub.i21.i.i.i128, 3
  %cmp.i.i.i.i130 = icmp eq i64 %sub.ptr.sub.i21.i.i.i128, 0
  %.sroa.speculated.i.i.i131 = select i1 %cmp.i.i.i.i130, i64 1, i64 %sub.ptr.div.i22.i.i.i129
  %add.i.i.i132 = add nsw i64 %.sroa.speculated.i.i.i131, %sub.ptr.div.i22.i.i.i129
  %cmp7.i.i.i133 = icmp ult i64 %add.i.i.i132, %sub.ptr.div.i22.i.i.i129
  %cmp9.i.i.i134 = icmp ugt i64 %add.i.i.i132, 2305843009213693951
  %or.cond.i.i.i135 = or i1 %cmp7.i.i.i133, %cmp9.i.i.i134
  %cond.i.i.i136 = select i1 %or.cond.i.i.i135, i64 2305843009213693951, i64 %add.i.i.i132, !prof !442
  %cmp.i56.i.i137 = icmp eq i64 %cond.i.i.i136, 0
  br i1 %cmp.i56.i.i137, label %invoke.cont.i.i152, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i145, !prof !443

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i145: ; preds = %if.else.i138
  %58 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i123 to i64*
  %mul.i.i.i.i.i139 = shl i64 %cond.i.i.i136, 3
  %call2.i.i.i.i.i140 = call i8* @_Znwm(i64 %mul.i.i.i.i.i139)
  %59 = bitcast i8* %call2.i.i.i.i.i140 to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i141 = load i64, i64* %58, align 8, !tbaa !436
  %.pre65.i.i142 = load i64, i64* %56, align 8, !tbaa !439
  %.pre66.i.i143 = sub i64 %.pre.i.i141, %.pre65.i.i142
  %.pre67.i.i144 = ashr exact i64 %.pre66.i.i143, 3
  br label %invoke.cont.i.i152

invoke.cont.i.i152:                               ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i145, %if.else.i138
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i146 = phi i64 [ %.pre67.i.i144, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i145 ], [ %sub.ptr.div.i22.i.i.i129, %if.else.i138 ]
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i147 = phi i64 [ %.pre66.i.i143, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i145 ], [ %sub.ptr.sub.i21.i.i.i128, %if.else.i138 ]
  %.in.i.i148 = phi i64 [ %.pre65.i.i142, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i145 ], [ %57, %if.else.i138 ]
  %60 = phi i8* [ %call2.i.i.i.i.i140, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i145 ], [ null, %if.else.i138 ]
  %cond.i57.i.i149 = phi %"class.ILLIXR_AUDIO::Sound"** [ %59, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i145 ], [ null, %if.else.i138 ]
  %add.ptr.i.i150 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i149, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i146
  %61 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i150 to i64*
  store i64 %36, i64* %61, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i.i.i.i.i151 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i147, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i151, label %invoke.cont8.i.i157, label %if.then.i.i.i.i.i.i.i.i.i.i153, !prof !204

if.then.i.i.i.i.i.i.i.i.i.i153:                   ; preds = %invoke.cont.i.i152
  %62 = inttoptr i64 %.in.i.i148 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %62, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i147, i1 false) #24
  br label %invoke.cont8.i.i157

invoke.cont8.i.i157:                              ; preds = %if.then.i.i.i.i.i.i.i.i.i.i153, %invoke.cont.i.i152
  %incdec.ptr.i.i155 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i150, i64 1
  %tobool.i62.i.i156 = icmp eq i64 %.in.i.i148, 0
  br i1 %tobool.i62.i.i156, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i160, label %if.then.i63.i.i158, !prof !204

if.then.i63.i.i158:                               ; preds = %invoke.cont8.i.i157
  %63 = inttoptr i64 %.in.i.i148 to i8*
  call void @_ZdlPv(i8* nonnull %63) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i160

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i160: ; preds = %if.then.i63.i.i158, %invoke.cont8.i.i157
  %64 = bitcast %"class.std::vector.43"* %50 to i8**
  store i8* %60, i8** %64, align 8, !tbaa !439
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i155, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i123, align 8, !tbaa !436
  %add.ptr33.i.i159 = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i149, i64 %cond.i.i.i136
  br label %if.end.sink.split

lpad:                                             ; preds = %if.then
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  %67 = extractvalue { i8*, i32 } %65, 1
  br label %ehcleanup52

lpad2:                                            ; preds = %invoke.cont
  %68 = landingpad { i8*, i32 }
          cleanup
  %69 = extractvalue { i8*, i32 } %68, 0
  %70 = extractvalue { i8*, i32 } %68, 1
  %_M_p.i.i.i.i162 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %71 = load i8*, i8** %_M_p.i.i.i.i162, align 8, !tbaa !325
  %72 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %arraydecay.i.i.i.i163 = bitcast %union.anon* %72 to i8*
  %cmp.i.i.i164 = icmp eq i8* %71, %arraydecay.i.i.i.i163
  br i1 %cmp.i.i.i164, label %ehcleanup52, label %if.then.i.i165, !prof !329

if.then.i.i165:                                   ; preds = %lpad2
  call void @_ZdlPv(i8* %71) #24
  br label %ehcleanup52

lpad9:                                            ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit104
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  %75 = extractvalue { i8*, i32 } %73, 1
  br label %ehcleanup52

lpad11:                                           ; preds = %invoke.cont10
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  %78 = extractvalue { i8*, i32 } %76, 1
  %_M_p.i.i.i.i167 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 0, i32 0
  %79 = load i8*, i8** %_M_p.i.i.i.i167, align 8, !tbaa !325
  %80 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp7, i64 0, i32 2
  %arraydecay.i.i.i.i168 = bitcast %union.anon* %80 to i8*
  %cmp.i.i.i169 = icmp eq i8* %79, %arraydecay.i.i.i.i168
  br i1 %cmp.i.i.i169, label %ehcleanup52, label %if.then.i.i170, !prof !329

if.then.i.i170:                                   ; preds = %lpad11
  call void @_ZdlPv(i8* %79) #24
  br label %ehcleanup52

for.body:                                         ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit, %for.cond.preheader
  %i.0214 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit ]
  %call26 = call i8* @_Znwm(i64 4136) #25
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1) #24
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp27, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), %"class.std::allocator.39"* nonnull dereferenceable(1) %ref.tmp28)
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %for.body
  %81 = bitcast i8* %call26 to %"class.ILLIXR_AUDIO::Sound"*
  invoke void @_ZN12ILLIXR_AUDIO5SoundC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjb(%"class.ILLIXR_AUDIO::Sound"* nonnull %81, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp27, i32 3, i1 zeroext undef)
          to label %invoke.cont32 unwind label %lpad31

invoke.cont32:                                    ; preds = %invoke.cont30
  %82 = ptrtoint i8* %call26 to i64
  %83 = load i8*, i8** %_M_p.i.i.i.i172, align 8, !tbaa !325
  %cmp.i.i.i174 = icmp eq i8* %83, %arraydecay.i.i.i.i173
  br i1 %cmp.i.i.i174, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit176, label %if.then.i.i175, !prof !329

if.then.i.i175:                                   ; preds = %invoke.cont32
  call void @_ZdlPv(i8* %83) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit176

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit176: ; preds = %if.then.i.i175, %invoke.cont32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1) #24
  %conv = uitofp i32 %i.0214 to double
  %mul = fmul double %conv, -1.000000e-01
  %conv41 = fptrunc double %mul to float
  %mul44 = fmul double %conv, 1.570000e+00
  %conv45 = fptrunc double %mul44 to float
  %conv48 = uitofp i32 %i.0214 to float
  %srcPos.i177 = getelementptr inbounds i8, i8* %call26, i64 4120
  %84 = bitcast i8* %srcPos.i177 to float*
  store float %conv41, float* %84, align 8, !tbaa !411
  %fElevation4.i179 = getelementptr inbounds i8, i8* %call26, i64 4124
  %85 = bitcast i8* %fElevation4.i179 to float*
  store float %conv45, float* %85, align 4, !tbaa !412
  %fDistance6.i181 = getelementptr inbounds i8, i8* %call26, i64 4128
  %86 = bitcast i8* %fDistance6.i181 to float*
  store float %conv48, float* %86, align 8, !tbaa !413
  %BEncoder.i182 = getelementptr inbounds i8, i8* %call26, i64 4112
  %87 = bitcast i8* %BEncoder.i182 to %class.CAmbisonicEncoderDist**
  %88 = bitcast i8* %BEncoder.i182 to %class.CAmbisonicSource**
  %89 = load %class.CAmbisonicSource*, %class.CAmbisonicSource** %88, align 8, !tbaa !410
  %agg.tmp.sroa.0.0..sroa_cast.i183 = bitcast i8* %srcPos.i177 to <2 x float>*
  %agg.tmp.sroa.0.0.copyload.i184 = load <2 x float>, <2 x float>* %agg.tmp.sroa.0.0..sroa_cast.i183, align 8
  %90 = bitcast %class.CAmbisonicSource* %89 to void (%class.CAmbisonicSource*, <2 x float>, float)***
  %vtable.i186 = load void (%class.CAmbisonicSource*, <2 x float>, float)**, void (%class.CAmbisonicSource*, <2 x float>, float)*** %90, align 8, !tbaa !68
  %vfn.i187 = getelementptr inbounds void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vtable.i186, i64 5
  %91 = load void (%class.CAmbisonicSource*, <2 x float>, float)*, void (%class.CAmbisonicSource*, <2 x float>, float)** %vfn.i187, align 8
  call void %91(%class.CAmbisonicSource* %89, <2 x float> %agg.tmp.sroa.0.0.copyload.i184, float %conv48)
  %92 = load %class.CAmbisonicEncoderDist*, %class.CAmbisonicEncoderDist** %87, align 8, !tbaa !410
  %93 = bitcast %class.CAmbisonicEncoderDist* %92 to void (%class.CAmbisonicEncoderDist*)***
  %vtable9.i188 = load void (%class.CAmbisonicEncoderDist*)**, void (%class.CAmbisonicEncoderDist*)*** %93, align 8, !tbaa !68
  %vfn10.i189 = getelementptr inbounds void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vtable9.i188, i64 4
  %94 = load void (%class.CAmbisonicEncoderDist*)*, void (%class.CAmbisonicEncoderDist*)** %vfn10.i189, align 8
  call void %94(%class.CAmbisonicEncoderDist* %92)
  %95 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs50, align 8, !tbaa !421
  %_M_finish.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %95, i64 0, i32 0, i32 0, i32 1
  %96 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !436
  %_M_end_of_storage.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %95, i64 0, i32 0, i32 0, i32 2
  %97 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i, align 8, !tbaa !440
  %cmp.i = icmp eq %"class.ILLIXR_AUDIO::Sound"** %96, %97
  br i1 %cmp.i, label %if.else.i, label %if.then.i, !prof !441

if.then.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit176
  %98 = bitcast %"class.ILLIXR_AUDIO::Sound"** %96 to i64*
  store i64 %82, i64* %98, align 8, !tbaa !76
  %99 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !436
  %incdec.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %99, i64 1
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit

if.else.i:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit176
  %100 = ptrtoint %"class.ILLIXR_AUDIO::Sound"** %96 to i64
  %101 = bitcast %"class.std::vector.43"* %95 to i64*
  %102 = load i64, i64* %101, align 8, !tbaa !439
  %sub.ptr.sub.i21.i.i.i = sub i64 %100, %102
  %sub.ptr.div.i22.i.i.i = ashr exact i64 %sub.ptr.sub.i21.i.i.i, 3
  %cmp.i.i.i.i = icmp eq i64 %sub.ptr.sub.i21.i.i.i, 0
  %.sroa.speculated.i.i.i = select i1 %cmp.i.i.i.i, i64 1, i64 %sub.ptr.div.i22.i.i.i
  %add.i.i.i = add nsw i64 %.sroa.speculated.i.i.i, %sub.ptr.div.i22.i.i.i
  %cmp7.i.i.i = icmp ult i64 %add.i.i.i, %sub.ptr.div.i22.i.i.i
  %cmp9.i.i.i = icmp ugt i64 %add.i.i.i, 2305843009213693951
  %or.cond.i.i.i = or i1 %cmp7.i.i.i, %cmp9.i.i.i
  %cond.i.i.i = select i1 %or.cond.i.i.i, i64 2305843009213693951, i64 %add.i.i.i, !prof !442
  %cmp.i56.i.i = icmp eq i64 %cond.i.i.i, 0
  br i1 %cmp.i56.i.i, label %invoke.cont.i.i, label %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i, !prof !443

_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i: ; preds = %if.else.i
  %103 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %mul.i.i.i.i.i = shl i64 %cond.i.i.i, 3
  %call2.i.i.i.i.i = call i8* @_Znwm(i64 %mul.i.i.i.i.i)
  %104 = bitcast i8* %call2.i.i.i.i.i to %"class.ILLIXR_AUDIO::Sound"**
  %.pre.i.i = load i64, i64* %103, align 8, !tbaa !436
  %.pre65.i.i = load i64, i64* %101, align 8, !tbaa !439
  %.pre66.i.i = sub i64 %.pre.i.i, %.pre65.i.i
  %.pre67.i.i = ashr exact i64 %.pre66.i.i, 3
  br label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i, %if.else.i
  %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i = phi i64 [ %.pre67.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ %sub.ptr.div.i22.i.i.i, %if.else.i ]
  %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i = phi i64 [ %.pre66.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ %sub.ptr.sub.i21.i.i.i, %if.else.i ]
  %.in.i.i = phi i64 [ %.pre65.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ %102, %if.else.i ]
  %105 = phi i8* [ %call2.i.i.i.i.i, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ null, %if.else.i ]
  %cond.i57.i.i = phi %"class.ILLIXR_AUDIO::Sound"** [ %104, %_ZNSt16allocator_traitsISaIPN12ILLIXR_AUDIO5SoundEEE8allocateERS3_m.exit.i.i.i ], [ null, %if.else.i ]
  %add.ptr.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i, i64 %sub.ptr.div.i.i.i.i.i.i.i.i.i.pre-phi.i
  %106 = bitcast %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i to i64*
  store i64 %82, i64* %106, align 8, !tbaa !76
  %tobool.i.i.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i.i.i, label %invoke.cont8.i.i, label %if.then.i.i.i.i.i.i.i.i.i.i, !prof !204

if.then.i.i.i.i.i.i.i.i.i.i:                      ; preds = %invoke.cont.i.i
  %107 = inttoptr i64 %.in.i.i to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %107, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i.i.pre-phi.i, i1 false) #24
  br label %invoke.cont8.i.i

invoke.cont8.i.i:                                 ; preds = %if.then.i.i.i.i.i.i.i.i.i.i, %invoke.cont.i.i
  %incdec.ptr.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i.i, i64 1
  %tobool.i62.i.i = icmp eq i64 %.in.i.i, 0
  br i1 %tobool.i62.i.i, label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i, label %if.then.i63.i.i, !prof !204

if.then.i63.i.i:                                  ; preds = %invoke.cont8.i.i
  %108 = inttoptr i64 %.in.i.i to i8*
  call void @_ZdlPv(i8* nonnull %108) #24
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i: ; preds = %if.then.i63.i.i, %invoke.cont8.i.i
  %109 = bitcast %"class.std::vector.43"* %95 to i8**
  store i8* %105, i8** %109, align 8, !tbaa !439
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.i, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i, align 8, !tbaa !436
  %add.ptr33.i.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %cond.i57.i.i, i64 %cond.i.i.i
  br label %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit

_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit: ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i, %if.then.i
  %_M_finish.i.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_finish.i, %if.then.i ], [ %_M_end_of_storage.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i ]
  %incdec.ptr.i.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %incdec.ptr.i, %if.then.i ], [ %add.ptr33.i.i, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i ]
  store %"class.ILLIXR_AUDIO::Sound"** %incdec.ptr.i.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i.sink, align 8, !tbaa !76
  %inc = add nuw nsw i32 %i.0214, 1
  %exitcond = icmp eq i32 %inc, 16
  br i1 %exitcond, label %if.end, label %for.body, !prof !203

lpad29:                                           ; preds = %for.body
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  %112 = extractvalue { i8*, i32 } %110, 1
  br label %ehcleanup52

lpad31:                                           ; preds = %invoke.cont30
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  %115 = extractvalue { i8*, i32 } %113, 1
  %116 = load i8*, i8** %_M_p.i.i.i.i172, align 8, !tbaa !325
  %cmp.i.i.i = icmp eq i8* %116, %arraydecay.i.i.i.i173
  br i1 %cmp.i.i.i, label %ehcleanup52, label %if.then.i.i, !prof !329

if.then.i.i:                                      ; preds = %lpad31
  call void @_ZdlPv(i8* %116) #24
  br label %ehcleanup52

if.end.sink.split:                                ; preds = %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i160, %if.then.i127
  %_M_end_of_storage.i124.sink = phi %"class.ILLIXR_AUDIO::Sound"*** [ %_M_end_of_storage.i124, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i160 ], [ %_M_finish.i123, %if.then.i127 ]
  %add.ptr33.i.i159.sink = phi %"class.ILLIXR_AUDIO::Sound"** [ %add.ptr33.i.i159, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_.exit.i160 ], [ %incdec.ptr.i126, %if.then.i127 ]
  store %"class.ILLIXR_AUDIO::Sound"** %add.ptr33.i.i159.sink, %"class.ILLIXR_AUDIO::Sound"*** %_M_end_of_storage.i124.sink, align 8, !tbaa !76
  br label %if.end

if.end:                                           ; preds = %if.end.sink.split, %_ZNSt6vectorIPN12ILLIXR_AUDIO5SoundESaIS2_EE9push_backERKS2_.exit
  ret void

ehcleanup52:                                      ; preds = %if.then.i.i, %lpad31, %lpad29, %if.then.i.i170, %lpad11, %lpad9, %if.then.i.i165, %lpad2, %lpad
  %.sink = phi i8* [ %3, %if.then.i.i165 ], [ %3, %lpad2 ], [ %3, %lpad ], [ %34, %if.then.i.i170 ], [ %34, %lpad11 ], [ %34, %lpad9 ], [ %1, %if.then.i.i ], [ %1, %lpad31 ], [ %1, %lpad29 ]
  %call6.sink = phi i8* [ %call, %if.then.i.i165 ], [ %call, %lpad2 ], [ %call, %lpad ], [ %call6, %if.then.i.i170 ], [ %call6, %lpad11 ], [ %call6, %lpad9 ], [ %call26, %if.then.i.i ], [ %call26, %lpad31 ], [ %call26, %lpad29 ]
  %exn.slot.3 = phi i8* [ %69, %if.then.i.i165 ], [ %69, %lpad2 ], [ %66, %lpad ], [ %77, %if.then.i.i170 ], [ %77, %lpad11 ], [ %74, %lpad9 ], [ %114, %if.then.i.i ], [ %114, %lpad31 ], [ %111, %lpad29 ]
  %ehselector.slot.3 = phi i32 [ %70, %if.then.i.i165 ], [ %70, %lpad2 ], [ %67, %lpad ], [ %78, %if.then.i.i170 ], [ %78, %lpad11 ], [ %75, %lpad9 ], [ %115, %if.then.i.i ], [ %115, %lpad31 ], [ %112, %lpad29 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %.sink) #24
  call void @_ZdlPv(i8* nonnull %call6.sink) #26
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.3, 0
  %lpad.val54 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.3, 1
  resume { i8*, i32 } %lpad.val54
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio12processBlockEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !103 {
entry:
  %sumBF = alloca %class.CBFormat, align 8
  %call = tail call i8* @_Znam(i64 16) #25
  %0 = bitcast i8* %call to float**
  %call2 = tail call i8* @_Znam(i64 4096) #25
  %1 = bitcast i8* %call to i8**
  store i8* %call2, i8** %1, align 8, !tbaa !76
  %call3 = tail call i8* @_Znam(i64 4096) #25
  %arrayidx4 = getelementptr inbounds i8, i8* %call, i64 8
  %2 = bitcast i8* %arrayidx4 to float**
  %3 = bitcast i8* %arrayidx4 to i8**
  store i8* %call3, i8** %3, align 8, !tbaa !76
  %4 = bitcast %class.CBFormat* %sumBF to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #24
  %5 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 1
  store i32 0, i32* %6, align 8, !tbaa !97
  %7 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 2
  store i8 0, i8* %7, align 4, !tbaa !100
  %8 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 4
  store i32 0, i32* %8, align 8, !tbaa !101
  %9 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 0, i32 5
  store i8 0, i8* %9, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !68
  %m_nSamples.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 1
  %10 = bitcast i32* %m_nSamples.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #24
  %call5 = invoke zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %sumBF, i32 3, i1 zeroext true, i32 1024)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %processType = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 0
  %11 = load i32, i32* %processType, align 8, !tbaa !417
  %cmp = icmp eq i32 %11, 2
  br i1 %cmp, label %if.then9, label %if.then

if.then:                                          ; preds = %invoke.cont
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, %class.CBFormat* nonnull dereferenceable(64) %sumBF)
          to label %if.end unwind label %lpad

lpad:                                             ; preds = %if.then16, %invoke.cont11, %invoke.cont10, %if.then9, %if.then, %entry
  %12 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !68
  %_M_head_impl.i.i.i.i.i.i38 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %13 = load float**, float*** %_M_head_impl.i.i.i.i.i.i38, align 8, !tbaa !76
  %cmp.i.i39 = icmp eq float** %13, null
  br i1 %cmp.i.i39, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i40

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i40:   ; preds = %lpad
  %14 = bitcast float** %13 to i8*
  call void @_ZdaPv(i8* %14) #26
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i40, %lpad
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i38, align 8, !tbaa !76
  %_M_start.i.i.i41 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load float*, float** %_M_start.i.i.i41, align 8, !tbaa !116
  %tobool.i.i.i.i42 = icmp eq float* %15, null
  br i1 %tobool.i.i.i.i42, label %_ZN8CBFormatD2Ev.exit45, label %if.then.i.i.i.i44, !prof !154

if.then.i.i.i.i44:                                ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43
  %16 = bitcast float* %15 to i8*
  call void @_ZdlPv(i8* nonnull %16) #24
  br label %_ZN8CBFormatD2Ev.exit45

_ZN8CBFormatD2Ev.exit45:                          ; preds = %if.then.i.i.i.i44, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i43
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #24
  resume { i8*, i32 } %12

if.end:                                           ; preds = %if.then
  %.pr = load i32, i32* %processType, align 8, !tbaa !417
  %cmp8 = icmp eq i32 %.pr, 1
  br i1 %cmp8, label %if.end18, label %if.then9

if.then9:                                         ; preds = %if.end, %invoke.cont
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, %class.CBFormat* nonnull dereferenceable(64) %sumBF)
          to label %invoke.cont10 unwind label %lpad

invoke.cont10:                                    ; preds = %if.then9
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 3
  %17 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder0, align 8, !tbaa !422
  invoke void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %17, %class.CBFormat* nonnull %sumBF, float** nonnull %0)
          to label %invoke.cont11 unwind label %lpad

invoke.cont11:                                    ; preds = %invoke.cont10
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 4
  %18 = load %class.CAmbisonicBinauralizer*, %class.CAmbisonicBinauralizer** %decoder1, align 8, !tbaa !423
  invoke void @_ZN22CAmbisonicBinauralizer7ProcessEP8CBFormatPPf(%class.CAmbisonicBinauralizer* %18, %class.CBFormat* nonnull %sumBF, float** nonnull %0)
          to label %if.end13 unwind label %lpad

if.end13:                                         ; preds = %invoke.cont11
  %.pr47 = load i32, i32* %processType, align 8, !tbaa !417
  %cmp15 = icmp eq i32 %.pr47, 0
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end13
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %this, float** nonnull %0)
          to label %if.end18 unwind label %lpad

if.end18:                                         ; preds = %if.then16, %if.end13, %if.end
  %19 = load float*, float** %0, align 8, !tbaa !76
  %isnull = icmp eq float* %19, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.end18
  %20 = bitcast float* %19 to i8*
  call void @_ZdaPv(i8* %20) #26
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.end18
  %21 = load float*, float** %2, align 8, !tbaa !76
  %isnull21 = icmp eq float* %21, null
  br i1 %isnull21, label %delete.notnull25, label %delete.notnull22

delete.notnull22:                                 ; preds = %delete.end
  %22 = bitcast float* %21 to i8*
  call void @_ZdaPv(i8* %22) #26
  br label %delete.notnull25

delete.notnull25:                                 ; preds = %delete.notnull22, %delete.end
  call void @_ZdaPv(i8* nonnull %call) #26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !68
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %23 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %cmp.i.i = icmp eq float** %23, null
  br i1 %cmp.i.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i:     ; preds = %delete.notnull25
  %24 = bitcast float** %23 to i8*
  call void @_ZdaPv(i8* %24) #26
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i, %delete.notnull25
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %_M_start.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !116
  %tobool.i.i.i.i = icmp eq float* %25, null
  br i1 %tobool.i.i.i.i, label %_ZN8CBFormatD2Ev.exit, label %if.then.i.i.i.i, !prof !154

if.then.i.i.i.i:                                  ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %26 = bitcast float* %25 to i8*
  call void @_ZdlPv(i8* nonnull %26) #24
  br label %_ZN8CBFormatD2Ev.exit

_ZN8CBFormatD2Ev.exit:                            ; preds = %if.then.i.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #24
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio11readNEncodeER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, %class.CBFormat* readonly dereferenceable(64) %sumBF) local_unnamed_addr #3 align 2 personality i32 (...)* @__gxx_personality_v0 !prof !103 {
entry:
  %soundSrcs = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 1
  %0 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !421
  %_M_finish.i13 = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %0, i64 0, i32 0, i32 0, i32 1
  %1 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i13 to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !436
  %3 = bitcast %"class.std::vector.43"* %0 to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !439
  %cmp16 = icmp eq i64 %2, %4
  br i1 %cmp16, label %for.cond.cleanup, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = bitcast float** %_M_start.i.i to i8**
  %m_nDataLength.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  ret void

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %6 = phi %"class.std::vector.43"* [ %0, %for.body.lr.ph ], [ %13, %for.inc ]
  %conv18 = phi i64 [ 0, %for.body.lr.ph ], [ %conv, %for.inc ]
  %soundIdx.017 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %_M_start.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %6, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.ILLIXR_AUDIO::Sound"**, %"class.ILLIXR_AUDIO::Sound"*** %_M_start.i, align 8, !tbaa !439
  %add.ptr.i = getelementptr inbounds %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %7, i64 %conv18
  %8 = load %"class.ILLIXR_AUDIO::Sound"*, %"class.ILLIXR_AUDIO::Sound"** %add.ptr.i, align 8, !tbaa !76
  %call5 = tail call %class.CBFormat* @_ZN12ILLIXR_AUDIO5Sound13readInBFormatEv(%"class.ILLIXR_AUDIO::Sound"* %8)
  %cmp6 = icmp eq i32 %soundIdx.017, 0
  br i1 %cmp6, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %9 = load i8*, i8** %5, align 8, !tbaa !116
  %_M_start.i4.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %call5, i64 0, i32 3, i32 0, i32 0, i32 0
  %10 = bitcast float** %_M_start.i4.i to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !116
  %12 = load i32, i32* %m_nDataLength.i, align 4, !tbaa !141
  %conv.i = zext i32 %12 to i64
  %mul.i = shl nuw nsw i64 %conv.i, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %11, i64 %mul.i, i1 false) #24
  br label %for.inc

if.else:                                          ; preds = %for.body
  %call7 = tail call dereferenceable(64) %class.CBFormat* @_ZN8CBFormatpLERKS_(%class.CBFormat* nonnull %sumBF, %class.CBFormat* dereferenceable(64) %call5)
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then
  %inc = add i32 %soundIdx.017, 1
  %conv = zext i32 %inc to i64
  %13 = load %"class.std::vector.43"*, %"class.std::vector.43"** %soundSrcs, align 8, !tbaa !421
  %_M_finish.i = getelementptr inbounds %"class.std::vector.43", %"class.std::vector.43"* %13, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.ILLIXR_AUDIO::Sound"*** %_M_finish.i to i64*
  %15 = load i64, i64* %14, align 8, !tbaa !436
  %16 = bitcast %"class.std::vector.43"* %13 to i64*
  %17 = load i64, i64* %16, align 8, !tbaa !439
  %sub.ptr.sub.i = sub i64 %15, %17
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %cmp = icmp ugt i64 %sub.ptr.div.i, %conv
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio11rotateNZoomER8CBFormat(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, %class.CBFormat* readonly dereferenceable(64) %sumBF) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  tail call void @_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv(%"class.ILLIXR_AUDIO::ABAudio"* %this)
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %0 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !424
  tail call void @_ZN19CAmbisonicProcessor7ProcessEP8CBFormatj(%class.CAmbisonicProcessor* %0, %class.CBFormat* nonnull %sumBF, i32 1024)
  tail call void @_ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv(%"class.ILLIXR_AUDIO::ABAudio"* %this)
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8, !tbaa !425
  %2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8, !tbaa !101
  %cmp397.i = icmp eq i32 %3, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i, !prof !317

for.cond2.preheader.us.preheader.i:               ; preds = %entry
  %_M_head_impl.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !76
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i95.i, align 8, !tbaa !76
  %4 = zext i32 %3 to i64
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i.i93.i, align 8, !tbaa !76
  %6 = add nsw i64 %4, -1
  %xtraiter = and i64 %4, 3
  %7 = icmp ult i64 %6, 3
  %unroll_iter = sub nsw i64 %4, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %7, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, 1024
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i, !prof !316

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %5, i64 %indvars.iv108.i
  %8 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !83
  %9 = tail call float @llvm.fabs.f32(float %8) #24
  %conv17.us.i = fpext float %9 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i, !prof !318

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %10 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !76
  %arrayidx45.us.i = getelementptr inbounds float, float* %10, i64 %indvars.iv110.i
  %11 = load float, float* %arrayidx45.us.i, align 4, !tbaa !83
  %12 = load float, float* %m_fZoomRed.i, align 4, !tbaa !296
  %mul46.us.i = fmul float %11, %12
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !83
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %13 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !315
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %14 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !76
  %arrayidx23.us.i = getelementptr inbounds float, float* %14, i64 %indvars.iv110.i
  %15 = load float, float* %arrayidx23.us.i, align 4, !tbaa !83
  %mul24.us.i = fmul float %13, %15
  %16 = load float, float* %m_fZoom.i, align 8, !tbaa !314
  %mul28.us.i = fmul float %8, %16
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %17 = tail call float @llvm.fabs.f32(float %16) #24
  %18 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !312
  %mul34.us.i = fmul float %17, %18
  %add35.us.i = fadd float %13, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !83
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %4
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i, !prof !317

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %19 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !83
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %20 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !76
  %arrayidx.us.i = getelementptr inbounds float, float* %20, i64 %indvars.iv110.i
  %21 = load float, float* %arrayidx.us.i, align 4, !tbaa !83
  %mul.us.i = fmul float %19, %21
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %22 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !83
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %23 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !76
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %23, i64 %indvars.iv110.i
  %24 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !83
  %mul.us.i.1 = fmul float %22, %24
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %25 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !83
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %26 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !76
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %26, i64 %indvars.iv110.i
  %27 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !83
  %mul.us.i.2 = fmul float %25, %27
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %28 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !83
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %29 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !76
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %29, i64 %indvars.iv110.i
  %30 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !83
  %mul.us.i.3 = fmul float %28, %30
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i, !prof !317

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %31 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !83
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %32 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !76
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %32, i64 %indvars.iv110.i
  %33 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !83
  %mul.us.i.epil = fmul float %31, %33
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !444

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %entry
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio9writeFileEPPf(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this, float** nocapture readonly %resultSample) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %ref.tmp = alloca float, align 4
  %ref.tmp3 = alloca float, align 4
  %ref.tmp11 = alloca float, align 4
  %ref.tmp13 = alloca float, align 4
  %tempSample0 = alloca i16, align 2
  %tempSample1 = alloca i16, align 2
  %ref.tmp.0..sroa_cast = bitcast float* %ref.tmp to i8*
  %ref.tmp3.0..sroa_cast = bitcast float* %ref.tmp3 to i8*
  %arrayidx8 = getelementptr inbounds float*, float** %resultSample, i64 1
  %ref.tmp11.0..sroa_cast = bitcast float* %ref.tmp11 to i8*
  %ref.tmp13.0..sroa_cast = bitcast float* %ref.tmp13 to i8*
  %0 = bitcast i16* %tempSample0 to i8*
  %1 = bitcast i16* %tempSample1 to i8*
  %outputFile = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 2
  %2 = bitcast %"class.std::basic_ofstream"** %outputFile to %"class.std::basic_ostream"**
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  ret void

for.body:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %3 = load float*, float** %resultSample, align 8, !tbaa !76
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  store float 1.000000e+00, float* %ref.tmp, align 4, !tbaa !83
  %4 = load float, float* %arrayidx2, align 4, !tbaa !83
  %cmp.i = fcmp ogt float %4, 1.000000e+00
  %__b.__a.i = select i1 %cmp.i, float* %ref.tmp, float* %arrayidx2, !prof !185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp3.0..sroa_cast)
  store float -1.000000e+00, float* %ref.tmp3, align 4, !tbaa !83
  %5 = load float, float* %__b.__a.i, align 4, !tbaa !83
  %cmp.i49 = fcmp olt float %5, -1.000000e+00
  %__b.__a.i50 = select i1 %cmp.i49, float* %ref.tmp3, float* %__b.__a.i
  %6 = bitcast float* %__b.__a.i50 to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !83
  %8 = bitcast float* %arrayidx2 to i32*
  store i32 %7, i32* %8, align 4, !tbaa !83
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp3.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.0..sroa_cast)
  %9 = load float*, float** %arrayidx8, align 8, !tbaa !76
  %arrayidx10 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp11.0..sroa_cast)
  store float 1.000000e+00, float* %ref.tmp11, align 4, !tbaa !83
  %10 = load float, float* %arrayidx10, align 4, !tbaa !83
  %cmp.i47 = fcmp ogt float %10, 1.000000e+00
  %__b.__a.i48 = select i1 %cmp.i47, float* %ref.tmp11, float* %arrayidx10, !prof !185
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp13.0..sroa_cast)
  store float -1.000000e+00, float* %ref.tmp13, align 4, !tbaa !83
  %11 = load float, float* %__b.__a.i48, align 4, !tbaa !83
  %cmp.i45 = fcmp olt float %11, -1.000000e+00
  %__b.__a.i46 = select i1 %cmp.i45, float* %ref.tmp13, float* %__b.__a.i48
  %12 = bitcast float* %__b.__a.i46 to i32*
  %13 = load i32, i32* %12, align 4, !tbaa !83
  %14 = bitcast float* %arrayidx10 to i32*
  store i32 %13, i32* %14, align 4, !tbaa !83
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp13.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp11.0..sroa_cast)
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %0) #24
  %15 = load float, float* %arrayidx2, align 4, !tbaa !83
  %conv = fpext float %15 to double
  %mul = fmul double %conv, 3.276700e+04
  %conv21 = fptosi double %mul to i16
  store i16 %conv21, i16* %tempSample0, align 2, !tbaa !78
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %1) #24
  %16 = bitcast i32 %13 to float
  %conv25 = fpext float %16 to double
  %mul27 = fmul double %conv25, 3.276700e+04
  %conv28 = fptosi double %mul27 to i16
  store i16 %conv28, i16* %tempSample1, align 2, !tbaa !78
  %17 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !420
  %call29 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %17, i8* nonnull %0, i64 2)
  %18 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %2, align 8, !tbaa !420
  %call31 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"* %18, i8* nonnull %1, i64 2)
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %1) #24
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %0) #24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, 1024
  br i1 %exitcond, label %for.cond.cleanup, label %for.body
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8CBFormatD2Ev(%class.CBFormat* %this) unnamed_addr #20 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  %cmp.i = icmp eq float** %1, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i:       ; preds = %entry
  %2 = bitcast float** %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i, %entry
  store float** null, float*** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  %_M_start.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i, align 8, !tbaa !116
  %tobool.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i, !prof !154

if.then.i.i.i:                                    ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio14updateRotationEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %head = alloca %class.Orientation, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !72
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio14updateRotationEvE5frame, align 4, !tbaa !72
  %1 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul2 = fmul double %div, 3.140000e+00
  %mul3 = fmul double %mul2, 2.000000e+00
  %conv4 = fptrunc double %mul3 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv4)
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 5
  %2 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !424
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %2, i64 0, i32 1
  %3 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 4 %1, i64 24, i1 false)
  %4 = load %class.CAmbisonicProcessor*, %class.CAmbisonicProcessor** %rotator, align 8, !tbaa !424
  %5 = bitcast %class.CAmbisonicProcessor* %4 to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %5, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %6 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %6(%class.CAmbisonicProcessor* %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #24
  ret void
}

; Function Attrs: uwtable
define void @_ZN12ILLIXR_AUDIO7ABAudio10updateZoomEv(%"class.ILLIXR_AUDIO::ABAudio"* nocapture readonly %this) local_unnamed_addr #3 align 2 !prof !103 {
entry:
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %0 = load i32, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !72
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZN12ILLIXR_AUDIO7ABAudio10updateZoomEvE5frame, align 4, !tbaa !72
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %this, i64 0, i32 6
  %1 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8, !tbaa !425
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !83
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !83
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i, !prof !185
  %2 = bitcast float* %__b.__a.i.i to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !83
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %1, i64 0, i32 5
  %4 = bitcast float* %m_fZoom.i to i32*
  store i32 %3, i32* %4, align 8, !tbaa !314
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %5 = load %class.CAmbisonicZoomer*, %class.CAmbisonicZoomer** %zoomer, align 8, !tbaa !425
  %6 = bitcast %class.CAmbisonicZoomer* %5 to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %6, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %7 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %7(%class.CAmbisonicZoomer* %5)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSo5writeEPKcl(%"class.std::basic_ostream"*, i8*, i64) local_unnamed_addr #0

; Function Attrs: norecurse uwtable
define i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #21 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !175 {
entry:
  %audio = alloca %"class.ILLIXR_AUDIO::ABAudio", align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::allocator.39", align 1
  %cmp = icmp slt i32 %argc, 2
  br i1 %cmp, label %if.then, label %if.end, !prof !197

if.then:                                          ; preds = %entry
  %call1.i = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i64 7)
  %0 = load i8*, i8** %argv, align 8, !tbaa !76
  %call1 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* %0)
  %call1.i248 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) %call1, i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i64 41)
  %call1.i250 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i64 26)
  %call1.i252 = tail call dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull dereferenceable(272) @_ZSt4cout, i8* nonnull getelementptr inbounds ([122 x i8], [122 x i8]* @.str.9, i64 0, i64 0), i64 121)
  br label %return

if.end:                                           ; preds = %entry
  %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 1
  %1 = load i8*, i8** %arrayidx5, align 8, !tbaa !76
  %call.i = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #24
  %conv.i = trunc i64 %call.i to i32
  %2 = bitcast %"class.ILLIXR_AUDIO::ABAudio"* %audio to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %2) #24
  %3 = getelementptr inbounds %"class.std::allocator.39", %"class.std::allocator.39"* %ref.tmp, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #24
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), %"class.std::allocator.39"* nonnull dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.end
  invoke void @_ZN12ILLIXR_AUDIO7ABAudioC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_11ProcessTypeE(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp, i32 2)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %invoke.cont
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !325
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %5 to i8*
  %cmp.i.i.i = icmp eq i8* %4, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i, !prof !329

if.then.i.i:                                      ; preds = %invoke.cont8
  call void @_ZdlPv(i8* %4) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24
  invoke void @_ZN12ILLIXR_AUDIO7ABAudio10loadSourceEv(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %call14 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %invoke.cont11
  %call17 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont16 unwind label %lpad15

invoke.cont16:                                    ; preds = %invoke.cont13
  %call20 = invoke i8* @_Znwm(i64 64) #25
          to label %invoke.cont19 unwind label %lpad18

invoke.cont19:                                    ; preds = %invoke.cont16
  %6 = bitcast i8* %call20 to %class.CBFormat*
  %7 = bitcast i8* %call20 to i32 (...)***
  %8 = getelementptr inbounds i8, i8* %call20, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 8, !tbaa !97
  %10 = getelementptr inbounds i8, i8* %call20, i64 12
  store i8 0, i8* %10, align 4, !tbaa !100
  %11 = getelementptr inbounds i8, i8* %call20, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8, !tbaa !101
  %13 = getelementptr inbounds i8, i8* %call20, i64 20
  store i8 0, i8* %13, align 4, !tbaa !102
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !68
  %m_nSamples.i = getelementptr inbounds i8, i8* %call20, i64 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %m_nSamples.i, i8 0, i64 40, i1 false) #24
  %call25 = invoke zeroext i1 @_ZN8CBFormat9ConfigureEjbj(%class.CBFormat* nonnull %6, i32 3, i1 zeroext true, i32 1024)
          to label %invoke.cont24 unwind label %lpad18

invoke.cont24:                                    ; preds = %invoke.cont19
  %call28 = invoke i8* @_Znam(i64 24) #25
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %invoke.cont24
  %call30 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont29 unwind label %lpad26

invoke.cont29:                                    ; preds = %invoke.cont27
  %14 = bitcast i8* %call28 to i8**
  store i8* %call30, i8** %14, align 8, !tbaa !76
  %call33 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont32 unwind label %lpad26

invoke.cont32:                                    ; preds = %invoke.cont29
  %arrayidx34 = getelementptr inbounds i8, i8* %call28, i64 8
  %15 = bitcast i8* %arrayidx34 to i8**
  store i8* %call33, i8** %15, align 8, !tbaa !76
  %call36 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont35 unwind label %lpad26

invoke.cont35:                                    ; preds = %invoke.cont32
  %arrayidx37 = getelementptr inbounds i8, i8* %call28, i64 16
  %16 = bitcast i8* %arrayidx37 to i8**
  store i8* %call36, i8** %16, align 8, !tbaa !76
  %call40 = invoke i8* @_Znam(i64 40) #25
          to label %invoke.cont39 unwind label %lpad38

invoke.cont39:                                    ; preds = %invoke.cont35
  %call42 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont41 unwind label %lpad38

invoke.cont41:                                    ; preds = %invoke.cont39
  %17 = bitcast i8* %call40 to i8**
  store i8* %call42, i8** %17, align 8, !tbaa !76
  %call45 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont44 unwind label %lpad38

invoke.cont44:                                    ; preds = %invoke.cont41
  %arrayidx46 = getelementptr inbounds i8, i8* %call40, i64 8
  %18 = bitcast i8* %arrayidx46 to i8**
  store i8* %call45, i8** %18, align 8, !tbaa !76
  %call48 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont47 unwind label %lpad38

invoke.cont47:                                    ; preds = %invoke.cont44
  %arrayidx49 = getelementptr inbounds i8, i8* %call40, i64 16
  %19 = bitcast i8* %arrayidx49 to i8**
  store i8* %call48, i8** %19, align 8, !tbaa !76
  %call51 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont50 unwind label %lpad38

invoke.cont50:                                    ; preds = %invoke.cont47
  %arrayidx52 = getelementptr inbounds i8, i8* %call40, i64 24
  %20 = bitcast i8* %arrayidx52 to i8**
  store i8* %call51, i8** %20, align 8, !tbaa !76
  %call54 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont53 unwind label %lpad38

invoke.cont53:                                    ; preds = %invoke.cont50
  %arrayidx55 = getelementptr inbounds i8, i8* %call40, i64 32
  %21 = bitcast i8* %arrayidx55 to i8**
  store i8* %call54, i8** %21, align 8, !tbaa !76
  %call58 = invoke i8* @_Znam(i64 56) #25
          to label %invoke.cont57 unwind label %lpad56

invoke.cont57:                                    ; preds = %invoke.cont53
  %call60 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont59 unwind label %lpad56

invoke.cont59:                                    ; preds = %invoke.cont57
  %22 = bitcast i8* %call58 to i8**
  store i8* %call60, i8** %22, align 8, !tbaa !76
  %call63 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont62 unwind label %lpad56

invoke.cont62:                                    ; preds = %invoke.cont59
  %arrayidx64 = getelementptr inbounds i8, i8* %call58, i64 8
  %23 = bitcast i8* %arrayidx64 to i8**
  store i8* %call63, i8** %23, align 8, !tbaa !76
  %call66 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont65 unwind label %lpad56

invoke.cont65:                                    ; preds = %invoke.cont62
  %arrayidx67 = getelementptr inbounds i8, i8* %call58, i64 16
  %24 = bitcast i8* %arrayidx67 to i8**
  store i8* %call66, i8** %24, align 8, !tbaa !76
  %call69 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont68 unwind label %lpad56

invoke.cont68:                                    ; preds = %invoke.cont65
  %arrayidx70 = getelementptr inbounds i8, i8* %call58, i64 24
  %25 = bitcast i8* %arrayidx70 to i8**
  store i8* %call69, i8** %25, align 8, !tbaa !76
  %call72 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont71 unwind label %lpad56

invoke.cont71:                                    ; preds = %invoke.cont68
  %arrayidx73 = getelementptr inbounds i8, i8* %call58, i64 32
  %26 = bitcast i8* %arrayidx73 to i8**
  store i8* %call72, i8** %26, align 8, !tbaa !76
  %call75 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont74 unwind label %lpad56

invoke.cont74:                                    ; preds = %invoke.cont71
  %arrayidx76 = getelementptr inbounds i8, i8* %call58, i64 40
  %27 = bitcast i8* %arrayidx76 to i8**
  store i8* %call75, i8** %27, align 8, !tbaa !76
  %call78 = invoke i8* @_Znam(i64 4096) #25
          to label %invoke.cont77 unwind label %lpad56

invoke.cont77:                                    ; preds = %invoke.cont74
  %arrayidx79 = getelementptr inbounds i8, i8* %call58, i64 48
  %28 = bitcast i8* %arrayidx79 to i8**
  store i8* %call78, i8** %28, align 8, !tbaa !76
  call void @llvm.hpvm.init()
  %call80 = call noalias i8* @malloc(i64 164) #24
  %rotator = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 5
  %29 = bitcast %class.CAmbisonicProcessor** %rotator to i64*
  %30 = load i64, i64* %29, align 8, !tbaa !424
  %31 = bitcast i8* %call80 to i64*
  store i64 %30, i64* %31, align 1, !tbaa !445
  %bytes_rotator82 = getelementptr inbounds i8, i8* %call80, i64 8
  %32 = bitcast i8* %bytes_rotator82 to i64*
  store i64 200, i64* %32, align 1, !tbaa !447
  %sumBF83 = getelementptr inbounds i8, i8* %call80, i64 16
  %33 = bitcast i8* %sumBF83 to i8**
  store i8* %call20, i8** %33, align 1, !tbaa !448
  %bytes_sumBF84 = getelementptr inbounds i8, i8* %call80, i64 24
  %34 = bitcast i8* %bytes_sumBF84 to i64*
  store i64 64, i64* %34, align 1, !tbaa !449
  %zoomer = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 6
  %35 = bitcast %class.CAmbisonicZoomer** %zoomer to i64*
  %36 = load i64, i64* %35, align 8, !tbaa !425
  %zoomer85 = getelementptr inbounds i8, i8* %call80, i64 32
  %37 = bitcast i8* %zoomer85 to i64*
  store i64 %36, i64* %37, align 1, !tbaa !450
  %bytes_zoomer86 = getelementptr inbounds i8, i8* %call80, i64 40
  %38 = bitcast i8* %bytes_zoomer86 to i64*
  store i64 104, i64* %38, align 1, !tbaa !451
  %decoder0 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 3
  %39 = bitcast %class.CAmbisonicBinauralizer** %decoder0 to i64*
  %40 = load i64, i64* %39, align 8, !tbaa !422
  %decoder087 = getelementptr inbounds i8, i8* %call80, i64 48
  %41 = bitcast i8* %decoder087 to i64*
  store i64 %40, i64* %41, align 1, !tbaa !452
  %bytes_decoder088 = getelementptr inbounds i8, i8* %call80, i64 56
  %42 = bitcast i8* %bytes_decoder088 to i64*
  store i64 296, i64* %42, align 1, !tbaa !453
  %resultSample089 = getelementptr inbounds i8, i8* %call80, i64 64
  %43 = bitcast i8* %resultSample089 to i8**
  store i8* %call14, i8** %43, align 1, !tbaa !454
  %bytes_resultSample090 = getelementptr inbounds i8, i8* %call80, i64 72
  %44 = bitcast i8* %bytes_resultSample090 to i64*
  store i64 4096, i64* %44, align 1, !tbaa !455
  %nSample = getelementptr inbounds i8, i8* %call80, i64 80
  %45 = bitcast i8* %nSample to i32*
  store i32 1024, i32* %45, align 1, !tbaa !456
  %channelpart191 = getelementptr inbounds i8, i8* %call80, i64 84
  %46 = bitcast i8* %channelpart191 to i8**
  store i8* %call28, i8** %46, align 1, !tbaa !457
  %bytes_channelpart192 = getelementptr inbounds i8, i8* %call80, i64 92
  %47 = bitcast i8* %bytes_channelpart192 to i64*
  store i64 12288, i64* %47, align 1, !tbaa !458
  %channelpart293 = getelementptr inbounds i8, i8* %call80, i64 100
  %48 = bitcast i8* %channelpart293 to i8**
  store i8* %call40, i8** %48, align 1, !tbaa !459
  %bytes_channelpart294 = getelementptr inbounds i8, i8* %call80, i64 108
  %49 = bitcast i8* %bytes_channelpart294 to i64*
  store i64 20480, i64* %49, align 1, !tbaa !460
  %channelpart395 = getelementptr inbounds i8, i8* %call80, i64 116
  %50 = bitcast i8* %channelpart395 to i8**
  store i8* %call58, i8** %50, align 1, !tbaa !461
  %bytes_channelpart396 = getelementptr inbounds i8, i8* %call80, i64 124
  %51 = bitcast i8* %bytes_channelpart396 to i64*
  store i64 28672, i64* %51, align 1, !tbaa !462
  %decoder1 = getelementptr inbounds %"class.ILLIXR_AUDIO::ABAudio", %"class.ILLIXR_AUDIO::ABAudio"* %audio, i64 0, i32 4
  %52 = bitcast %class.CAmbisonicBinauralizer** %decoder1 to i64*
  %53 = load i64, i64* %52, align 8, !tbaa !423
  %decoder197 = getelementptr inbounds i8, i8* %call80, i64 132
  %54 = bitcast i8* %decoder197 to i64*
  store i64 %53, i64* %54, align 1, !tbaa !463
  %bytes_decoder198 = getelementptr inbounds i8, i8* %call80, i64 140
  %55 = bitcast i8* %bytes_decoder198 to i64*
  store i64 296, i64* %55, align 1, !tbaa !464
  %resultSample199 = getelementptr inbounds i8, i8* %call80, i64 148
  %56 = bitcast i8* %resultSample199 to i8**
  store i8* %call17, i8** %56, align 1, !tbaa !465
  %bytes_resultSample1100 = getelementptr inbounds i8, i8* %call80, i64 156
  %57 = bitcast i8* %bytes_resultSample1100 to i64*
  store i64 4096, i64* %57, align 1, !tbaa !466
  %cmp101258 = icmp sgt i32 %conv.i, 0
  %58 = inttoptr i64 %30 to i8*
  %59 = inttoptr i64 %36 to i8*
  %60 = inttoptr i64 %40 to i8*
  %61 = inttoptr i64 %53 to i8*
  br i1 %cmp101258, label %for.body, label %for.cond.cleanup, !prof !467

for.cond.cleanup:                                 ; preds = %for.body, %invoke.cont77
  call void @llvm.hpvm.cleanup()
  call void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio) #24
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2) #24
  br label %return

lpad:                                             ; preds = %if.end
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  %64 = extractvalue { i8*, i32 } %62, 1
  br label %ehcleanup

lpad7:                                            ; preds = %invoke.cont
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = extractvalue { i8*, i32 } %65, 0
  %67 = extractvalue { i8*, i32 } %65, 1
  %_M_p.i.i.i.i253 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %68 = load i8*, i8** %_M_p.i.i.i.i253, align 8, !tbaa !325
  %69 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %arraydecay.i.i.i.i254 = bitcast %union.anon* %69 to i8*
  %cmp.i.i.i255 = icmp eq i8* %68, %arraydecay.i.i.i.i254
  br i1 %cmp.i.i.i255, label %ehcleanup, label %if.then.i.i256, !prof !329

if.then.i.i256:                                   ; preds = %lpad7
  call void @_ZdlPv(i8* %68) #24
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i256, %lpad7, %lpad
  %ehselector.slot.0 = phi i32 [ %64, %lpad ], [ %67, %lpad7 ], [ %67, %if.then.i.i256 ]
  %exn.slot.0 = phi i8* [ %63, %lpad ], [ %66, %lpad7 ], [ %66, %if.then.i.i256 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #24
  br label %ehcleanup123

lpad10:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %70 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad12:                                           ; preds = %invoke.cont11
  %71 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad15:                                           ; preds = %invoke.cont13
  %72 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad18:                                           ; preds = %invoke.cont19, %invoke.cont16
  %73 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad26:                                           ; preds = %invoke.cont32, %invoke.cont29, %invoke.cont27, %invoke.cont24
  %74 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad38:                                           ; preds = %invoke.cont50, %invoke.cont47, %invoke.cont44, %invoke.cont41, %invoke.cont39, %invoke.cont35
  %75 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad56:                                           ; preds = %invoke.cont74, %invoke.cont71, %invoke.cont68, %invoke.cont65, %invoke.cont62, %invoke.cont59, %invoke.cont57, %invoke.cont53
  %76 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

for.body:                                         ; preds = %for.body, %invoke.cont77
  %i.0259 = phi i32 [ %inc, %for.body ], [ 0, %invoke.cont77 ]
  call void @llvm_hpvm_track_mem(i8* %58, i64 200) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call20, i64 64) #24
  call void @llvm_hpvm_track_mem(i8* %59, i64 104) #24
  call void @llvm_hpvm_track_mem(i8* %60, i64 296) #24
  call void @llvm_hpvm_track_mem(i8* %61, i64 296) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call14, i64 4096) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call17, i64 4096) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call28, i64 12288) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call40, i64 20480) #24
  call void @llvm_hpvm_track_mem(i8* nonnull %call58, i64 28672) #24
  %graphID = call i8* @llvm.hpvm.launch(i8* bitcast (%emptyStruct (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, %class.CAmbisonicZoomer*, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64, i32, float**, i64, float**, i64, float**, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64)* @audioDecoding_cloned to i8*), i8* %call80, i1 false)
  call void @llvm.hpvm.wait(i8* %graphID)
  call void @llvm_hpvm_request_mem(i8* %58, i64 200) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call20, i64 64) #24
  call void @llvm_hpvm_request_mem(i8* %59, i64 104) #24
  call void @llvm_hpvm_request_mem(i8* %60, i64 296) #24
  call void @llvm_hpvm_request_mem(i8* %61, i64 296) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call14, i64 4096) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call17, i64 4096) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call28, i64 12288) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call40, i64 20480) #24
  call void @llvm_hpvm_request_mem(i8* nonnull %call58, i64 28672) #24
  call void @llvm_hpvm_untrack_mem(i8* %58) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call20) #24
  call void @llvm_hpvm_untrack_mem(i8* %59) #24
  call void @llvm_hpvm_untrack_mem(i8* %60) #24
  call void @llvm_hpvm_untrack_mem(i8* %61) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call14) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call17) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call28) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call40) #24
  call void @llvm_hpvm_untrack_mem(i8* nonnull %call58) #24
  %inc = add nuw nsw i32 %i.0259, 1
  %exitcond = icmp eq i32 %inc, %conv.i
  br i1 %exitcond, label %for.cond.cleanup, label %for.body, !prof !181

ehcleanup122:                                     ; preds = %lpad56, %lpad38, %lpad26, %lpad18, %lpad15, %lpad12, %lpad10
  %.sink260 = phi { i8*, i32 } [ %71, %lpad12 ], [ %73, %lpad18 ], [ %75, %lpad38 ], [ %76, %lpad56 ], [ %74, %lpad26 ], [ %72, %lpad15 ], [ %70, %lpad10 ]
  %77 = extractvalue { i8*, i32 } %.sink260, 0
  %78 = extractvalue { i8*, i32 } %.sink260, 1
  call void @_ZN12ILLIXR_AUDIO7ABAudioD2Ev(%"class.ILLIXR_AUDIO::ABAudio"* nonnull %audio) #24
  br label %ehcleanup123

ehcleanup123:                                     ; preds = %ehcleanup122, %ehcleanup
  %ehselector.slot.7 = phi i32 [ %78, %ehcleanup122 ], [ %ehselector.slot.0, %ehcleanup ]
  %exn.slot.7 = phi i8* [ %77, %ehcleanup122 ], [ %exn.slot.0, %ehcleanup ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %2) #24
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn.slot.7, 0
  %lpad.val125 = insertvalue { i8*, i32 } %lpad.val, i32 %ehselector.slot.7, 1
  resume { i8*, i32 } %lpad.val125

return:                                           ; preds = %for.cond.cleanup, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %for.cond.cleanup ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @llvm_hpvm_track_mem(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm_hpvm_request_mem(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm_hpvm_untrack_mem(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8MIT_HRTFD0Ev(%class.MIT_HRTF* %this) unnamed_addr #20 comdat align 2 {
entry:
  %0 = bitcast %class.MIT_HRTF* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN14CAmbisonicBaseD2Ev(%class.CAmbisonicBase* %this) unnamed_addr #7 comdat align 2 !prof !61 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN14CAmbisonicBaseD0Ev(%class.CAmbisonicBase* %this) unnamed_addr #7 comdat align 2 {
entry:
  tail call void @llvm.trap() #27
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicSourceD2Ev(%class.CAmbisonicSource* %this) unnamed_addr #20 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i, align 8, !tbaa !116
  %tobool.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i, !prof !154

if.then.i.i.i:                                    ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %entry
  %_M_start.i.i2 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2, align 8, !tbaa !116
  %tobool.i.i.i3 = icmp eq float* %3, null
  br i1 %tobool.i.i.i3, label %_ZNSt6vectorIfSaIfEED2Ev.exit5, label %if.then.i.i.i4, !prof !154

if.then.i.i.i4:                                   ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit5

_ZNSt6vectorIfSaIfEED2Ev.exit5:                   ; preds = %if.then.i.i.i4, %_ZNSt6vectorIfSaIfEED2Ev.exit
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicSourceD0Ev(%class.CAmbisonicSource* %this) unnamed_addr #20 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV16CAmbisonicSource, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %_M_start.i.i.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 2, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !116
  %tobool.i.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit.i, label %if.then.i.i.i.i, !prof !154

if.then.i.i.i.i:                                  ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.i

_ZNSt6vectorIfSaIfEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %entry
  %_M_start.i.i2.i = getelementptr inbounds %class.CAmbisonicSource, %class.CAmbisonicSource* %this, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i2.i, align 8, !tbaa !116
  %tobool.i.i.i3.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i3.i, label %_ZN16CAmbisonicSourceD2Ev.exit, label %if.then.i.i.i4.i, !prof !154

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN16CAmbisonicSourceD2Ev.exit

_ZN16CAmbisonicSourceD2Ev.exit:                   ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIfSaIfEED2Ev.exit.i
  %5 = bitcast %class.CAmbisonicSource* %this to i8*
  tail call void @_ZdlPv(i8* %5) #26
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN8CBFormatD0Ev(%class.CBFormat* %this) unnamed_addr #20 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV8CBFormat, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %cmp.i.i = icmp eq float** %1, null
  br i1 %cmp.i.i, label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i, label %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i

_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i:     ; preds = %entry
  %2 = bitcast float** %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i

_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i: ; preds = %_ZNKSt14default_deleteIA_PfEclEPS0_.exit.i.i, %entry
  store float** null, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %_M_start.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %this, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.i, align 8, !tbaa !116
  %tobool.i.i.i.i = icmp eq float* %3, null
  br i1 %tobool.i.i.i.i, label %_ZN8CBFormatD2Ev.exit, label %if.then.i.i.i.i, !prof !154

if.then.i.i.i.i:                                  ; preds = %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZN8CBFormatD2Ev.exit

_ZN8CBFormatD2Ev.exit:                            ; preds = %if.then.i.i.i.i, %_ZNSt10unique_ptrIA_PfSt14default_deleteIS1_EED2Ev.exit.i
  %5 = bitcast %class.CBFormat* %this to i8*
  tail call void @_ZdlPv(i8* %5) #26
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #7 comdat align 2 personality i32 (...)* @__gxx_personality_v0 !prof !103 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV16CAmbisonicZoomer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  %cmp.i = icmp eq float* %1, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i:          ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i, %entry
  store float* null, float** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  %_M_head_impl.i.i.i.i.i2 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_head_impl.i.i.i.i.i2, align 8, !tbaa !76
  %cmp.i3 = icmp eq float* %3, null
  br i1 %cmp.i3, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i4, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i4:         ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
  %4 = bitcast float* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #26
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i4, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit
  store float* null, float** %_M_head_impl.i.i.i.i.i2, align 8, !tbaa !76
  %_M_head_impl.i.i.i.i.i6 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_head_impl.i.i.i.i.i6, align 8, !tbaa !76
  %cmp.i7 = icmp eq float* %5, null
  br i1 %cmp.i7, label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i8, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i8:         ; preds = %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdaPv(i8* %6) #26
  br label %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9

_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit9: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i8, %_ZNSt10unique_ptrIA_fSt14default_deleteIS0_EED2Ev.exit5
  store float* null, float** %_M_head_impl.i.i.i.i.i6, align 8, !tbaa !76
  %m_AmbDecoderFront = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %this, i64 0, i32 1
  tail call void @_ZN17CAmbisonicDecoderD2Ev(%class.CAmbisonicDecoder* nonnull %m_AmbDecoderFront) #24
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN16CAmbisonicZoomerD0Ev(%class.CAmbisonicZoomer* %this) unnamed_addr #7 comdat align 2 {
entry:
  tail call void @_ZN16CAmbisonicZoomerD2Ev(%class.CAmbisonicZoomer* %this) #24
  %0 = bitcast %class.CAmbisonicZoomer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #20 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV22CAmbisonicBinauralizer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !68
  %_M_start.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %1 = load float*, float** %_M_start.i.i, align 8, !tbaa !116
  %tobool.i.i.i = icmp eq float* %1, null
  br i1 %tobool.i.i.i, label %_ZNSt6vectorIfSaIfEED2Ev.exit, label %if.then.i.i.i, !prof !154

if.then.i.i.i:                                    ; preds = %entry
  %2 = bitcast float* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %2) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit

_ZNSt6vectorIfSaIfEED2Ev.exit:                    ; preds = %if.then.i.i.i, %entry
  %_M_start.i.i.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %3 = load float*, float** %_M_start.i.i.1, align 8, !tbaa !116
  %tobool.i.i.i.1 = icmp eq float* %3, null
  br i1 %tobool.i.i.i.1, label %_ZNSt6vectorIfSaIfEED2Ev.exit.1, label %if.then.i.i.i.1, !prof !154

if.then.i.i.i11:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.1
  %4 = bitcast float* %12 to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit12

_ZNSt6vectorIfSaIfEED2Ev.exit12:                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit.1, %if.then.i.i.i11
  %_M_start.i.i13 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = load float*, float** %_M_start.i.i13, align 8, !tbaa !116
  %tobool.i.i.i14 = icmp eq float* %5, null
  br i1 %tobool.i.i.i14, label %_ZNSt6vectorIfSaIfEED2Ev.exit16, label %if.then.i.i.i15, !prof !154

if.then.i.i.i15:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit12
  %6 = bitcast float* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %6) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit16

_ZNSt6vectorIfSaIfEED2Ev.exit16:                  ; preds = %if.then.i.i.i15, %_ZNSt6vectorIfSaIfEED2Ev.exit12
  %_M_start.i.i17 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 12, i32 0, i32 0, i32 0
  %7 = load float*, float** %_M_start.i.i17, align 8, !tbaa !116
  %tobool.i.i.i18 = icmp eq float* %7, null
  br i1 %tobool.i.i.i18, label %_ZNSt6vectorIfSaIfEED2Ev.exit20, label %if.then.i.i.i19, !prof !154

if.then.i.i.i19:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit16
  %8 = bitcast float* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %8) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit20

_ZNSt6vectorIfSaIfEED2Ev.exit20:                  ; preds = %if.then.i.i.i19, %_ZNSt6vectorIfSaIfEED2Ev.exit16
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %9 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  %cmp.i = icmp eq %struct.kiss_fft_cpx* %9, null
  br i1 %cmp.i, label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i: ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit20
  %10 = bitcast %struct.kiss_fft_cpx* %9 to i8*
  tail call void @_ZdaPv(i8* %10) #26
  br label %_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit

_ZNSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EED2Ev.exit: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i, %_ZNSt6vectorIfSaIfEED2Ev.exit20
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  %arraydestroy.element6 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 1
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev(%"class.std::vector.26"* nonnull %arraydestroy.element6) #24
  %arraydestroy.element6.1 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 10, i64 0
  tail call void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev(%"class.std::vector.26"* nonnull %arraydestroy.element6.1) #24
  %m_pIFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 9
  tail call void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev(%"class.std::unique_ptr.20"* nonnull %m_pIFFT_cfg) #24
  %m_pFFT_cfg = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 8
  tail call void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev(%"class.std::unique_ptr.20"* nonnull %m_pFFT_cfg) #24
  %m_AmbDecoder = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 1
  tail call void @_ZN17CAmbisonicDecoderD2Ev(%class.CAmbisonicDecoder* nonnull %m_AmbDecoder) #24
  ret void

if.then.i.i.i.1:                                  ; preds = %_ZNSt6vectorIfSaIfEED2Ev.exit
  %11 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %11) #24
  br label %_ZNSt6vectorIfSaIfEED2Ev.exit.1

_ZNSt6vectorIfSaIfEED2Ev.exit.1:                  ; preds = %if.then.i.i.i.1, %_ZNSt6vectorIfSaIfEED2Ev.exit
  %_M_start.i.i9 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %this, i64 0, i32 14, i32 0, i32 0, i32 0
  %12 = load float*, float** %_M_start.i.i9, align 8, !tbaa !116
  %tobool.i.i.i10 = icmp eq float* %12, null
  br i1 %tobool.i.i.i10, label %_ZNSt6vectorIfSaIfEED2Ev.exit12, label %if.then.i.i.i11, !prof !154
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr void @_ZN22CAmbisonicBinauralizerD0Ev(%class.CAmbisonicBinauralizer* %this) unnamed_addr #20 comdat align 2 {
entry:
  tail call void @_ZN22CAmbisonicBinauralizerD2Ev(%class.CAmbisonicBinauralizer* %this) #24
  %0 = bitcast %class.CAmbisonicBinauralizer* %this to i8*
  tail call void @_ZdlPv(i8* %0) #26
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZN4HRTFD2Ev(%class.HRTF* %this) unnamed_addr #7 comdat align 2 !prof !61 {
entry:
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #22

; Function Attrs: nofree nounwind
declare double @atan2(double, double) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare double @acos(double) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #15

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev(%"class.std::vector.26"* %this) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !103 {
entry:
  %_M_start = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 0
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !390
  %_M_finish = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 1
  %1 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !405
  %cmp3.i.i.i = icmp eq %"class.std::unique_ptr.31"* %0, %1
  br i1 %cmp3.i.i.i, label %invoke.cont, label %for.body.i.i.i, !prof !402

for.body.i.i.i:                                   ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i, %entry
  %__first.addr.04.i.i.i = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i ], [ %0, %entry ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %2 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i, align 8, !tbaa !76
  %cmp.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %2, null
  br i1 %cmp.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i: ; preds = %for.body.i.i.i
  %3 = bitcast %struct.kiss_fft_cpx* %2 to i8*
  tail call void @_ZdaPv(i8* %3) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i, %for.body.i.i.i
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i, align 8, !tbaa !76
  %incdec.ptr.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i, i64 1
  %cmp.i.i.i = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i, %1
  br i1 %cmp.i.i.i, label %invoke.cont.loopexit, label %for.body.i.i.i, !prof !402

invoke.cont.loopexit:                             ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i
  %.pre = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !390
  br label %invoke.cont

invoke.cont:                                      ; preds = %invoke.cont.loopexit, %entry
  %4 = phi %"class.std::unique_ptr.31"* [ %.pre, %invoke.cont.loopexit ], [ %0, %entry ]
  %tobool.i.i = icmp eq %"class.std::unique_ptr.31"* %4, null
  br i1 %tobool.i.i, label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit, label %if.then.i.i, !prof !402

if.then.i.i:                                      ; preds = %invoke.cont
  %5 = bitcast %"class.std::unique_ptr.31"* %4 to i8*
  tail call void @_ZdlPv(i8* nonnull %5) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit

_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZNSt10unique_ptrI15kiss_fftr_statePFvPvEED2Ev(%"class.std::unique_ptr.20"* %this) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !103 {
entry:
  %_M_head_impl.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.20", %"class.std::unique_ptr.20"* %this, i64 0, i32 0, i32 0, i32 1, i32 0
  %0 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i, align 8, !tbaa !76
  %cmp = icmp eq %struct.kiss_fftr_state* %0, null
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.kiss_fftr_state* %0 to i8*
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.20", %"class.std::unique_ptr.20"* %this, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %2 = load void (i8*)*, void (i8*)** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  invoke void %2(i8* nonnull %1)
          to label %if.end unwind label %lpad

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  tail call void @__clang_call_terminate(i8* %4) #27
  unreachable

if.end:                                           ; preds = %if.then, %entry
  store %struct.kiss_fftr_state* null, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i, align 8, !tbaa !76
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* %this, i8* %__beg, i8* %__end) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !61 {
entry:
  %__dnew = alloca i64, align 8
  %cmp.i = icmp ne i8* %__beg, null
  %cmp = icmp eq i8* %__beg, %__end
  %or.cond = or i1 %cmp.i, %cmp
  br i1 %or.cond, label %if.end, label %if.then, !prof !468

if.then:                                          ; preds = %entry
  tail call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0)) #28
  unreachable

if.end:                                           ; preds = %entry
  %0 = bitcast i64* %__dnew to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #24
  %sub.ptr.lhs.cast.i.i = ptrtoint i8* %__end to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i8* %__beg to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  store i64 %sub.ptr.sub.i.i, i64* %__dnew, align 8, !tbaa !469
  %cmp3 = icmp ugt i64 %sub.ptr.sub.i.i, 15
  br i1 %cmp3, label %if.then4, label %if.end.if.end6_crit_edge, !prof !330

if.end.if.end6_crit_edge:                         ; preds = %if.end
  %_M_p.i.phi.trans.insert = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this, i64 0, i32 0, i32 0
  %.pre = load i8*, i8** %_M_p.i.phi.trans.insert, align 8, !tbaa !325
  br label %if.end6

if.then4:                                         ; preds = %if.end
  %call5 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* %this, i64* nonnull dereferenceable(8) %__dnew, i64 0)
  %_M_p.i18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this, i64 0, i32 0, i32 0
  store i8* %call5, i8** %_M_p.i18, align 8, !tbaa !325
  %1 = load i64, i64* %__dnew, align 8, !tbaa !469
  %_M_allocated_capacity.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this, i64 0, i32 2, i32 0
  store i64 %1, i64* %_M_allocated_capacity.i, align 8, !tbaa !470
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end.if.end6_crit_edge
  %2 = phi i8* [ %.pre, %if.end.if.end6_crit_edge ], [ %call5, %if.then4 ]
  %_M_p.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this, i64 0, i32 0, i32 0
  switch i64 %sub.ptr.sub.i.i, label %if.end.i.i.i [
    i64 1, label %if.then.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_.exit
  ], !prof !471

if.then.i.i:                                      ; preds = %if.end6
  %3 = load i8, i8* %__beg, align 1, !tbaa !470
  store i8 %3, i8* %2, align 1, !tbaa !470
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_.exit

if.end.i.i.i:                                     ; preds = %if.end6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %__beg, i64 %sub.ptr.sub.i.i, i1 false) #24
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_.exit: ; preds = %if.end.i.i.i, %if.then.i.i, %if.end6
  %4 = load i64, i64* %__dnew, align 8, !tbaa !469
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this, i64 0, i32 1
  store i64 %4, i64* %_M_string_length.i.i, align 8, !tbaa !328
  %5 = load i8*, i8** %_M_p.i, align 8, !tbaa !325
  %arrayidx.i = getelementptr inbounds i8, i8* %5, i64 %4
  store i8 0, i8* %arrayidx.i, align 1, !tbaa !470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #24
  ret void
}

; Function Attrs: noreturn
declare void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #23

declare i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"*, i64* dereferenceable(8), i64) local_unnamed_addr #0

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() local_unnamed_addr #23

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf(%"class.std::vector.0"* %this, float* %__position.coerce, i64 %__n, float* dereferenceable(4) %__x) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !472 {
entry:
  %0 = ptrtoint float* %__position.coerce to i64
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end102, label %if.then, !prof !473

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 2
  %1 = bitcast float** %_M_end_of_storage to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !474
  %_M_finish = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 1
  %3 = bitcast float** %_M_finish to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !113
  %sub.ptr.sub = sub i64 %2, %4
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  %5 = inttoptr i64 %4 to float*
  br i1 %cmp3, label %if.else44, label %if.then4, !prof !117

if.then4:                                         ; preds = %if.then
  %6 = bitcast float* %__x to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !83
  %sub.ptr.sub.i = sub i64 %4, %0
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp9 = icmp ugt i64 %sub.ptr.div.i, %__n
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.then4
  %idx.neg = sub i64 0, %__n
  %add.ptr = getelementptr inbounds float, float* %5, i64 %idx.neg
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i = ptrtoint float* %add.ptr to i64
  %diff.neg = shl i64 %__n, 2
  %tobool.i.i.i.i.i.i.i.i = icmp eq i64 %diff.neg, 0
  br i1 %tobool.i.i.i.i.i.i.i.i, label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit, label %if.then.i.i.i.i.i.i.i.i, !prof !475

if.then.i.i.i.i.i.i.i.i:                          ; preds = %if.then10
  %8 = inttoptr i64 %4 to i8*
  %9 = bitcast float* %add.ptr to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %9, i64 %diff.neg, i1 false) #24
  %.pre213 = load float*, float** %_M_finish, align 8, !tbaa !113
  br label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit

_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit: ; preds = %if.then.i.i.i.i.i.i.i.i, %if.then10
  %10 = phi float* [ %5, %if.then10 ], [ %.pre213, %if.then.i.i.i.i.i.i.i.i ]
  %add.ptr21 = getelementptr inbounds float, float* %10, i64 %__n
  store float* %add.ptr21, float** %_M_finish, align 8, !tbaa !113
  %sub.ptr.sub.i.i.i.i = sub i64 %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i, %0
  %tobool.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i, 0
  br i1 %tobool.i.i.i.i, label %for.body.i.i196.preheader, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
  %sub.ptr.div.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i, 2
  %idx.neg.i.i.i.i = sub nsw i64 0, %sub.ptr.div.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr inbounds float, float* %5, i64 %idx.neg.i.i.i.i
  %11 = bitcast float* %add.ptr.i.i.i.i to i8*
  %12 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 %sub.ptr.sub.i.i.i.i, i1 false) #24
  br label %for.body.i.i196.preheader

for.body.i.i196.preheader:                        ; preds = %if.then.i.i.i.i, %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit
  %add.ptr28 = getelementptr inbounds float, float* %__position.coerce, i64 %__n
  %13 = shl nsw i64 %__n, 2
  %14 = add i64 %13, -4
  %15 = lshr exact i64 %14, 2
  %16 = add nuw nsw i64 %15, 1
  %xtraiter251 = and i64 %16, 7
  %lcmp.mod252 = icmp eq i64 %xtraiter251, 0
  br i1 %lcmp.mod252, label %for.body.i.i196.prol.loopexit, label %for.body.i.i196.prol

for.body.i.i196.prol:                             ; preds = %for.body.i.i196.prol, %for.body.i.i196.preheader
  %__first.addr.05.i.i193.prol = phi float* [ %incdec.ptr.i.i194.prol, %for.body.i.i196.prol ], [ %__position.coerce, %for.body.i.i196.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body.i.i196.prol ], [ %xtraiter251, %for.body.i.i196.preheader ]
  %17 = bitcast float* %__first.addr.05.i.i193.prol to i32*
  store i32 %7, i32* %17, align 4, !tbaa !83
  %incdec.ptr.i.i194.prol = getelementptr inbounds float, float* %__first.addr.05.i.i193.prol, i64 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body.i.i196.prol.loopexit, label %for.body.i.i196.prol, !llvm.loop !476

for.body.i.i196.prol.loopexit:                    ; preds = %for.body.i.i196.prol, %for.body.i.i196.preheader
  %__first.addr.05.i.i193.unr = phi float* [ %__position.coerce, %for.body.i.i196.preheader ], [ %incdec.ptr.i.i194.prol, %for.body.i.i196.prol ]
  %18 = icmp ult i64 %14, 28
  br i1 %18, label %if.end102, label %for.body.i.i196

for.body.i.i196:                                  ; preds = %for.body.i.i196, %for.body.i.i196.prol.loopexit
  %__first.addr.05.i.i193 = phi float* [ %incdec.ptr.i.i194.7, %for.body.i.i196 ], [ %__first.addr.05.i.i193.unr, %for.body.i.i196.prol.loopexit ]
  %19 = bitcast float* %__first.addr.05.i.i193 to i32*
  store i32 %7, i32* %19, align 4, !tbaa !83
  %incdec.ptr.i.i194 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 1
  %20 = bitcast float* %incdec.ptr.i.i194 to i32*
  store i32 %7, i32* %20, align 4, !tbaa !83
  %incdec.ptr.i.i194.1 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 2
  %21 = bitcast float* %incdec.ptr.i.i194.1 to i32*
  store i32 %7, i32* %21, align 4, !tbaa !83
  %incdec.ptr.i.i194.2 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 3
  %22 = bitcast float* %incdec.ptr.i.i194.2 to i32*
  store i32 %7, i32* %22, align 4, !tbaa !83
  %incdec.ptr.i.i194.3 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 4
  %23 = bitcast float* %incdec.ptr.i.i194.3 to i32*
  store i32 %7, i32* %23, align 4, !tbaa !83
  %incdec.ptr.i.i194.4 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 5
  %24 = bitcast float* %incdec.ptr.i.i194.4 to i32*
  store i32 %7, i32* %24, align 4, !tbaa !83
  %incdec.ptr.i.i194.5 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 6
  %25 = bitcast float* %incdec.ptr.i.i194.5 to i32*
  store i32 %7, i32* %25, align 4, !tbaa !83
  %incdec.ptr.i.i194.6 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 7
  %26 = bitcast float* %incdec.ptr.i.i194.6 to i32*
  store i32 %7, i32* %26, align 4, !tbaa !83
  %incdec.ptr.i.i194.7 = getelementptr inbounds float, float* %__first.addr.05.i.i193, i64 8
  %cmp.i.i195.7 = icmp eq float* %incdec.ptr.i.i194.7, %add.ptr28
  br i1 %cmp.i.i195.7, label %if.end102, label %for.body.i.i196

if.else:                                          ; preds = %if.then4
  %sub = sub i64 %__n, %sub.ptr.div.i
  %cmp6.i.i.i.i.i183 = icmp eq i64 %sub, 0
  br i1 %cmp6.i.i.i.i.i183, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191, label %for.body.i.i.i.i.i189.preheader, !prof !477

for.body.i.i.i.i.i189.preheader:                  ; preds = %if.else
  %min.iters.check = icmp ult i64 %sub, 8
  br i1 %min.iters.check, label %for.body.i.i.i.i.i189.preheader250, label %vector.ph

vector.ph:                                        ; preds = %for.body.i.i.i.i.i189.preheader
  %n.vec = and i64 %sub, -8
  %ind.end = sub i64 %sub, %n.vec
  %ind.end217 = getelementptr float, float* %5, i64 %n.vec
  %broadcast.splatinsert220 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat221 = shufflevector <4 x i32> %broadcast.splatinsert220, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert222 = insertelement <4 x i32> undef, i32 %7, i32 0
  %broadcast.splat223 = shufflevector <4 x i32> %broadcast.splatinsert222, <4 x i32> undef, <4 x i32> zeroinitializer
  %27 = add i64 %n.vec, -8
  %28 = lshr exact i64 %27, 3
  %29 = add nuw nsw i64 %28, 1
  %xtraiter258 = and i64 %29, 7
  %30 = icmp ult i64 %27, 56
  br i1 %30, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter261 = sub nsw i64 %29, %xtraiter258
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.7, %vector.body ]
  %niter262 = phi i64 [ %unroll_iter261, %vector.ph.new ], [ %niter262.nsub.7, %vector.body ]
  %next.gep = getelementptr float, float* %5, i64 %index
  %31 = bitcast float* %next.gep to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %31, align 4, !tbaa !83
  %32 = getelementptr float, float* %next.gep, i64 4
  %33 = bitcast float* %32 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %33, align 4, !tbaa !83
  %index.next = or i64 %index, 8
  %next.gep.1 = getelementptr float, float* %5, i64 %index.next
  %34 = bitcast float* %next.gep.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %34, align 4, !tbaa !83
  %35 = getelementptr float, float* %next.gep.1, i64 4
  %36 = bitcast float* %35 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %36, align 4, !tbaa !83
  %index.next.1 = or i64 %index, 16
  %next.gep.2 = getelementptr float, float* %5, i64 %index.next.1
  %37 = bitcast float* %next.gep.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %37, align 4, !tbaa !83
  %38 = getelementptr float, float* %next.gep.2, i64 4
  %39 = bitcast float* %38 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %39, align 4, !tbaa !83
  %index.next.2 = or i64 %index, 24
  %next.gep.3 = getelementptr float, float* %5, i64 %index.next.2
  %40 = bitcast float* %next.gep.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %40, align 4, !tbaa !83
  %41 = getelementptr float, float* %next.gep.3, i64 4
  %42 = bitcast float* %41 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %42, align 4, !tbaa !83
  %index.next.3 = or i64 %index, 32
  %next.gep.4 = getelementptr float, float* %5, i64 %index.next.3
  %43 = bitcast float* %next.gep.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %43, align 4, !tbaa !83
  %44 = getelementptr float, float* %next.gep.4, i64 4
  %45 = bitcast float* %44 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %45, align 4, !tbaa !83
  %index.next.4 = or i64 %index, 40
  %next.gep.5 = getelementptr float, float* %5, i64 %index.next.4
  %46 = bitcast float* %next.gep.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %46, align 4, !tbaa !83
  %47 = getelementptr float, float* %next.gep.5, i64 4
  %48 = bitcast float* %47 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %48, align 4, !tbaa !83
  %index.next.5 = or i64 %index, 48
  %next.gep.6 = getelementptr float, float* %5, i64 %index.next.5
  %49 = bitcast float* %next.gep.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %49, align 4, !tbaa !83
  %50 = getelementptr float, float* %next.gep.6, i64 4
  %51 = bitcast float* %50 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %51, align 4, !tbaa !83
  %index.next.6 = or i64 %index, 56
  %next.gep.7 = getelementptr float, float* %5, i64 %index.next.6
  %52 = bitcast float* %next.gep.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %52, align 4, !tbaa !83
  %53 = getelementptr float, float* %next.gep.7, i64 4
  %54 = bitcast float* %53 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %54, align 4, !tbaa !83
  %index.next.7 = add i64 %index, 64
  %niter262.nsub.7 = add i64 %niter262, -8
  %niter262.ncmp.7 = icmp eq i64 %niter262.nsub.7, 0
  br i1 %niter262.ncmp.7, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !478

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.7, %vector.body ]
  %lcmp.mod260 = icmp eq i64 %xtraiter258, 0
  br i1 %lcmp.mod260, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %index.epil = phi i64 [ %index.next.epil, %vector.body.epil ], [ %index.unr, %middle.block.unr-lcssa ]
  %epil.iter259 = phi i64 [ %epil.iter259.sub, %vector.body.epil ], [ %xtraiter258, %middle.block.unr-lcssa ]
  %next.gep.epil = getelementptr float, float* %5, i64 %index.epil
  %55 = bitcast float* %next.gep.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat221, <4 x i32>* %55, align 4, !tbaa !83
  %56 = getelementptr float, float* %next.gep.epil, i64 4
  %57 = bitcast float* %56 to <4 x i32>*
  store <4 x i32> %broadcast.splat223, <4 x i32>* %57, align 4, !tbaa !83
  %index.next.epil = add i64 %index.epil, 8
  %epil.iter259.sub = add i64 %epil.iter259, -1
  %epil.iter259.cmp = icmp eq i64 %epil.iter259.sub, 0
  br i1 %epil.iter259.cmp, label %middle.block, label %vector.body.epil, !llvm.loop !479

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %sub, %n.vec
  br i1 %cmp.n, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191, label %for.body.i.i.i.i.i189.preheader250

for.body.i.i.i.i.i189.preheader250:               ; preds = %middle.block, %for.body.i.i.i.i.i189.preheader
  %__niter.08.i.i.i.i.i184.ph = phi i64 [ %sub, %for.body.i.i.i.i.i189.preheader ], [ %ind.end, %middle.block ]
  %__first.addr.07.i.i.i.i.i185.ph = phi float* [ %5, %for.body.i.i.i.i.i189.preheader ], [ %ind.end217, %middle.block ]
  br label %for.body.i.i.i.i.i189

for.body.i.i.i.i.i189:                            ; preds = %for.body.i.i.i.i.i189, %for.body.i.i.i.i.i189.preheader250
  %__niter.08.i.i.i.i.i184 = phi i64 [ %dec.i.i.i.i.i186, %for.body.i.i.i.i.i189 ], [ %__niter.08.i.i.i.i.i184.ph, %for.body.i.i.i.i.i189.preheader250 ]
  %__first.addr.07.i.i.i.i.i185 = phi float* [ %incdec.ptr.i.i.i.i.i187, %for.body.i.i.i.i.i189 ], [ %__first.addr.07.i.i.i.i.i185.ph, %for.body.i.i.i.i.i189.preheader250 ]
  %58 = bitcast float* %__first.addr.07.i.i.i.i.i185 to i32*
  store i32 %7, i32* %58, align 4, !tbaa !83
  %dec.i.i.i.i.i186 = add i64 %__niter.08.i.i.i.i.i184, -1
  %incdec.ptr.i.i.i.i.i187 = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i185, i64 1
  %cmp.i.i.i.i.i188 = icmp eq i64 %dec.i.i.i.i.i186, 0
  br i1 %cmp.i.i.i.i.i188, label %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191, label %for.body.i.i.i.i.i189, !prof !477, !llvm.loop !480

_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191: ; preds = %for.body.i.i.i.i.i189, %middle.block, %if.else
  %__first.addr.0.lcssa.i.i.i.i.i190 = phi float* [ %5, %if.else ], [ %ind.end217, %middle.block ], [ %incdec.ptr.i.i.i.i.i187, %for.body.i.i.i.i.i189 ]
  store float* %__first.addr.0.lcssa.i.i.i.i.i190, float** %_M_finish, align 8, !tbaa !113
  %tobool.i.i.i.i.i.i.i.i178 = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i178, label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181, label %if.then.i.i.i.i.i.i.i.i179, !prof !475

if.then.i.i.i.i.i.i.i.i179:                       ; preds = %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
  %59 = bitcast float* %__first.addr.0.lcssa.i.i.i.i.i190 to i8*
  %60 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 %sub.ptr.sub.i, i1 false) #24
  %.pre = load float*, float** %_M_finish, align 8, !tbaa !113
  br label %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181

_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181: ; preds = %if.then.i.i.i.i.i.i.i.i179, %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191
  %61 = phi float* [ %__first.addr.0.lcssa.i.i.i.i.i190, %_ZSt24__uninitialized_fill_n_aIPfmffET_S1_T0_RKT1_RSaIT2_E.exit191 ], [ %.pre, %if.then.i.i.i.i.i.i.i.i179 ]
  %add.ptr42 = getelementptr inbounds float, float* %61, i64 %sub.ptr.div.i
  store float* %add.ptr42, float** %_M_finish, align 8, !tbaa !113
  %cmp4.i.i = icmp eq float* %5, %__position.coerce
  br i1 %cmp4.i.i, label %if.end102, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181
  %scevgep = getelementptr float, float* %5, i64 -1
  %62 = ptrtoint float* %scevgep to i64
  %63 = sub i64 %62, %0
  %64 = lshr i64 %63, 2
  %65 = add nuw nsw i64 %64, 1
  %xtraiter255 = and i64 %65, 7
  %lcmp.mod256 = icmp eq i64 %xtraiter255, 0
  br i1 %lcmp.mod256, label %for.body.i.i.prol.loopexit, label %for.body.i.i.prol

for.body.i.i.prol:                                ; preds = %for.body.i.i.prol, %for.body.i.i.preheader
  %__first.addr.05.i.i.prol = phi float* [ %incdec.ptr.i.i.prol, %for.body.i.i.prol ], [ %__position.coerce, %for.body.i.i.preheader ]
  %prol.iter257 = phi i64 [ %prol.iter257.sub, %for.body.i.i.prol ], [ %xtraiter255, %for.body.i.i.preheader ]
  %66 = bitcast float* %__first.addr.05.i.i.prol to i32*
  store i32 %7, i32* %66, align 4, !tbaa !83
  %incdec.ptr.i.i.prol = getelementptr inbounds float, float* %__first.addr.05.i.i.prol, i64 1
  %prol.iter257.sub = add i64 %prol.iter257, -1
  %prol.iter257.cmp = icmp eq i64 %prol.iter257.sub, 0
  br i1 %prol.iter257.cmp, label %for.body.i.i.prol.loopexit, label %for.body.i.i.prol, !llvm.loop !481

for.body.i.i.prol.loopexit:                       ; preds = %for.body.i.i.prol, %for.body.i.i.preheader
  %__first.addr.05.i.i.unr = phi float* [ %__position.coerce, %for.body.i.i.preheader ], [ %incdec.ptr.i.i.prol, %for.body.i.i.prol ]
  %67 = icmp ult i64 %63, 28
  br i1 %67, label %if.end102, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.i.i.prol.loopexit
  %__first.addr.05.i.i = phi float* [ %incdec.ptr.i.i.7, %for.body.i.i ], [ %__first.addr.05.i.i.unr, %for.body.i.i.prol.loopexit ]
  %68 = bitcast float* %__first.addr.05.i.i to i32*
  store i32 %7, i32* %68, align 4, !tbaa !83
  %incdec.ptr.i.i = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 1
  %69 = bitcast float* %incdec.ptr.i.i to i32*
  store i32 %7, i32* %69, align 4, !tbaa !83
  %incdec.ptr.i.i.1 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 2
  %70 = bitcast float* %incdec.ptr.i.i.1 to i32*
  store i32 %7, i32* %70, align 4, !tbaa !83
  %incdec.ptr.i.i.2 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 3
  %71 = bitcast float* %incdec.ptr.i.i.2 to i32*
  store i32 %7, i32* %71, align 4, !tbaa !83
  %incdec.ptr.i.i.3 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 4
  %72 = bitcast float* %incdec.ptr.i.i.3 to i32*
  store i32 %7, i32* %72, align 4, !tbaa !83
  %incdec.ptr.i.i.4 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 5
  %73 = bitcast float* %incdec.ptr.i.i.4 to i32*
  store i32 %7, i32* %73, align 4, !tbaa !83
  %incdec.ptr.i.i.5 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 6
  %74 = bitcast float* %incdec.ptr.i.i.5 to i32*
  store i32 %7, i32* %74, align 4, !tbaa !83
  %incdec.ptr.i.i.6 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 7
  %75 = bitcast float* %incdec.ptr.i.i.6 to i32*
  store i32 %7, i32* %75, align 4, !tbaa !83
  %incdec.ptr.i.i.7 = getelementptr inbounds float, float* %__first.addr.05.i.i, i64 8
  %cmp.i.i172.7 = icmp eq float* %incdec.ptr.i.i.7, %5
  br i1 %cmp.i.i172.7, label %if.end102, label %for.body.i.i

if.else44:                                        ; preds = %if.then
  %76 = bitcast %"class.std::vector.0"* %this to i64*
  %77 = load i64, i64* %76, align 8, !tbaa !116
  %sub.ptr.sub.i21.i = sub i64 %4, %77
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 2
  %sub.i = sub nsw i64 4611686018427387903, %sub.ptr.div.i22.i
  %cmp.i168 = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i168, label %if.then.i169, label %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit, !prof !482

if.then.i169:                                     ; preds = %if.else44
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0)) #28
  unreachable

_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit:    ; preds = %if.else44
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 4611686018427387903
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i170 = select i1 %or.cond.i, i64 4611686018427387903, i64 %add.i, !prof !483
  %78 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0
  %sub.ptr.sub.i166 = sub i64 %0, %77
  %sub.ptr.div.i167 = ashr exact i64 %sub.ptr.sub.i166, 2
  %cmp.i = icmp eq i64 %cond.i170, 0
  br i1 %cmp.i, label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, !prof !482

_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i170, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %79 = bitcast i8* %call2.i.i.i to float*
  br label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit

_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit:  ; preds = %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %80 = phi float* [ %79, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %81 = phi i8* [ %call2.i.i.i, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %add.ptr51 = getelementptr inbounds float, float* %80, i64 %sub.ptr.div.i167
  %82 = bitcast float* %__x to i32*
  %83 = load i32, i32* %82, align 4, !tbaa !83
  %min.iters.check227 = icmp ult i64 %__n, 8
  br i1 %min.iters.check227, label %for.body.i.i.i.i.i.preheader, label %vector.ph228

vector.ph228:                                     ; preds = %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %n.vec230 = and i64 %__n, -8
  %ind.end234 = sub i64 %__n, %n.vec230
  %ind.end236 = getelementptr float, float* %add.ptr51, i64 %n.vec230
  %broadcast.splatinsert245 = insertelement <4 x i32> undef, i32 %83, i32 0
  %broadcast.splat246 = shufflevector <4 x i32> %broadcast.splatinsert245, <4 x i32> undef, <4 x i32> zeroinitializer
  %broadcast.splatinsert247 = insertelement <4 x i32> undef, i32 %83, i32 0
  %broadcast.splat248 = shufflevector <4 x i32> %broadcast.splatinsert247, <4 x i32> undef, <4 x i32> zeroinitializer
  %84 = add i64 %n.vec230, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %xtraiter = and i64 %86, 7
  %87 = icmp ult i64 %84, 56
  br i1 %87, label %middle.block225.unr-lcssa, label %vector.ph228.new

vector.ph228.new:                                 ; preds = %vector.ph228
  %unroll_iter = sub nsw i64 %86, %xtraiter
  br label %vector.body224

vector.body224:                                   ; preds = %vector.body224, %vector.ph228.new
  %index231 = phi i64 [ 0, %vector.ph228.new ], [ %index.next232.7, %vector.body224 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph228.new ], [ %niter.nsub.7, %vector.body224 ]
  %next.gep243 = getelementptr float, float* %add.ptr51, i64 %index231
  %88 = bitcast float* %next.gep243 to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %88, align 4, !tbaa !83
  %89 = getelementptr float, float* %next.gep243, i64 4
  %90 = bitcast float* %89 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %90, align 4, !tbaa !83
  %index.next232 = or i64 %index231, 8
  %next.gep243.1 = getelementptr float, float* %add.ptr51, i64 %index.next232
  %91 = bitcast float* %next.gep243.1 to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %91, align 4, !tbaa !83
  %92 = getelementptr float, float* %next.gep243.1, i64 4
  %93 = bitcast float* %92 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %93, align 4, !tbaa !83
  %index.next232.1 = or i64 %index231, 16
  %next.gep243.2 = getelementptr float, float* %add.ptr51, i64 %index.next232.1
  %94 = bitcast float* %next.gep243.2 to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %94, align 4, !tbaa !83
  %95 = getelementptr float, float* %next.gep243.2, i64 4
  %96 = bitcast float* %95 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %96, align 4, !tbaa !83
  %index.next232.2 = or i64 %index231, 24
  %next.gep243.3 = getelementptr float, float* %add.ptr51, i64 %index.next232.2
  %97 = bitcast float* %next.gep243.3 to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %97, align 4, !tbaa !83
  %98 = getelementptr float, float* %next.gep243.3, i64 4
  %99 = bitcast float* %98 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %99, align 4, !tbaa !83
  %index.next232.3 = or i64 %index231, 32
  %next.gep243.4 = getelementptr float, float* %add.ptr51, i64 %index.next232.3
  %100 = bitcast float* %next.gep243.4 to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %100, align 4, !tbaa !83
  %101 = getelementptr float, float* %next.gep243.4, i64 4
  %102 = bitcast float* %101 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %102, align 4, !tbaa !83
  %index.next232.4 = or i64 %index231, 40
  %next.gep243.5 = getelementptr float, float* %add.ptr51, i64 %index.next232.4
  %103 = bitcast float* %next.gep243.5 to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %103, align 4, !tbaa !83
  %104 = getelementptr float, float* %next.gep243.5, i64 4
  %105 = bitcast float* %104 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %105, align 4, !tbaa !83
  %index.next232.5 = or i64 %index231, 48
  %next.gep243.6 = getelementptr float, float* %add.ptr51, i64 %index.next232.5
  %106 = bitcast float* %next.gep243.6 to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %106, align 4, !tbaa !83
  %107 = getelementptr float, float* %next.gep243.6, i64 4
  %108 = bitcast float* %107 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %108, align 4, !tbaa !83
  %index.next232.6 = or i64 %index231, 56
  %next.gep243.7 = getelementptr float, float* %add.ptr51, i64 %index.next232.6
  %109 = bitcast float* %next.gep243.7 to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %109, align 4, !tbaa !83
  %110 = getelementptr float, float* %next.gep243.7, i64 4
  %111 = bitcast float* %110 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %111, align 4, !tbaa !83
  %index.next232.7 = add i64 %index231, 64
  %niter.nsub.7 = add i64 %niter, -8
  %niter.ncmp.7 = icmp eq i64 %niter.nsub.7, 0
  br i1 %niter.ncmp.7, label %middle.block225.unr-lcssa, label %vector.body224, !llvm.loop !484

middle.block225.unr-lcssa:                        ; preds = %vector.body224, %vector.ph228
  %index231.unr = phi i64 [ 0, %vector.ph228 ], [ %index.next232.7, %vector.body224 ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block225, label %vector.body224.epil

vector.body224.epil:                              ; preds = %vector.body224.epil, %middle.block225.unr-lcssa
  %index231.epil = phi i64 [ %index.next232.epil, %vector.body224.epil ], [ %index231.unr, %middle.block225.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %vector.body224.epil ], [ %xtraiter, %middle.block225.unr-lcssa ]
  %next.gep243.epil = getelementptr float, float* %add.ptr51, i64 %index231.epil
  %112 = bitcast float* %next.gep243.epil to <4 x i32>*
  store <4 x i32> %broadcast.splat246, <4 x i32>* %112, align 4, !tbaa !83
  %113 = getelementptr float, float* %next.gep243.epil, i64 4
  %114 = bitcast float* %113 to <4 x i32>*
  store <4 x i32> %broadcast.splat248, <4 x i32>* %114, align 4, !tbaa !83
  %index.next232.epil = add i64 %index231.epil, 8
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %middle.block225, label %vector.body224.epil, !llvm.loop !485

middle.block225:                                  ; preds = %vector.body224.epil, %middle.block225.unr-lcssa
  %cmp.n237 = icmp eq i64 %n.vec230, %__n
  br i1 %cmp.n237, label %invoke.cont, label %for.body.i.i.i.i.i.preheader

for.body.i.i.i.i.i.preheader:                     ; preds = %middle.block225, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %__niter.08.i.i.i.i.i.ph = phi i64 [ %__n, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ], [ %ind.end234, %middle.block225 ]
  %__first.addr.07.i.i.i.i.i.ph = phi float* [ %add.ptr51, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit ], [ %ind.end236, %middle.block225 ]
  br label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.body.i.i.i.i.i, %for.body.i.i.i.i.i.preheader
  %__niter.08.i.i.i.i.i = phi i64 [ %dec.i.i.i.i.i, %for.body.i.i.i.i.i ], [ %__niter.08.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ]
  %__first.addr.07.i.i.i.i.i = phi float* [ %incdec.ptr.i.i.i.i.i, %for.body.i.i.i.i.i ], [ %__first.addr.07.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ]
  %115 = bitcast float* %__first.addr.07.i.i.i.i.i to i32*
  store i32 %83, i32* %115, align 4, !tbaa !83
  %dec.i.i.i.i.i = add i64 %__niter.08.i.i.i.i.i, -1
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds float, float* %__first.addr.07.i.i.i.i.i, i64 1
  %cmp.i.i.i.i.i = icmp eq i64 %dec.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i, label %invoke.cont, label %for.body.i.i.i.i.i, !prof !477, !llvm.loop !486

invoke.cont:                                      ; preds = %for.body.i.i.i.i.i, %middle.block225
  %116 = load float*, float** %78, align 8, !tbaa !116
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i157 = ptrtoint float* %116 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i158 = sub i64 %0, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i157
  %sub.ptr.div.i.i.i.i.i.i.i.i159 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i158, 2
  %tobool.i.i.i.i.i.i.i.i160 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i158, 0
  br i1 %tobool.i.i.i.i.i.i.i.i160, label %invoke.cont57, label %if.then.i.i.i.i.i.i.i.i161, !prof !475

if.then.i.i.i.i.i.i.i.i161:                       ; preds = %invoke.cont
  %117 = bitcast float* %116 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 %117, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i158, i1 false) #24
  br label %invoke.cont57

invoke.cont57:                                    ; preds = %if.then.i.i.i.i.i.i.i.i161, %invoke.cont
  %add.ptr.i.i.i.i.i.i.i.i162 = getelementptr inbounds float, float* %80, i64 %sub.ptr.div.i.i.i.i.i.i.i.i159
  %add.ptr59 = getelementptr inbounds float, float* %add.ptr.i.i.i.i.i.i.i.i162, i64 %__n
  %118 = load i64, i64* %3, align 8, !tbaa !113
  %sub.ptr.sub.i.i.i.i.i.i.i.i151 = sub i64 %118, %0
  %sub.ptr.div.i.i.i.i.i.i.i.i152 = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i151, 2
  %tobool.i.i.i.i.i.i.i.i153 = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i151, 0
  br i1 %tobool.i.i.i.i.i.i.i.i153, label %invoke.cont64, label %if.then.i.i.i.i.i.i.i.i154, !prof !475

if.then.i.i.i.i.i.i.i.i154:                       ; preds = %invoke.cont57
  %119 = bitcast float* %add.ptr59 to i8*
  %120 = bitcast float* %__position.coerce to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %119, i8* align 4 %120, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i151, i1 false) #24
  br label %invoke.cont64

invoke.cont64:                                    ; preds = %if.then.i.i.i.i.i.i.i.i154, %invoke.cont57
  %add.ptr.i.i.i.i.i.i.i.i155 = getelementptr inbounds float, float* %add.ptr59, i64 %sub.ptr.div.i.i.i.i.i.i.i.i152
  %tobool.i146 = icmp eq float* %116, null
  br i1 %tobool.i146, label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148, label %if.then.i147, !prof !154

if.then.i147:                                     ; preds = %invoke.cont64
  %121 = bitcast float* %116 to i8*
  tail call void @_ZdlPv(i8* nonnull %121) #24
  br label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148

_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148: ; preds = %if.then.i147, %invoke.cont64
  store float* %80, float** %78, align 8, !tbaa !116
  store float* %add.ptr.i.i.i.i.i.i.i.i155, float** %_M_finish, align 8, !tbaa !113
  %add.ptr98 = getelementptr inbounds float, float* %80, i64 %cond.i170
  store float* %add.ptr98, float** %_M_end_of_storage, align 8, !tbaa !474
  br label %if.end102

if.end102:                                        ; preds = %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit148, %for.body.i.i, %for.body.i.i.prol.loopexit, %_ZSt22__uninitialized_move_aIPfS0_SaIfEET0_T_S3_S2_RT1_.exit181, %for.body.i.i196, %for.body.i.i196.prol.loopexit, %entry
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #23

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorIfSaIfEE17_M_default_appendEm(%"class.std::vector.0"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !487 {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end47, label %if.then, !prof !488

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast float** %_M_end_of_storage to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !474
  %_M_finish = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 1
  %2 = load float*, float** %_M_finish, align 8, !tbaa !113
  %sub.ptr.rhs.cast = ptrtoint float* %2 to i64
  %sub.ptr.sub = sub i64 %1, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 2
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp3, label %if.else, label %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit, !prof !142

_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first2.i.i.i = bitcast float* %2 to i8*
  %3 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i, i8 0, i64 %3, i1 false)
  %scevgep.i.i = getelementptr float, float* %2, i64 %__n
  br label %if.end47.sink.split

if.else:                                          ; preds = %if.then
  %4 = bitcast float** %_M_finish to i64*
  %5 = bitcast %"class.std::vector.0"* %this to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !116
  %sub.ptr.sub.i21.i = sub i64 %sub.ptr.rhs.cast, %6
  %sub.ptr.div.i22.i = ashr exact i64 %sub.ptr.sub.i21.i, 2
  %sub.i = sub nsw i64 4611686018427387903, %sub.ptr.div.i22.i
  %cmp.i = icmp ult i64 %sub.i, %__n
  br i1 %cmp.i, label %if.then.i71, label %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit, !prof !482

if.then.i71:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0)) #28
  unreachable

_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit:    ; preds = %if.else
  %7 = inttoptr i64 %6 to float*
  %cmp.i.i = icmp ult i64 %sub.ptr.div.i22.i, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %sub.ptr.div.i22.i
  %add.i = add i64 %.sroa.speculated.i, %sub.ptr.div.i22.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i22.i
  %cmp9.i = icmp ugt i64 %add.i, 4611686018427387903
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 4611686018427387903, i64 %add.i, !prof !483
  %cmp.i75 = icmp eq i64 %cond.i, 0
  br i1 %cmp.i75, label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, !prof !482

_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i: ; preds = %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl i64 %cond.i, 2
  %call2.i.i.i = tail call i8* @_Znwm(i64 %mul.i.i.i)
  %8 = bitcast i8* %call2.i.i.i to float*
  %_M_start.phi.trans.insert = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %this, i64 0, i32 0, i32 0, i32 0
  %.pre = load float*, float** %_M_start.phi.trans.insert, align 8, !tbaa !116
  %.pre83 = load i64, i64* %4, align 8, !tbaa !113
  br label %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit

_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit:  ; preds = %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit
  %9 = phi i64 [ %.pre83, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ %sub.ptr.rhs.cast, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %10 = phi float* [ %.pre, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ %7, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %11 = phi i8* [ %call2.i.i.i, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %cond.i76 = phi float* [ %8, %_ZNSt16allocator_traitsISaIfEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc.exit ]
  %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i = ptrtoint float* %10 to i64
  %sub.ptr.sub.i.i.i.i.i.i.i.i = sub i64 %9, %sub.ptr.rhs.cast.i.i.i.i.i.i.i.i
  %sub.ptr.div.i.i.i.i.i.i.i.i = ashr exact i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 2
  %tobool.i.i.i.i.i.i.i.i = icmp eq i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, 0
  br i1 %tobool.i.i.i.i.i.i.i.i, label %invoke.cont19, label %if.then.i.i.i.i.i.i.i.i, !prof !475

if.then.i.i.i.i.i.i.i.i:                          ; preds = %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %12 = bitcast float* %10 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 %sub.ptr.sub.i.i.i.i.i.i.i.i, i1 false) #24
  br label %invoke.cont19

invoke.cont19:                                    ; preds = %if.then.i.i.i.i.i.i.i.i, %_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm.exit
  %add.ptr.i.i.i.i.i.i.i.i = getelementptr inbounds float, float* %cond.i76, i64 %sub.ptr.div.i.i.i.i.i.i.i.i
  %__first2.i.i.i78 = bitcast float* %add.ptr.i.i.i.i.i.i.i.i to i8*
  %13 = shl nuw i64 %__n, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %__first2.i.i.i78, i8 0, i64 %13, i1 false)
  %scevgep.i.i79 = getelementptr float, float* %add.ptr.i.i.i.i.i.i.i.i, i64 %__n
  %tobool.i72 = icmp eq float* %10, null
  br i1 %tobool.i72, label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74, label %if.then.i73, !prof !154

if.then.i73:                                      ; preds = %invoke.cont19
  %14 = bitcast float* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #24
  br label %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74

_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74: ; preds = %if.then.i73, %invoke.cont19
  %15 = bitcast %"class.std::vector.0"* %this to i8**
  store i8* %11, i8** %15, align 8, !tbaa !116
  store float* %scevgep.i.i79, float** %_M_finish, align 8, !tbaa !113
  %add.ptr = getelementptr inbounds float, float* %cond.i76, i64 %cond.i
  br label %if.end47.sink.split

if.end47.sink.split:                              ; preds = %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit
  %_M_finish.sink = phi float** [ %_M_finish, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74 ]
  %scevgep.i.i.sink = phi float* [ %scevgep.i.i, %_ZSt27__uninitialized_default_n_aIPfmfET_S1_T0_RSaIT1_E.exit ], [ %add.ptr, %_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm.exit74 ]
  store float* %scevgep.i.i.sink, float** %_M_finish.sink, align 8, !tbaa !76
  br label %if.end47

if.end47:                                         ; preds = %if.end47.sink.split, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE19_M_emplace_back_auxIJPfEEEvDpOT_(%"class.std::vector.7"* %this, float** dereferenceable(8) %__args) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !283 {
entry:
  %call = tail call i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector.7"* %this, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0))
  %cmp.i = icmp eq i64 %call, 0
  br i1 %cmp.i, label %invoke.cont, label %cond.true.i, !prof !489

cond.true.i:                                      ; preds = %entry
  %cmp.i.i = icmp ugt i64 %call, 2305843009213693951
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit, !prof !489

if.then.i.i:                                      ; preds = %cond.true.i
  tail call void @_ZSt17__throw_bad_allocv() #28
  unreachable

_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit: ; preds = %cond.true.i
  %mul.i.i = shl i64 %call, 3
  %call2.i.i = tail call i8* @_Znwm(i64 %mul.i.i)
  %0 = bitcast i8* %call2.i.i to %"class.std::unique_ptr.12"*
  br label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit, %entry
  %cond.i = phi %"class.std::unique_ptr.12"* [ %0, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_fSt14default_deleteIS1_EEEE8allocateERS5_m.exit ], [ null, %entry ]
  %_M_finish.i = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 1
  %1 = bitcast %"class.std::unique_ptr.12"** %_M_finish.i to i64*
  %2 = load i64, i64* %1, align 8, !tbaa !210
  %3 = bitcast %"class.std::vector.7"* %this to i64*
  %4 = load i64, i64* %3, align 8, !tbaa !220
  %sub.ptr.sub.i = sub i64 %2, %4
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i, i64 %sub.ptr.div.i
  %5 = bitcast float** %__args to i64*
  %6 = load i64, i64* %5, align 8, !tbaa !76
  %7 = bitcast %"class.std::unique_ptr.12"* %add.ptr to i64*
  store i64 %6, i64* %7, align 8, !tbaa !215
  %_M_start = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 0
  %8 = inttoptr i64 %4 to %"class.std::unique_ptr.12"*
  %9 = inttoptr i64 %2 to %"class.std::unique_ptr.12"*
  %cmp.i.i23.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %8, %9
  br i1 %cmp.i.i23.i.i.i.i, label %invoke.cont8.thread, label %for.body.i.i.i.i.peel, !prof !490

for.body.i.i.i.i.peel:                            ; preds = %invoke.cont
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.peel = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = inttoptr i64 %4 to i64*
  %11 = load i64, i64* %10, align 8, !tbaa !76
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i.peel, align 8, !tbaa !76
  %12 = bitcast %"class.std::unique_ptr.12"* %cond.i to i64*
  store i64 %11, i64* %12, align 8, !tbaa !215
  %incdec.ptr.i.i.i.i.i.peel = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %8, i64 1
  %cmp.i.i.i.i.i.i.peel = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i.peel, %9
  br i1 %cmp.i.i.i.i.i.i.peel, label %invoke.cont8, label %for.body.i.i.i.i, !prof !491

invoke.cont8.thread:                              ; preds = %invoke.cont
  %incdec.ptr75 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i, i64 1
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i.peel
  %__cur.025.i.i.i.i.pn = phi %"class.std::unique_ptr.12"* [ %__cur.025.i.i.i.i, %for.body.i.i.i.i ], [ %cond.i, %for.body.i.i.i.i.peel ]
  %__first.sroa.0.024.i.i.i.i = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i.i.i, %for.body.i.i.i.i ], [ %incdec.ptr.i.i.i.i.i.peel, %for.body.i.i.i.i.peel ]
  %__cur.025.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.pn, i64 1
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i to i64*
  %14 = load i64, i64* %13, align 8, !tbaa !76
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i, align 8, !tbaa !76
  %15 = bitcast %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i to i64*
  store i64 %14, i64* %15, align 8, !tbaa !215
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.sroa.0.024.i.i.i.i, i64 1
  %cmp.i.i.i.i.i.i = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i.i.i, %9
  br i1 %cmp.i.i.i.i.i.i, label %invoke.cont8, label %for.body.i.i.i.i, !prof !492, !llvm.loop !493

invoke.cont8:                                     ; preds = %for.body.i.i.i.i, %for.body.i.i.i.i.peel
  %__cur.025.i.i.i.i.lcssa = phi %"class.std::unique_ptr.12"* [ %cond.i, %for.body.i.i.i.i.peel ], [ %__cur.025.i.i.i.i, %for.body.i.i.i.i ]
  %.pre = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8, !tbaa !220
  %.pre73 = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_finish.i, align 8, !tbaa !210
  %incdec.ptr = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__cur.025.i.i.i.i.lcssa, i64 2
  %cmp3.i.i.i62 = icmp eq %"class.std::unique_ptr.12"* %.pre, %.pre73
  br i1 %cmp3.i.i.i62, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71, label %for.body.i.i.i66.peel, !prof !74

for.body.i.i.i66.peel:                            ; preds = %invoke.cont8
  %_M_head_impl.i.i.i.i.i.i.i.i.i64.peel = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %.pre, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i64.peel, align 8, !tbaa !76
  %cmp.i.i.i.i.i65.peel = icmp eq float* %16, null
  br i1 %cmp.i.i.i.i.i65.peel, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67.peel, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67.peel: ; preds = %for.body.i.i.i66.peel
  %17 = bitcast float* %16 to i8*
  tail call void @_ZdaPv(i8* %17) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67.peel, %for.body.i.i.i66.peel
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i64.peel, align 8, !tbaa !76
  %incdec.ptr.i.i.i68.peel = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %.pre, i64 1
  %cmp.i.i.i69.peel = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i68.peel, %.pre73
  br i1 %cmp.i.i.i69.peel, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71thread-pre-split, label %for.body.i.i.i66.peel79, !prof !224

for.body.i.i.i66.peel79:                          ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel
  %_M_head_impl.i.i.i.i.i.i.i.i.i64.peel80 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i68.peel, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i64.peel80, align 8, !tbaa !76
  %cmp.i.i.i.i.i65.peel81 = icmp eq float* %18, null
  br i1 %cmp.i.i.i.i.i65.peel81, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel83, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67.peel82, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67.peel82: ; preds = %for.body.i.i.i66.peel79
  %19 = bitcast float* %18 to i8*
  tail call void @_ZdaPv(i8* %19) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel83

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel83: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67.peel82, %for.body.i.i.i66.peel79
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i64.peel80, align 8, !tbaa !76
  %incdec.ptr.i.i.i68.peel84 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %.pre, i64 2
  %cmp.i.i.i69.peel85 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i68.peel84, %.pre73
  br i1 %cmp.i.i.i69.peel85, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71thread-pre-split, label %for.body.i.i.i66, !prof !225

for.body.i.i.i66:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel83
  %__first.addr.04.i.i.i63 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr.i.i.i68, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70 ], [ %incdec.ptr.i.i.i68.peel84, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel83 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i64 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i63, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load float*, float** %_M_head_impl.i.i.i.i.i.i.i.i.i64, align 8, !tbaa !76
  %cmp.i.i.i.i.i65 = icmp eq float* %20, null
  br i1 %cmp.i.i.i.i.i65, label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70, label %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67, !prof !223

_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67: ; preds = %for.body.i.i.i66
  %21 = bitcast float* %20 to i8*
  tail call void @_ZdaPv(i8* %21) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70

_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70: ; preds = %_ZNKSt14default_deleteIA_fEclEPf.exit.i.i.i.i.i67, %for.body.i.i.i66
  store float* null, float** %_M_head_impl.i.i.i.i.i.i.i.i.i64, align 8, !tbaa !76
  %incdec.ptr.i.i.i68 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %__first.addr.04.i.i.i63, i64 1
  %cmp.i.i.i69 = icmp eq %"class.std::unique_ptr.12"* %incdec.ptr.i.i.i68, %.pre73
  br i1 %cmp.i.i.i69, label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71thread-pre-split, label %for.body.i.i.i66, !prof !226, !llvm.loop !494

_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71thread-pre-split: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel83, %_ZSt8_DestroyISt10unique_ptrIA_fSt14default_deleteIS1_EEEvPT_.exit.i.i.i70.peel
  %.pr = load %"class.std::unique_ptr.12"*, %"class.std::unique_ptr.12"** %_M_start, align 8, !tbaa !220
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71

_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71thread-pre-split, %invoke.cont8, %invoke.cont8.thread
  %incdec.ptr77 = phi %"class.std::unique_ptr.12"* [ %incdec.ptr, %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71thread-pre-split ], [ %incdec.ptr, %invoke.cont8 ], [ %incdec.ptr75, %invoke.cont8.thread ]
  %22 = phi %"class.std::unique_ptr.12"* [ %.pr, %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71thread-pre-split ], [ %.pre73, %invoke.cont8 ], [ %8, %invoke.cont8.thread ]
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 2
  %tobool.i59 = icmp eq %"class.std::unique_ptr.12"* %22, null
  br i1 %tobool.i59, label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit61, label %if.then.i60, !prof !228

if.then.i60:                                      ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71
  %23 = bitcast %"class.std::unique_ptr.12"* %22 to i8*
  tail call void @_ZdlPv(i8* nonnull %23) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit61

_ZNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE13_M_deallocateEPS4_m.exit61: ; preds = %if.then.i60, %_ZSt8_DestroyIPSt10unique_ptrIA_fSt14default_deleteIS1_EES4_EvT_S6_RSaIT0_E.exit71
  store %"class.std::unique_ptr.12"* %cond.i, %"class.std::unique_ptr.12"** %_M_start, align 8, !tbaa !220
  store %"class.std::unique_ptr.12"* %incdec.ptr77, %"class.std::unique_ptr.12"** %_M_finish.i, align 8, !tbaa !210
  %add.ptr33 = getelementptr inbounds %"class.std::unique_ptr.12", %"class.std::unique_ptr.12"* %cond.i, i64 %call
  store %"class.std::unique_ptr.12"* %add.ptr33, %"class.std::unique_ptr.12"** %_M_end_of_storage, align 8, !tbaa !213
  ret void
}

; Function Attrs: uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector.7"* %this, i64 %__n, i8* %__s) local_unnamed_addr #3 comdat align 2 !prof !283 {
entry:
  %_M_finish.i20 = getelementptr inbounds %"class.std::vector.7", %"class.std::vector.7"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = bitcast %"class.std::unique_ptr.12"** %_M_finish.i20 to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !210
  %2 = bitcast %"class.std::vector.7"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !220
  %sub.ptr.sub.i21 = sub i64 %1, %3
  %sub.ptr.div.i22 = ashr exact i64 %sub.ptr.sub.i21, 3
  %sub = sub nsw i64 2305843009213693951, %sub.ptr.div.i22
  %cmp = icmp ult i64 %sub, %__n
  br i1 %cmp, label %if.then, label %if.end, !prof !489

if.then:                                          ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* %__s) #28
  unreachable

if.end:                                           ; preds = %entry
  %cmp.i = icmp ult i64 %sub.ptr.div.i22, %__n
  %.sroa.speculated = select i1 %cmp.i, i64 %__n, i64 %sub.ptr.div.i22
  %add = add i64 %.sroa.speculated, %sub.ptr.div.i22
  %cmp7 = icmp ult i64 %add, %sub.ptr.div.i22
  %cmp9 = icmp ugt i64 %add, 2305843009213693951
  %or.cond = or i1 %cmp7, %cmp9
  %cond = select i1 %or.cond, i64 2305843009213693951, i64 %add, !prof !495
  ret i64 %cond
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* dereferenceable(272), i8*, i64) local_unnamed_addr #0

; Function Attrs: uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE17_M_default_appendEm(%"class.std::vector.26"* %this, i64 %__n) local_unnamed_addr #3 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !404 {
entry:
  %cmp = icmp eq i64 %__n, 0
  br i1 %cmp, label %if.end47, label %if.then, !prof !496

if.then:                                          ; preds = %entry
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 2
  %0 = bitcast %"class.std::unique_ptr.31"** %_M_end_of_storage to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !497
  %_M_finish = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 1
  %2 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !405
  %sub.ptr.rhs.cast = ptrtoint %"class.std::unique_ptr.31"* %2 to i64
  %sub.ptr.sub = sub i64 %1, %sub.ptr.rhs.cast
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp3 = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp3, label %if.else, label %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit, !prof !402

_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit: ; preds = %if.then
  %__first12.i.i.i = bitcast %"class.std::unique_ptr.31"* %2 to i8*
  %3 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first12.i.i.i, i8 0, i64 %3, i1 false)
  %scevgep.i.i = getelementptr %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %2, i64 %__n
  br label %if.end47.sink.split

if.else:                                          ; preds = %if.then
  %call10 = tail call i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.26"* nonnull %this, i64 %__n, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0))
  %cmp.i = icmp eq i64 %call10, 0
  br i1 %cmp.i, label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit, label %cond.true.i, !prof !496

cond.true.i:                                      ; preds = %if.else
  %cmp.i.i = icmp ugt i64 %call10, 2305843009213693951
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit, !prof !496

if.then.i.i:                                      ; preds = %cond.true.i
  tail call void @_ZSt17__throw_bad_allocv() #28
  unreachable

_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit: ; preds = %cond.true.i
  %mul.i.i = shl i64 %call10, 3
  %call2.i.i = tail call i8* @_Znwm(i64 %mul.i.i)
  %4 = bitcast i8* %call2.i.i to %"class.std::unique_ptr.31"*
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit

_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit: ; preds = %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit, %if.else
  %cond.i = phi %"class.std::unique_ptr.31"* [ %4, %_ZNSt16allocator_traitsISaISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEE8allocateERS6_m.exit ], [ null, %if.else ]
  %_M_start = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !390
  %6 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !405
  %cmp.i.i23.i.i.i.i = icmp eq %"class.std::unique_ptr.31"* %5, %6
  br i1 %cmp.i.i23.i.i.i.i, label %invoke.cont19, label %for.body.i.i.i.i, !prof !402

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit
  %__cur.025.i.i.i.i = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i, %for.body.i.i.i.i ], [ %cond.i, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit ]
  %__first.sroa.0.024.i.i.i.i = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i.i.i, %for.body.i.i.i.i ], [ %5, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit ]
  %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !76
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i20.i.i.i.i, align 8, !tbaa !76
  %9 = bitcast %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i to i64*
  store i64 %8, i64* %9, align 8, !tbaa !498
  %incdec.ptr.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.sroa.0.024.i.i.i.i, i64 1
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.025.i.i.i.i, i64 1
  %cmp.i.i.i.i.i.i = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i.i.i, %6
  br i1 %cmp.i.i.i.i.i.i, label %invoke.cont19, label %for.body.i.i.i.i, !prof !402

invoke.cont19:                                    ; preds = %for.body.i.i.i.i, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit
  %__cur.0.lcssa.i.i.i.i = phi %"class.std::unique_ptr.31"* [ %cond.i, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE11_M_allocateEm.exit ], [ %incdec.ptr.i.i.i.i, %for.body.i.i.i.i ]
  %__first12.i.i.i85 = bitcast %"class.std::unique_ptr.31"* %__cur.0.lcssa.i.i.i.i to i8*
  %10 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first12.i.i.i85, i8 0, i64 %10, i1 false)
  %scevgep.i.i86 = getelementptr %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__cur.0.lcssa.i.i.i.i, i64 %__n
  %11 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !390
  %12 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !405
  %cmp3.i.i.i74 = icmp eq %"class.std::unique_ptr.31"* %11, %12
  br i1 %cmp3.i.i.i74, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83, label %for.body.i.i.i78, !prof !402

for.body.i.i.i78:                                 ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i82, %invoke.cont19
  %__first.addr.04.i.i.i75 = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i80, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i82 ], [ %11, %invoke.cont19 ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i76 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i75, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i76, align 8, !tbaa !76
  %cmp.i.i.i.i.i77 = icmp eq %struct.kiss_fft_cpx* %13, null
  br i1 %cmp.i.i.i.i.i77, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i82, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i79

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i79: ; preds = %for.body.i.i.i78
  %14 = bitcast %struct.kiss_fft_cpx* %13 to i8*
  tail call void @_ZdaPv(i8* %14) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i82

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i82: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i79, %for.body.i.i.i78
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i76, align 8, !tbaa !76
  %incdec.ptr.i.i.i80 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i75, i64 1
  %cmp.i.i.i81 = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i80, %12
  br i1 %cmp.i.i.i81, label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83thread-pre-split, label %for.body.i.i.i78, !prof !402

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83thread-pre-split: ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i82
  %.pr = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !390
  br label %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83

_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83: ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83thread-pre-split, %invoke.cont19
  %15 = phi %"class.std::unique_ptr.31"* [ %.pr, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83thread-pre-split ], [ %11, %invoke.cont19 ]
  %tobool.i71 = icmp eq %"class.std::unique_ptr.31"* %15, null
  br i1 %tobool.i71, label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit73, label %if.then.i72, !prof !402

if.then.i72:                                      ; preds = %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83
  %16 = bitcast %"class.std::unique_ptr.31"* %15 to i8*
  tail call void @_ZdlPv(i8* nonnull %16) #24
  br label %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit73

_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit73: ; preds = %if.then.i72, %_ZSt8_DestroyIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EES5_EvT_S7_RSaIT0_E.exit83
  store %"class.std::unique_ptr.31"* %cond.i, %"class.std::unique_ptr.31"** %_M_start, align 8, !tbaa !390
  store %"class.std::unique_ptr.31"* %scevgep.i.i86, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !405
  %add.ptr = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %cond.i, i64 %call10
  br label %if.end47.sink.split

if.end47.sink.split:                              ; preds = %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit73, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit
  %_M_finish.sink = phi %"class.std::unique_ptr.31"** [ %_M_finish, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit73 ]
  %scevgep.i.i.sink = phi %"class.std::unique_ptr.31"* [ %scevgep.i.i, %_ZSt27__uninitialized_default_n_aIPSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEmS5_ET_S7_T0_RSaIT1_E.exit ], [ %add.ptr, %_ZNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE13_M_deallocateEPS5_m.exit73 ]
  store %"class.std::unique_ptr.31"* %scevgep.i.i.sink, %"class.std::unique_ptr.31"** %_M_finish.sink, align 8, !tbaa !76
  br label %if.end47

if.end47:                                         ; preds = %if.end47.sink.split, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE15_M_erase_at_endEPS5_(%"class.std::vector.26"* %this, %"class.std::unique_ptr.31"* %__pos) local_unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) !prof !103 {
entry:
  %_M_finish = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !405
  %cmp3.i.i.i = icmp eq %"class.std::unique_ptr.31"* %0, %__pos
  br i1 %cmp3.i.i.i, label %invoke.cont, label %for.body.i.i.i, !prof !402

for.body.i.i.i:                                   ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i, %entry
  %__first.addr.04.i.i.i = phi %"class.std::unique_ptr.31"* [ %incdec.ptr.i.i.i, %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i ], [ %__pos, %entry ]
  %_M_head_impl.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %1 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i, align 8, !tbaa !76
  %cmp.i.i.i.i.i = icmp eq %struct.kiss_fft_cpx* %1, null
  br i1 %cmp.i.i.i.i.i, label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i, label %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i

_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i: ; preds = %for.body.i.i.i
  %2 = bitcast %struct.kiss_fft_cpx* %1 to i8*
  tail call void @_ZdaPv(i8* %2) #26
  br label %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i

_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i: ; preds = %_ZNKSt14default_deleteIA_12kiss_fft_cpxEclEPS0_.exit.i.i.i.i.i, %for.body.i.i.i
  store %struct.kiss_fft_cpx* null, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i.i.i.i, align 8, !tbaa !76
  %incdec.ptr.i.i.i = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %__first.addr.04.i.i.i, i64 1
  %cmp.i.i.i = icmp eq %"class.std::unique_ptr.31"* %incdec.ptr.i.i.i, %0
  br i1 %cmp.i.i.i, label %invoke.cont, label %for.body.i.i.i, !prof !402

invoke.cont:                                      ; preds = %_ZSt8_DestroyISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EEEvPT_.exit.i.i.i, %entry
  store %"class.std::unique_ptr.31"* %__pos, %"class.std::unique_ptr.31"** %_M_finish, align 8, !tbaa !405
  ret void
}

; Function Attrs: uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector.26"* %this, i64 %__n, i8* %__s) local_unnamed_addr #3 comdat align 2 !prof !404 {
entry:
  %_M_finish.i20 = getelementptr inbounds %"class.std::vector.26", %"class.std::vector.26"* %this, i64 0, i32 0, i32 0, i32 1
  %0 = bitcast %"class.std::unique_ptr.31"** %_M_finish.i20 to i64*
  %1 = load i64, i64* %0, align 8, !tbaa !405
  %2 = bitcast %"class.std::vector.26"* %this to i64*
  %3 = load i64, i64* %2, align 8, !tbaa !390
  %sub.ptr.sub.i21 = sub i64 %1, %3
  %sub.ptr.div.i22 = ashr exact i64 %sub.ptr.sub.i21, 3
  %sub = sub nsw i64 2305843009213693951, %sub.ptr.div.i22
  %cmp = icmp ult i64 %sub, %__n
  br i1 %cmp, label %if.then, label %if.end, !prof !496

if.then:                                          ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* %__s) #28
  unreachable

if.end:                                           ; preds = %entry
  %cmp.i = icmp ult i64 %sub.ptr.div.i22, %__n
  %.sroa.speculated = select i1 %cmp.i, i64 %__n, i64 %sub.ptr.div.i22
  %add = add i64 %.sroa.speculated, %sub.ptr.div.i22
  %cmp7 = icmp ult i64 %add, %sub.ptr.div.i22
  %cmp9 = icmp ugt i64 %add, 2305843009213693951
  %or.cond = or i1 %cmp7, %cmp9
  %cond = select i1 %or.cond, i64 2305843009213693951, i64 %add, !prof !500
  ret i64 %cond
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #3 section ".text.startup" {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #24
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @puts(i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: uwtable
define %struct.out.rotatorSet_fxp @rotatorSet_fxp_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator) #3 !prof !230 {
entry:
  %head = alloca %class.Orientation, align 4
  %0 = load i32, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !72
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZ14rotatorSet_fxpE5frame, align 4, !tbaa !72
  %1 = bitcast %class.Orientation* %head to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #24
  %conv = sitofp i32 %inc to double
  %div = fdiv double %conv, 1.500000e+03
  %mul1 = fmul double %div, 3.140000e+00
  %mul2 = fmul double %mul1, 2.000000e+00
  %conv3 = fptrunc double %mul2 to float
  call void @_ZN11OrientationC2Efff(%class.Orientation* nonnull %head, float 0.000000e+00, float 0.000000e+00, float %conv3)
  %m_orientation.i = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 1
  %2 = bitcast %class.Orientation* %m_orientation.i to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 4 %1, i64 24, i1 false)
  %3 = bitcast %class.CAmbisonicProcessor* %rotator to void (%class.CAmbisonicProcessor*)***
  %vtable = load void (%class.CAmbisonicProcessor*)**, void (%class.CAmbisonicProcessor*)*** %3, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vtable, i64 4
  %4 = load void (%class.CAmbisonicProcessor*)*, void (%class.CAmbisonicProcessor*)** %vfn, align 8
  call void %4(%class.CAmbisonicProcessor* %rotator)
  %returnStruct = insertvalue %struct.out.rotatorSet_fxp undef, i64 %bytes_rotator, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #24
  ret %struct.out.rotatorSet_fxp %returnStruct
}

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createNode(i8*) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.input(i8*, i32, i32, i1) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.bind.output(i8*, i32, i32, i1) #24

; Function Attrs: nounwind uwtable
define %struct.out.wrapperRotatorSet_fxp @wrapperRotatorSet_fxp_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator) #7 !prof !103 {
entry:
  %rotatorSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* @rotatorSet_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %rotatorSet_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotatorSet_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.output(i8* %rotatorSet_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperRotatorSet_fxp undef
}

; Function Attrs: uwtable
define %struct.out.psychoFilter_fxp @psychoFilter_fxp_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i32 %nSample, float** out %channelpart1, i64 %bytes_channelpart1, float** out %channelpart2, i64 %bytes_channelpart2, float** out %channelpart3, i64 %bytes_channelpart3) #3 !prof !230 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 5
  %1 = load i8, i8* %0, align 4, !tbaa !102, !range !104
  %tobool = icmp eq i8 %1, 0
  br i1 %tobool, label %if.end, label %if.then, !prof !185

if.then:                                          ; preds = %entry
  tail call void @_ZN19CAmbisonicProcessor16ShelfFilterOrderEP8CBFormatj(%class.CAmbisonicProcessor* nonnull %rotator, %class.CBFormat* %sumBF, i32 undef)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp200 = icmp eq i32 %nSample, 0
  br i1 %cmp200, label %for.cond.cleanup, label %for.body.lr.ph, !prof !316

for.body.lr.ph:                                   ; preds = %if.end
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %2 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %2, i64 3
  %3 = load float*, float** %arrayidx.i, align 8, !tbaa !76
  %4 = load float*, float** %channelpart1, align 8, !tbaa !76
  %arrayidx.i199 = getelementptr inbounds float*, float** %2, i64 1
  %5 = load float*, float** %arrayidx.i199, align 8, !tbaa !76
  %arrayidx8 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %6 = load float*, float** %arrayidx8, align 8, !tbaa !76
  %arrayidx.i197 = getelementptr inbounds float*, float** %2, i64 2
  %7 = load float*, float** %arrayidx.i197, align 8, !tbaa !76
  %arrayidx15 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %8 = load float*, float** %arrayidx15, align 8, !tbaa !76
  %arrayidx.i195 = getelementptr inbounds float*, float** %2, i64 6
  %9 = load float*, float** %arrayidx.i195, align 8, !tbaa !76
  %10 = load float*, float** %channelpart2, align 8, !tbaa !76
  %arrayidx.i193 = getelementptr inbounds float*, float** %2, i64 7
  %11 = load float*, float** %arrayidx.i193, align 8, !tbaa !76
  %arrayidx29 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %12 = load float*, float** %arrayidx29, align 8, !tbaa !76
  %arrayidx.i191 = getelementptr inbounds float*, float** %2, i64 5
  %13 = load float*, float** %arrayidx.i191, align 8, !tbaa !76
  %arrayidx36 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %14 = load float*, float** %arrayidx36, align 8, !tbaa !76
  %arrayidx.i189 = getelementptr inbounds float*, float** %2, i64 8
  %15 = load float*, float** %arrayidx.i189, align 8, !tbaa !76
  %arrayidx43 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %16 = load float*, float** %arrayidx43, align 8, !tbaa !76
  %arrayidx.i187 = getelementptr inbounds float*, float** %2, i64 4
  %17 = load float*, float** %arrayidx.i187, align 8, !tbaa !76
  %arrayidx50 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %18 = load float*, float** %arrayidx50, align 8, !tbaa !76
  %arrayidx.i185 = getelementptr inbounds float*, float** %2, i64 9
  %19 = load float*, float** %arrayidx.i185, align 8, !tbaa !76
  %20 = load float*, float** %channelpart3, align 8, !tbaa !76
  %arrayidx.i183 = getelementptr inbounds float*, float** %2, i64 10
  %21 = load float*, float** %arrayidx.i183, align 8, !tbaa !76
  %arrayidx64 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %22 = load float*, float** %arrayidx64, align 8, !tbaa !76
  %arrayidx.i181 = getelementptr inbounds float*, float** %2, i64 11
  %23 = load float*, float** %arrayidx.i181, align 8, !tbaa !76
  %arrayidx71 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %24 = load float*, float** %arrayidx71, align 8, !tbaa !76
  %arrayidx.i179 = getelementptr inbounds float*, float** %2, i64 12
  %25 = load float*, float** %arrayidx.i179, align 8, !tbaa !76
  %arrayidx78 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %26 = load float*, float** %arrayidx78, align 8, !tbaa !76
  %arrayidx.i177 = getelementptr inbounds float*, float** %2, i64 13
  %27 = load float*, float** %arrayidx.i177, align 8, !tbaa !76
  %arrayidx85 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %28 = load float*, float** %arrayidx85, align 8, !tbaa !76
  %arrayidx.i175 = getelementptr inbounds float*, float** %2, i64 14
  %29 = load float*, float** %arrayidx.i175, align 8, !tbaa !76
  %arrayidx92 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %30 = load float*, float** %arrayidx92, align 8, !tbaa !76
  %arrayidx.i173 = getelementptr inbounds float*, float** %2, i64 15
  %31 = load float*, float** %arrayidx.i173, align 8, !tbaa !76
  %arrayidx99 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %32 = load float*, float** %arrayidx99, align 8, !tbaa !76
  %wide.trip.count = zext i32 %nSample to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.end
  %returnStruct = insertvalue %struct.out.psychoFilter_fxp undef, i64 %bytes_rotator, 0
  %returnStruct1 = insertvalue %struct.out.psychoFilter_fxp %returnStruct, i64 %bytes_rotator, 1
  %returnStruct12 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1, i64 %bytes_rotator, 2
  %returnStruct123 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12, i64 %bytes_sumBF, 3
  %returnStruct1234 = insertvalue %struct.out.psychoFilter_fxp %returnStruct123, i64 %bytes_channelpart1, 4
  %returnStruct12345 = insertvalue %struct.out.psychoFilter_fxp %returnStruct1234, i64 %bytes_channelpart2, 5
  %returnStruct123456 = insertvalue %struct.out.psychoFilter_fxp %returnStruct12345, i64 %bytes_channelpart3, 6
  ret %struct.out.psychoFilter_fxp %returnStruct123456

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds float, float* %3, i64 %indvars.iv
  %33 = bitcast float* %arrayidx to i32*
  %34 = load i32, i32* %33, align 4, !tbaa !83
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %35 = bitcast float* %arrayidx3 to i32*
  store i32 %34, i32* %35, align 4, !tbaa !83
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %36 = bitcast float* %arrayidx7 to i32*
  %37 = load i32, i32* %36, align 4, !tbaa !83
  %arrayidx10 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %38 = bitcast float* %arrayidx10 to i32*
  store i32 %37, i32* %38, align 4, !tbaa !83
  %arrayidx14 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %39 = bitcast float* %arrayidx14 to i32*
  %40 = load i32, i32* %39, align 4, !tbaa !83
  %arrayidx17 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %41 = bitcast float* %arrayidx17 to i32*
  store i32 %40, i32* %41, align 4, !tbaa !83
  %arrayidx21 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %42 = bitcast float* %arrayidx21 to i32*
  %43 = load i32, i32* %42, align 4, !tbaa !83
  %arrayidx24 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %44 = bitcast float* %arrayidx24 to i32*
  store i32 %43, i32* %44, align 4, !tbaa !83
  %arrayidx28 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %45 = bitcast float* %arrayidx28 to i32*
  %46 = load i32, i32* %45, align 4, !tbaa !83
  %arrayidx31 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %47 = bitcast float* %arrayidx31 to i32*
  store i32 %46, i32* %47, align 4, !tbaa !83
  %arrayidx35 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %48 = bitcast float* %arrayidx35 to i32*
  %49 = load i32, i32* %48, align 4, !tbaa !83
  %arrayidx38 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %50 = bitcast float* %arrayidx38 to i32*
  store i32 %49, i32* %50, align 4, !tbaa !83
  %arrayidx42 = getelementptr inbounds float, float* %15, i64 %indvars.iv
  %51 = bitcast float* %arrayidx42 to i32*
  %52 = load i32, i32* %51, align 4, !tbaa !83
  %arrayidx45 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %53 = bitcast float* %arrayidx45 to i32*
  store i32 %52, i32* %53, align 4, !tbaa !83
  %arrayidx49 = getelementptr inbounds float, float* %17, i64 %indvars.iv
  %54 = bitcast float* %arrayidx49 to i32*
  %55 = load i32, i32* %54, align 4, !tbaa !83
  %arrayidx52 = getelementptr inbounds float, float* %18, i64 %indvars.iv
  %56 = bitcast float* %arrayidx52 to i32*
  store i32 %55, i32* %56, align 4, !tbaa !83
  %arrayidx56 = getelementptr inbounds float, float* %19, i64 %indvars.iv
  %57 = bitcast float* %arrayidx56 to i32*
  %58 = load i32, i32* %57, align 4, !tbaa !83
  %arrayidx59 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %59 = bitcast float* %arrayidx59 to i32*
  store i32 %58, i32* %59, align 4, !tbaa !83
  %arrayidx63 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  %60 = bitcast float* %arrayidx63 to i32*
  %61 = load i32, i32* %60, align 4, !tbaa !83
  %arrayidx66 = getelementptr inbounds float, float* %22, i64 %indvars.iv
  %62 = bitcast float* %arrayidx66 to i32*
  store i32 %61, i32* %62, align 4, !tbaa !83
  %arrayidx70 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %63 = bitcast float* %arrayidx70 to i32*
  %64 = load i32, i32* %63, align 4, !tbaa !83
  %arrayidx73 = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %65 = bitcast float* %arrayidx73 to i32*
  store i32 %64, i32* %65, align 4, !tbaa !83
  %arrayidx77 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %66 = bitcast float* %arrayidx77 to i32*
  %67 = load i32, i32* %66, align 4, !tbaa !83
  %arrayidx80 = getelementptr inbounds float, float* %26, i64 %indvars.iv
  %68 = bitcast float* %arrayidx80 to i32*
  store i32 %67, i32* %68, align 4, !tbaa !83
  %arrayidx84 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %69 = bitcast float* %arrayidx84 to i32*
  %70 = load i32, i32* %69, align 4, !tbaa !83
  %arrayidx87 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  %71 = bitcast float* %arrayidx87 to i32*
  store i32 %70, i32* %71, align 4, !tbaa !83
  %arrayidx91 = getelementptr inbounds float, float* %29, i64 %indvars.iv
  %72 = bitcast float* %arrayidx91 to i32*
  %73 = load i32, i32* %72, align 4, !tbaa !83
  %arrayidx94 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  %74 = bitcast float* %arrayidx94 to i32*
  store i32 %73, i32* %74, align 4, !tbaa !83
  %arrayidx98 = getelementptr inbounds float, float* %31, i64 %indvars.iv
  %75 = bitcast float* %arrayidx98 to i32*
  %76 = load i32, i32* %75, align 4, !tbaa !83
  %arrayidx101 = getelementptr inbounds float, float* %32, i64 %indvars.iv
  %77 = bitcast float* %arrayidx101 to i32*
  store i32 %76, i32* %77, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %for.cond.cleanup, label %for.body, !prof !316
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperPsychoFilter_fxp @wrapperPsychoFilter_fxp_cloned(%class.CAmbisonicProcessor* in out %rotator, i64 %bytes_rotator, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i32 %nSample, float** out %channelpart1, i64 %bytes_channelpart1, float** out %channelpart2, i64 %bytes_channelpart2, float** out %channelpart3, i64 %bytes_channelpart3) #7 !prof !103 {
entry:
  %psychoFilter_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @psychoFilter_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 4, i32 4, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 5, i32 5, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 6, i32 6, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 7, i32 7, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 8, i32 8, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 9, i32 9, i1 false)
  call void @llvm.hpvm.bind.input(i8* %psychoFilter_fxp_cloned.node, i32 10, i32 10, i1 false)
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 4, i32 4, i1 false)
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 5, i32 5, i1 false)
  call void @llvm.hpvm.bind.output(i8* %psychoFilter_fxp_cloned.node, i32 6, i32 6, i1 false)
  ret %struct.out.wrapperPsychoFilter_fxp undef
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder1_fxp @rotateOrder1_fxp_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1) #7 !prof !230 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !97
  %cmp = icmp ne i32 %1, 0
  %cmp1127 = icmp ne i32 %nSample, 0
  %or.cond = and i1 %cmp, %cmp1127
  br i1 %or.cond, label %for.body.lr.ph, label %if.end, !prof !501

for.body.lr.ph:                                   ; preds = %entry
  %2 = load float*, float** %channelpart1, align 8, !tbaa !76
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx3 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %3 = load float*, float** %arrayidx3, align 8, !tbaa !76
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %arrayidx7 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %4 = load float*, float** %arrayidx7, align 8, !tbaa !76
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %wide.trip.count = zext i32 %nSample to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %5 = load float, float* %arrayidx2, align 4, !tbaa !83
  %6 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %7 = fmul float %5, %6
  %arrayidx5 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  %8 = load float, float* %arrayidx5, align 4, !tbaa !83
  %9 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul6 = fmul float %8, %9
  %add = fsub float %mul6, %7
  %arrayidx9 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %10 = load float, float* %arrayidx9, align 4, !tbaa !83
  %mul14 = fmul float %5, %9
  %mul19 = fmul float %6, %8
  %add20 = fadd float %mul19, %mul14
  store float %add, float* %arrayidx5, align 4, !tbaa !83
  %11 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul24 = fmul float %10, %11
  %12 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul25 = fmul float %add20, %12
  %add26 = fadd float %mul24, %mul25
  store float %add26, float* %arrayidx9, align 4, !tbaa !83
  %13 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul31 = fmul float %add20, %13
  %14 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul33 = fmul float %10, %14
  %add34 = fadd float %mul31, %mul33
  store float %add34, float* %arrayidx2, align 4, !tbaa !83
  %15 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %16 = fmul float %add34, %15
  %17 = load float, float* %arrayidx5, align 4, !tbaa !83
  %18 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul46 = fmul float %17, %18
  %add47 = fsub float %mul46, %16
  %19 = bitcast float* %arrayidx9 to i32*
  %20 = load i32, i32* %19, align 4, !tbaa !83
  %mul55 = fmul float %add34, %18
  %mul60 = fmul float %15, %17
  %add61 = fadd float %mul60, %mul55
  store float %add61, float* %arrayidx2, align 4, !tbaa !83
  store float %add47, float* %arrayidx5, align 4, !tbaa !83
  store i32 %20, i32* %19, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %if.end, label %for.body, !prof !316

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder1_fxp undef, i64 %bytes_channelpart1, 0
  ret %struct.out.rotateOrder1_fxp %returnStruct
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperRotateOrder1_fxp @wrapperRotateOrder1_fxp_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart1, i64 %bytes_channelpart1) #7 !prof !103 {
entry:
  %rotateOrder1_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder1_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder1_fxp_cloned.node, i32 4, i32 4, i1 false)
  call void @llvm.hpvm.bind.output(i8* %rotateOrder1_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperRotateOrder1_fxp undef
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder2_fxp @rotateOrder2_fxp_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart2, i64 %bytes_channelpart2) #7 !prof !230 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !97
  %cmp = icmp ugt i32 %1, 1
  %cmp1297 = icmp ne i32 %nSample, 0
  %or.cond = and i1 %cmp, %cmp1297
  br i1 %or.cond, label %for.body.lr.ph, label %if.end, !prof !501

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds float*, float** %channelpart2, i64 3
  %2 = load float*, float** %arrayidx, align 8, !tbaa !76
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %arrayidx3 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %3 = load float*, float** %arrayidx3, align 8, !tbaa !76
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %arrayidx7 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %4 = load float*, float** %arrayidx7, align 8, !tbaa !76
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx12 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %5 = load float*, float** %arrayidx12, align 8, !tbaa !76
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %6 = load float*, float** %channelpart2, align 8, !tbaa !76
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %wide.trip.count = zext i32 %nSample to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %7 = load float, float* %arrayidx2, align 4, !tbaa !83
  %8 = load float, float* %m_fSin2Alpha, align 4, !tbaa !241
  %9 = fmul float %7, %8
  %arrayidx5 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  %10 = load float, float* %arrayidx5, align 4, !tbaa !83
  %11 = load float, float* %m_fCos2Alpha, align 8, !tbaa !240
  %mul6 = fmul float %10, %11
  %add = fsub float %mul6, %9
  %arrayidx9 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %12 = load float, float* %arrayidx9, align 4, !tbaa !83
  %13 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %14 = fmul float %12, %13
  %arrayidx14 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %15 = load float, float* %arrayidx14, align 4, !tbaa !83
  %16 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul15 = fmul float %15, %16
  %add16 = fsub float %mul15, %14
  %arrayidx19 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %17 = load float, float* %arrayidx19, align 4, !tbaa !83
  %mul24 = fmul float %12, %16
  %mul29 = fmul float %13, %15
  %add30 = fadd float %mul29, %mul24
  %mul35 = fmul float %7, %11
  %mul40 = fmul float %8, %10
  %add41 = fadd float %mul40, %mul35
  %18 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %19 = fmul float %add16, %18
  %20 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul44 = fmul float %add, %20
  %add45 = fsub float %mul44, %19
  store float %add45, float* %arrayidx5, align 4, !tbaa !83
  %21 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %22 = fmul float %add16, %21
  %23 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul53 = fmul float %add, %23
  %add54 = fsub float %mul53, %22
  store float %add54, float* %arrayidx14, align 4, !tbaa !83
  %24 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul58 = fmul float %24, 7.500000e-01
  %add59 = fadd float %mul58, 2.500000e-01
  %mul60 = fmul float %17, %add59
  %conv61 = fpext float %mul60 to double
  %25 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %conv65 = fpext float %25 to double
  %square = fmul double %conv65, %conv65
  %mul67 = fmul double %square, 0x3FEBB67AE0000000
  %conv68 = fpext float %add41 to double
  %mul69 = fmul double %mul67, %conv68
  %add70 = fadd double %mul69, %conv61
  %mul72 = fmul float %25, 0x3FFBB67AE0000000
  %26 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul74 = fmul float %mul72, %26
  %mul75 = fmul float %add30, %mul74
  %conv76 = fpext float %mul75 to double
  %add77 = fadd double %add70, %conv76
  %conv78 = fptrunc double %add77 to float
  store float %conv78, float* %arrayidx19, align 4, !tbaa !83
  %27 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul83 = fmul float %add30, %27
  %28 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul85 = fmul float %28, 0x3FFBB67AE0000000
  %29 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul87 = fmul float %mul85, %29
  %mul88 = fmul float %17, %mul87
  %sub89 = fsub float %mul83, %mul88
  %mul92 = fmul float %28, %29
  %mul93 = fmul float %add41, %mul92
  %add94 = fadd float %mul93, %sub89
  store float %add94, float* %arrayidx9, align 4, !tbaa !83
  %30 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul99 = fmul float %30, 2.500000e-01
  %add100 = fadd float %mul99, 7.500000e-01
  %mul101 = fmul float %add41, %add100
  %31 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %32 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul104 = fmul float %31, %32
  %mul105 = fmul float %add30, %mul104
  %sub106 = fsub float %mul101, %mul105
  %conv107 = fpext float %sub106 to double
  %conv111 = fpext float %32 to double
  %square296 = fmul double %conv111, %conv111
  %mul113 = fmul double %square296, 0x3FEBB67AE0000000
  %conv114 = fpext float %17 to double
  %mul115 = fmul double %mul113, %conv114
  %add116 = fadd double %mul115, %conv107
  %conv117 = fptrunc double %add116 to float
  store float %conv117, float* %arrayidx2, align 4, !tbaa !83
  %33 = load float, float* %m_fSin2Gamma, align 4, !tbaa !245
  %34 = fmul float %33, %conv117
  %35 = load float, float* %arrayidx5, align 4, !tbaa !83
  %36 = load float, float* %m_fCos2Gamma, align 8, !tbaa !244
  %mul129 = fmul float %35, %36
  %add130 = fsub float %mul129, %34
  %37 = load float, float* %arrayidx9, align 4, !tbaa !83
  %38 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %39 = fmul float %37, %38
  %40 = load float, float* %arrayidx14, align 4, !tbaa !83
  %41 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul139 = fmul float %40, %41
  %add140 = fsub float %mul139, %39
  %mul148 = fmul float %37, %41
  %mul153 = fmul float %38, %40
  %add154 = fadd float %mul153, %mul148
  %mul159 = fmul float %36, %conv117
  %mul164 = fmul float %33, %35
  %add165 = fadd float %mul164, %mul159
  store float %add154, float* %arrayidx9, align 4, !tbaa !83
  store float %add140, float* %arrayidx14, align 4, !tbaa !83
  store float %add165, float* %arrayidx2, align 4, !tbaa !83
  store float %add130, float* %arrayidx5, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %if.end, label %for.body, !prof !316

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder2_fxp undef, i64 %bytes_channelpart2, 0
  ret %struct.out.rotateOrder2_fxp %returnStruct
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperRotateOrder2_fxp @wrapperRotateOrder2_fxp_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart2, i64 %bytes_channelpart2) #7 !prof !103 {
entry:
  %rotateOrder2_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder2_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder2_fxp_cloned.node, i32 4, i32 4, i1 false)
  call void @llvm.hpvm.bind.output(i8* %rotateOrder2_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperRotateOrder2_fxp undef
}

; Function Attrs: nounwind uwtable
define %struct.out.rotateOrder3_fxp @rotateOrder3_fxp_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart3, i64 %bytes_channelpart3) #7 !prof !230 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 0, i32 1
  %1 = load i32, i32* %0, align 8, !tbaa !97
  %cmp = icmp ugt i32 %1, 2
  %cmp5584 = icmp ne i32 %nSample, 0
  %or.cond = and i1 %cmp, %cmp5584
  br i1 %or.cond, label %for.body.lr.ph, label %if.end, !prof !501

for.body.lr.ph:                                   ; preds = %entry
  %arrayidx = getelementptr inbounds float*, float** %channelpart3, i64 6
  %m_fSin3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 28
  %m_fCos3Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 27
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %m_fSin2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 22
  %arrayidx16 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %m_fCos2Alpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 21
  %arrayidx21 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %m_fSinAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 16
  %arrayidx26 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %m_fCosAlpha = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 15
  %arrayidx31 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %m_fCos2Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 23
  %m_fCosBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 17
  %m_fSinBeta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 18
  %m_fSin3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 30
  %m_fCos3Beta = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 29
  %m_fSin3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 32
  %m_fCos3Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 31
  %m_fSin2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 26
  %m_fCos2Gamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 25
  %m_fSinGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 20
  %m_fCosGamma = getelementptr inbounds %class.CAmbisonicProcessor, %class.CAmbisonicProcessor* %rotator, i64 0, i32 19
  %wide.trip.count = zext i32 %nSample to i64
  %.pre = load float*, float** %arrayidx, align 8, !tbaa !76
  %.pre586 = load float*, float** %channelpart3, align 8, !tbaa !76
  %.pre587 = load float*, float** %arrayidx11, align 8, !tbaa !76
  %.pre588 = load float*, float** %arrayidx16, align 8, !tbaa !76
  %.pre589 = load float*, float** %arrayidx21, align 8, !tbaa !76
  %.pre590 = load float*, float** %arrayidx26, align 8, !tbaa !76
  %.pre591 = load float*, float** %arrayidx31, align 8, !tbaa !76
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %2 = phi float* [ %.pre591, %for.body.lr.ph ], [ %76, %for.body ]
  %3 = phi float* [ %.pre590, %for.body.lr.ph ], [ %73, %for.body ]
  %4 = phi float* [ %.pre589, %for.body.lr.ph ], [ %69, %for.body ]
  %5 = phi float* [ %.pre588, %for.body.lr.ph ], [ %66, %for.body ]
  %6 = phi float* [ %.pre587, %for.body.lr.ph ], [ %62, %for.body ]
  %7 = phi float* [ %.pre586, %for.body.lr.ph ], [ %59, %for.body ]
  %8 = phi float* [ %.pre, %for.body.lr.ph ], [ %56, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %9 = load float, float* %arrayidx6, align 4, !tbaa !83
  %10 = load float, float* %m_fSin3Alpha, align 4, !tbaa !247
  %11 = fmul float %9, %10
  %arrayidx9 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %12 = load float, float* %arrayidx9, align 4, !tbaa !83
  %13 = load float, float* %m_fCos3Alpha, align 8, !tbaa !246
  %mul10 = fmul float %12, %13
  %add = fsub float %mul10, %11
  %arrayidx13 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %14 = load float, float* %arrayidx13, align 4, !tbaa !83
  %15 = load float, float* %m_fSin2Alpha, align 4, !tbaa !241
  %16 = fmul float %14, %15
  %arrayidx18 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %17 = load float, float* %arrayidx18, align 4, !tbaa !83
  %18 = load float, float* %m_fCos2Alpha, align 8, !tbaa !240
  %mul19 = fmul float %17, %18
  %add20 = fsub float %mul19, %16
  %arrayidx23 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %19 = load float, float* %arrayidx23, align 4, !tbaa !83
  %20 = load float, float* %m_fSinAlpha, align 4, !tbaa !233
  %21 = fmul float %19, %20
  %arrayidx28 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  %22 = load float, float* %arrayidx28, align 4, !tbaa !83
  %23 = load float, float* %m_fCosAlpha, align 8, !tbaa !232
  %mul29 = fmul float %22, %23
  %add30 = fsub float %mul29, %21
  %arrayidx33 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %24 = load float, float* %arrayidx33, align 4, !tbaa !83
  %mul38 = fmul float %19, %23
  %mul43 = fmul float %20, %22
  %add44 = fadd float %mul43, %mul38
  %mul49 = fmul float %14, %18
  %mul54 = fmul float %15, %17
  %add55 = fadd float %mul54, %mul49
  %mul60 = fmul float %9, %13
  %mul65 = fmul float %10, %12
  %add66 = fadd float %mul65, %mul60
  %mul67 = fmul float %add, 1.250000e-01
  %25 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul68 = fmul float %25, 3.000000e+00
  %add69 = fadd float %mul68, 5.000000e+00
  %mul70 = fmul float %mul67, %add69
  %mul71 = fmul float %add20, 0x3FF3988E20000000
  %26 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul72 = fmul float %mul71, %26
  %27 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul73 = fmul float %mul72, %27
  %sub74 = fsub float %mul70, %mul73
  %conv75 = fpext float %sub74 to double
  %mul77 = fmul float %add30, 0x3FEEFBDEC0000000
  %conv78 = fpext float %mul77 to double
  %conv80 = fpext float %27 to double
  %square = fmul double %conv80, %conv80
  %mul82 = fmul double %square, %conv78
  %add83 = fadd double %mul82, %conv75
  %conv84 = fptrunc double %add83 to float
  store float %conv84, float* %arrayidx9, align 4, !tbaa !83
  %28 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul89 = fmul float %add20, %28
  %mul90 = fmul float %add30, 0x3FF94C5840000000
  %29 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul92 = fmul float %mul90, %29
  %30 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul94 = fmul float %mul92, %30
  %sub95 = fsub float %mul89, %mul94
  %mul96 = fmul float %add, 0x3FF3988E20000000
  %mul98 = fmul float %mul96, %29
  %mul100 = fmul float %mul98, %30
  %add101 = fadd float %mul100, %sub95
  store float %add101, float* %arrayidx18, align 4, !tbaa !83
  %mul105 = fmul float %add30, 1.250000e-01
  %31 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul107 = fmul float %31, 5.000000e+00
  %add108 = fadd float %mul107, 3.000000e+00
  %mul109 = fmul float %mul105, %add108
  %mul110 = fmul float %add20, 0x3FF94C5840000000
  %32 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul112 = fmul float %mul110, %32
  %33 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul114 = fmul float %mul112, %33
  %sub115 = fsub float %mul109, %mul114
  %conv116 = fpext float %sub115 to double
  %mul118 = fmul float %add, 0x3FEEFBDEC0000000
  %conv119 = fpext float %mul118 to double
  %conv121 = fpext float %33 to double
  %square579 = fmul double %conv121, %conv121
  %mul123 = fmul double %square579, %conv119
  %add124 = fadd double %mul123, %conv116
  %conv125 = fptrunc double %add124 to float
  store float %conv125, float* %arrayidx28, align 4, !tbaa !83
  store float %conv125, float* %arrayidx9, align 4, !tbaa !83
  %mul132 = fmul float %24, 2.500000e-01
  %34 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul134 = fmul float %mul132, %34
  %35 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul136 = fmul float %35, 1.500000e+01
  %add137 = fadd float %mul136, -1.000000e+00
  %mul138 = fmul float %mul134, %add137
  %conv139 = fpext float %mul138 to double
  %mul141 = fmul float %add55, 0x3FFEFBDEC0000000
  %mul143 = fmul float %mul141, %34
  %conv144 = fpext float %mul143 to double
  %36 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %conv146 = fpext float %36 to double
  %square580 = fmul double %conv146, %conv146
  %mul148 = fmul double %square580, %conv144
  %add149 = fadd double %mul148, %conv139
  %mul151 = fmul float %add66, 0x3FE94C5840000000
  %conv152 = fpext float %mul151 to double
  %call155 = tail call double @pow(double %conv146, double 3.000000e+00) #24
  %mul156 = fmul double %call155, %conv152
  %add157 = fadd double %mul156, %add149
  %mul159 = fmul float %add44, 0x3FC3988E20000000
  %37 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %38 = load float, float* %m_fSin3Beta, align 4, !tbaa !249
  %mul161 = fmul float %38, 5.000000e+00
  %add162 = fadd float %37, %mul161
  %mul163 = fmul float %mul159, %add162
  %conv164 = fpext float %mul163 to double
  %add165 = fadd double %add157, %conv164
  %conv166 = fptrunc double %add165 to float
  %39 = load float*, float** %arrayidx31, align 8, !tbaa !76
  %arrayidx169 = getelementptr inbounds float, float* %39, i64 %indvars.iv
  store float %conv166, float* %arrayidx169, align 4, !tbaa !83
  %mul170 = fmul float %add44, 6.250000e-02
  %40 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %41 = load float, float* %m_fCos3Beta, align 8, !tbaa !248
  %mul172 = fmul float %41, 1.500000e+01
  %add173 = fadd float %40, %mul172
  %mul174 = fmul float %mul170, %add173
  %mul176 = fmul float %add55, 0x3FD94C5840000000
  %42 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %mul178 = fmul float %42, 3.000000e+00
  %add179 = fadd float %mul178, 1.000000e+00
  %mul180 = fmul float %mul176, %add179
  %43 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul182 = fmul float %43, %mul180
  %add183 = fadd float %mul174, %mul182
  %conv184 = fpext float %add183 to double
  %mul186 = fmul float %add66, 0x3FEEFBDEC0000000
  %mul188 = fmul float %mul186, %40
  %conv189 = fpext float %mul188 to double
  %conv191 = fpext float %43 to double
  %square581 = fmul double %conv191, %conv191
  %mul193 = fmul double %square581, %conv189
  %add194 = fadd double %mul193, %conv184
  %conv197 = fpext float %24 to double
  %mul198 = fmul double %conv197, 0x3FC3988E20000000
  %44 = load float, float* %m_fSin3Beta, align 4, !tbaa !249
  %mul201 = fmul float %44, 5.000000e+00
  %add202 = fadd float %43, %mul201
  %conv203 = fpext float %add202 to double
  %mul204 = fmul double %mul198, %conv203
  %sub205 = fsub double %add194, %mul204
  %conv206 = fptrunc double %sub205 to float
  %45 = load float*, float** %arrayidx21, align 8, !tbaa !76
  %arrayidx209 = getelementptr inbounds float, float* %45, i64 %indvars.iv
  store float %conv206, float* %arrayidx209, align 4, !tbaa !83
  %mul210 = fmul float %add55, 1.250000e-01
  %46 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul212 = fmul float %46, 5.000000e+00
  %47 = load float, float* %m_fCos3Beta, align 8, !tbaa !248
  %mul214 = fmul float %47, 3.000000e+00
  %add215 = fadd float %mul212, %mul214
  %mul216 = fmul float %mul210, %add215
  %mul218 = fmul float %add66, 0x3FD3988E20000000
  %48 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %add220 = fadd float %48, 3.000000e+00
  %mul221 = fmul float %mul218, %add220
  %49 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul223 = fmul float %49, %mul221
  %add224 = fadd float %mul216, %mul223
  %conv225 = fpext float %add224 to double
  %mul227 = fmul float %24, 0x3FFEFBDEC0000000
  %mul229 = fmul float %mul227, %46
  %conv230 = fpext float %mul229 to double
  %conv232 = fpext float %49 to double
  %square582 = fmul double %conv232, %conv232
  %mul234 = fmul double %square582, %conv230
  %add235 = fadd double %mul234, %conv225
  %conv238 = fpext float %add44 to double
  %mul239 = fmul double %conv238, 0x3FC94C5840000000
  %50 = load float, float* %m_fSin3Beta, align 4, !tbaa !249
  %mul242 = fmul float %50, 3.000000e+00
  %sub243 = fsub float %49, %mul242
  %conv244 = fpext float %sub243 to double
  %mul245 = fmul double %mul239, %conv244
  %add246 = fadd double %add235, %mul245
  %conv247 = fptrunc double %add246 to float
  %51 = load float*, float** %arrayidx11, align 8, !tbaa !76
  %arrayidx250 = getelementptr inbounds float, float* %51, i64 %indvars.iv
  store float %conv247, float* %arrayidx250, align 4, !tbaa !83
  %mul251 = fmul float %add66, 6.250000e-02
  %52 = load float, float* %m_fCosBeta, align 8, !tbaa !235
  %mul253 = fmul float %52, 1.500000e+01
  %53 = load float, float* %m_fCos3Beta, align 8, !tbaa !248
  %add255 = fadd float %mul253, %53
  %mul256 = fmul float %mul251, %add255
  %mul258 = fmul float %add55, 0x3FD3988E20000000
  %54 = load float, float* %m_fCos2Beta, align 8, !tbaa !242
  %add260 = fadd float %54, 3.000000e+00
  %mul261 = fmul float %mul258, %add260
  %55 = load float, float* %m_fSinBeta, align 4, !tbaa !236
  %mul263 = fmul float %55, %mul261
  %sub264 = fsub float %mul256, %mul263
  %conv265 = fpext float %sub264 to double
  %mul267 = fmul float %add44, 0x3FEEFBDEC0000000
  %mul269 = fmul float %mul267, %52
  %conv270 = fpext float %mul269 to double
  %conv272 = fpext float %55 to double
  %square583 = fmul double %conv272, %conv272
  %mul274 = fmul double %square583, %conv270
  %add275 = fadd double %mul274, %conv265
  %mul279 = fmul double %conv197, 0x3FE94C5840000000
  %call282 = tail call double @pow(double %conv272, double 3.000000e+00) #24
  %mul283 = fmul double %mul279, %call282
  %sub284 = fsub double %add275, %mul283
  %conv285 = fptrunc double %sub284 to float
  %56 = load float*, float** %arrayidx, align 8, !tbaa !76
  %arrayidx288 = getelementptr inbounds float, float* %56, i64 %indvars.iv
  store float %conv285, float* %arrayidx288, align 4, !tbaa !83
  %57 = load float, float* %m_fSin3Gamma, align 4, !tbaa !251
  %58 = fmul float %57, %conv285
  %59 = load float*, float** %channelpart3, align 8, !tbaa !76
  %arrayidx296 = getelementptr inbounds float, float* %59, i64 %indvars.iv
  %60 = load float, float* %arrayidx296, align 4, !tbaa !83
  %61 = load float, float* %m_fCos3Gamma, align 8, !tbaa !250
  %mul297 = fmul float %60, %61
  %add298 = fsub float %mul297, %58
  %62 = load float*, float** %arrayidx11, align 8, !tbaa !76
  %arrayidx301 = getelementptr inbounds float, float* %62, i64 %indvars.iv
  %63 = load float, float* %arrayidx301, align 4, !tbaa !83
  %64 = load float, float* %m_fSin2Gamma, align 4, !tbaa !245
  %65 = fmul float %63, %64
  %66 = load float*, float** %arrayidx16, align 8, !tbaa !76
  %arrayidx306 = getelementptr inbounds float, float* %66, i64 %indvars.iv
  %67 = load float, float* %arrayidx306, align 4, !tbaa !83
  %68 = load float, float* %m_fCos2Gamma, align 8, !tbaa !244
  %mul307 = fmul float %67, %68
  %add308 = fsub float %mul307, %65
  %69 = load float*, float** %arrayidx21, align 8, !tbaa !76
  %arrayidx311 = getelementptr inbounds float, float* %69, i64 %indvars.iv
  %70 = load float, float* %arrayidx311, align 4, !tbaa !83
  %71 = load float, float* %m_fSinGamma, align 4, !tbaa !239
  %72 = fmul float %70, %71
  %73 = load float*, float** %arrayidx26, align 8, !tbaa !76
  %arrayidx316 = getelementptr inbounds float, float* %73, i64 %indvars.iv
  %74 = load float, float* %arrayidx316, align 4, !tbaa !83
  %75 = load float, float* %m_fCosGamma, align 8, !tbaa !238
  %mul317 = fmul float %74, %75
  %add318 = fsub float %mul317, %72
  %76 = load float*, float** %arrayidx31, align 8, !tbaa !76
  %arrayidx321 = getelementptr inbounds float, float* %76, i64 %indvars.iv
  %77 = bitcast float* %arrayidx321 to i32*
  %78 = load i32, i32* %77, align 4, !tbaa !83
  %mul326 = fmul float %70, %75
  %mul331 = fmul float %71, %74
  %add332 = fadd float %mul331, %mul326
  %mul337 = fmul float %63, %68
  %mul342 = fmul float %64, %67
  %add343 = fadd float %mul342, %mul337
  %mul348 = fmul float %61, %conv285
  %mul353 = fmul float %57, %60
  %add354 = fadd float %mul353, %mul348
  store float %add298, float* %arrayidx296, align 4, !tbaa !83
  store float %add308, float* %arrayidx306, align 4, !tbaa !83
  store float %add318, float* %arrayidx316, align 4, !tbaa !83
  store i32 %78, i32* %77, align 4, !tbaa !83
  store float %add332, float* %arrayidx311, align 4, !tbaa !83
  store float %add343, float* %arrayidx301, align 4, !tbaa !83
  store float %add354, float* %arrayidx288, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond, label %if.end, label %for.body, !prof !316

if.end:                                           ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.rotateOrder3_fxp undef, i64 %bytes_channelpart3, 0
  ret %struct.out.rotateOrder3_fxp %returnStruct
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperRotateOrder3_fxp @wrapperRotateOrder3_fxp_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, i32 %nSample, float** in out %channelpart3, i64 %bytes_channelpart3) #7 !prof !103 {
entry:
  %rotateOrder3_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder3_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %rotateOrder3_fxp_cloned.node, i32 4, i32 4, i1 false)
  call void @llvm.hpvm.bind.output(i8* %rotateOrder3_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperRotateOrder3_fxp undef
}

; Function Attrs: uwtable
define %struct.out.zoomSet_fxp @zoomSet_fxp_cloned(%class.CAmbisonicZoomer* in out %zoomer, i64 %bytes_zoomer) #3 !prof !230 {
entry:
  %fZoom.addr.i = alloca float, align 4
  %ref.tmp.i = alloca float, align 4
  %0 = load i32, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !72
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @_ZZ11zoomSet_fxpE5frame, align 4, !tbaa !72
  %div = sdiv i32 %inc, 100
  %conv = sitofp i32 %div to float
  %call = tail call float @sinf(float %conv) #24
  %fZoom.addr.i.0..sroa_cast = bitcast float* %fZoom.addr.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  store float %call, float* %fZoom.addr.i, align 4, !tbaa !83
  %ref.tmp.i.0.ref.tmp.0..sroa_cast = bitcast float* %ref.tmp.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  store float 0x3FEFAE1480000000, float* %ref.tmp.i, align 4, !tbaa !83
  %cmp.i.i = fcmp ogt float %call, 0x3FEFAE1480000000
  %__b.__a.i.i = select i1 %cmp.i.i, float* %ref.tmp.i, float* %fZoom.addr.i, !prof !185
  %1 = bitcast float* %__b.__a.i.i to i32*
  %2 = load i32, i32* %1, align 4, !tbaa !83
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %3 = bitcast float* %m_fZoom.i to i32*
  store i32 %2, i32* %3, align 8, !tbaa !314
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %ref.tmp.i.0.ref.tmp.0..sroa_cast)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %fZoom.addr.i.0..sroa_cast)
  %4 = bitcast %class.CAmbisonicZoomer* %zoomer to void (%class.CAmbisonicZoomer*)***
  %vtable = load void (%class.CAmbisonicZoomer*)**, void (%class.CAmbisonicZoomer*)*** %4, align 8, !tbaa !68
  %vfn = getelementptr inbounds void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vtable, i64 4
  %5 = load void (%class.CAmbisonicZoomer*)*, void (%class.CAmbisonicZoomer*)** %vfn, align 8
  tail call void %5(%class.CAmbisonicZoomer* %zoomer)
  %returnStruct = insertvalue %struct.out.zoomSet_fxp undef, i64 %bytes_zoomer, 0
  ret %struct.out.zoomSet_fxp %returnStruct
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperZoomSet_fxp @wrapperZoomSet_fxp_cloned(%class.CAmbisonicZoomer* in out %zoomer, i64 %bytes_zoomer) #7 !prof !103 {
entry:
  %zoomSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)* @zoomSet_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %zoomSet_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomSet_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.output(i8* %zoomSet_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperZoomSet_fxp undef
}

; Function Attrs: nounwind uwtable
define %struct.out.zoomProcess_fxp @zoomProcess_fxp_cloned(%class.CAmbisonicZoomer* in %zoomer, i64 %bytes_zoomer, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i32 %nSample, float** in %channelpart1, i64 %bytes_channelpart1, float** in %channelpart2, i64 %bytes_channelpart2, float** in %channelpart3, i64 %bytes_channelpart3) #7 !prof !230 {
entry:
  %cmp198 = icmp eq i32 %nSample, 0
  br i1 %cmp198, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.body.lr.ph, !prof !316

for.body.lr.ph:                                   ; preds = %entry
  %0 = load float*, float** %channelpart1, align 8, !tbaa !76
  %_M_head_impl.i.i.i.i.i.i195 = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %1 = load float**, float*** %_M_head_impl.i.i.i.i.i.i195, align 8, !tbaa !76
  %arrayidx.i196 = getelementptr inbounds float*, float** %1, i64 3
  %2 = load float*, float** %arrayidx.i196, align 8, !tbaa !76
  %arrayidx4 = getelementptr inbounds float*, float** %channelpart1, i64 1
  %3 = load float*, float** %arrayidx4, align 8, !tbaa !76
  %arrayidx.i194 = getelementptr inbounds float*, float** %1, i64 1
  %4 = load float*, float** %arrayidx.i194, align 8, !tbaa !76
  %arrayidx11 = getelementptr inbounds float*, float** %channelpart1, i64 2
  %5 = load float*, float** %arrayidx11, align 8, !tbaa !76
  %arrayidx.i192 = getelementptr inbounds float*, float** %1, i64 2
  %6 = load float*, float** %arrayidx.i192, align 8, !tbaa !76
  %7 = load float*, float** %channelpart2, align 8, !tbaa !76
  %arrayidx.i190 = getelementptr inbounds float*, float** %1, i64 6
  %8 = load float*, float** %arrayidx.i190, align 8, !tbaa !76
  %arrayidx25 = getelementptr inbounds float*, float** %channelpart2, i64 1
  %9 = load float*, float** %arrayidx25, align 8, !tbaa !76
  %arrayidx.i188 = getelementptr inbounds float*, float** %1, i64 7
  %10 = load float*, float** %arrayidx.i188, align 8, !tbaa !76
  %arrayidx32 = getelementptr inbounds float*, float** %channelpart2, i64 2
  %11 = load float*, float** %arrayidx32, align 8, !tbaa !76
  %arrayidx.i186 = getelementptr inbounds float*, float** %1, i64 5
  %12 = load float*, float** %arrayidx.i186, align 8, !tbaa !76
  %arrayidx39 = getelementptr inbounds float*, float** %channelpart2, i64 3
  %13 = load float*, float** %arrayidx39, align 8, !tbaa !76
  %arrayidx.i184 = getelementptr inbounds float*, float** %1, i64 8
  %14 = load float*, float** %arrayidx.i184, align 8, !tbaa !76
  %arrayidx46 = getelementptr inbounds float*, float** %channelpart2, i64 4
  %15 = load float*, float** %arrayidx46, align 8, !tbaa !76
  %arrayidx.i182 = getelementptr inbounds float*, float** %1, i64 4
  %16 = load float*, float** %arrayidx.i182, align 8, !tbaa !76
  %17 = load float*, float** %channelpart3, align 8, !tbaa !76
  %arrayidx.i180 = getelementptr inbounds float*, float** %1, i64 9
  %18 = load float*, float** %arrayidx.i180, align 8, !tbaa !76
  %arrayidx60 = getelementptr inbounds float*, float** %channelpart3, i64 1
  %19 = load float*, float** %arrayidx60, align 8, !tbaa !76
  %arrayidx.i178 = getelementptr inbounds float*, float** %1, i64 10
  %20 = load float*, float** %arrayidx.i178, align 8, !tbaa !76
  %arrayidx67 = getelementptr inbounds float*, float** %channelpart3, i64 2
  %21 = load float*, float** %arrayidx67, align 8, !tbaa !76
  %arrayidx.i176 = getelementptr inbounds float*, float** %1, i64 11
  %22 = load float*, float** %arrayidx.i176, align 8, !tbaa !76
  %arrayidx74 = getelementptr inbounds float*, float** %channelpart3, i64 3
  %23 = load float*, float** %arrayidx74, align 8, !tbaa !76
  %arrayidx.i174 = getelementptr inbounds float*, float** %1, i64 12
  %24 = load float*, float** %arrayidx.i174, align 8, !tbaa !76
  %arrayidx81 = getelementptr inbounds float*, float** %channelpart3, i64 4
  %25 = load float*, float** %arrayidx81, align 8, !tbaa !76
  %arrayidx.i172 = getelementptr inbounds float*, float** %1, i64 13
  %26 = load float*, float** %arrayidx.i172, align 8, !tbaa !76
  %arrayidx88 = getelementptr inbounds float*, float** %channelpart3, i64 5
  %27 = load float*, float** %arrayidx88, align 8, !tbaa !76
  %arrayidx.i170 = getelementptr inbounds float*, float** %1, i64 14
  %28 = load float*, float** %arrayidx.i170, align 8, !tbaa !76
  %arrayidx95 = getelementptr inbounds float*, float** %channelpart3, i64 6
  %29 = load float*, float** %arrayidx95, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %1, i64 15
  %30 = load float*, float** %arrayidx.i, align 8, !tbaa !76
  %wide.trip.count = zext i32 %nSample to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  br i1 %cmp198, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.lr.ph.i, !prof !74

for.cond2.preheader.lr.ph.i:                      ; preds = %for.cond.cleanup
  %31 = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 0, i32 4
  %32 = load i32, i32* %31, align 8, !tbaa !101
  %cmp397.i = icmp eq i32 %32, 0
  %m_fZoomRed.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 6
  %m_fZoomBlend.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 8
  %m_fZoom.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 5
  %m_AmbFrontMic.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 7
  br i1 %cmp397.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.preheader.i, !prof !317

for.cond2.preheader.us.preheader.i:               ; preds = %for.cond2.preheader.lr.ph.i
  %_M_head_impl.i.i.i.i.i.i93.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i95.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_head_impl.i.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicZoomer, %class.CAmbisonicZoomer* %zoomer, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %wide.trip.count112.i = zext i32 %nSample to i64
  %.pre.i = load float*, float** %_M_head_impl.i.i.i.i.i.i.i, align 8, !tbaa !76
  %.pre122.i = load float**, float*** %_M_head_impl.i.i.i.i.i.i95.i, align 8, !tbaa !76
  %33 = zext i32 %32 to i64
  %34 = load float*, float** %_M_head_impl.i.i.i.i.i.i93.i, align 8, !tbaa !76
  %35 = add nsw i64 %33, -1
  %xtraiter = and i64 %33, 3
  %36 = icmp ult i64 %35, 3
  %unroll_iter = sub nsw i64 %33, %xtraiter
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.i

for.cond2.preheader.us.i:                         ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.us.preheader.i
  %indvars.iv110.i = phi i64 [ 0, %for.cond2.preheader.us.preheader.i ], [ %indvars.iv.next111.i, %for.cond.cleanup12.us.i ]
  br i1 %36, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i

for.cond.cleanup12.us.i:                          ; preds = %for.inc52.us.i
  %indvars.iv.next111.i = add nuw nsw i64 %indvars.iv110.i, 1
  %exitcond113.i = icmp eq i64 %indvars.iv.next111.i, %wide.trip.count112.i
  br i1 %exitcond113.i, label %_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit, label %for.cond2.preheader.us.i, !prof !316

for.body13.us.i:                                  ; preds = %for.body13.us.i.preheader, %for.inc52.us.i
  %indvars.iv108.i = phi i64 [ %indvars.iv.next109.i, %for.inc52.us.i ], [ 0, %for.body13.us.i.preheader ]
  %arrayidx.i94.us.i = getelementptr inbounds float, float* %34, i64 %indvars.iv108.i
  %37 = load float, float* %arrayidx.i94.us.i, align 4, !tbaa !83
  %38 = tail call float @llvm.fabs.f32(float %37) #24
  %conv17.us.i = fpext float %38 to double
  %cmp18.us.i = fcmp ogt double %conv17.us.i, 0x3EB0C6F7A0B5ED8D
  br i1 %cmp18.us.i, label %if.then.us.i, label %if.else.us.i, !prof !318

if.else.us.i:                                     ; preds = %for.body13.us.i
  %arrayidx.i86.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %39 = load float*, float** %arrayidx.i86.us.i, align 8, !tbaa !76
  %arrayidx45.us.i = getelementptr inbounds float, float* %39, i64 %indvars.iv110.i
  %40 = load float, float* %arrayidx45.us.i, align 4, !tbaa !83
  %41 = load float, float* %m_fZoomRed.i, align 4, !tbaa !296
  %mul46.us.i = fmul float %40, %41
  store float %mul46.us.i, float* %arrayidx45.us.i, align 4, !tbaa !83
  br label %for.inc52.us.i

if.then.us.i:                                     ; preds = %for.body13.us.i
  %42 = load float, float* %m_fZoomBlend.i, align 4, !tbaa !315
  %arrayidx.i92.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv108.i
  %43 = load float*, float** %arrayidx.i92.us.i, align 8, !tbaa !76
  %arrayidx23.us.i = getelementptr inbounds float, float* %43, i64 %indvars.iv110.i
  %44 = load float, float* %arrayidx23.us.i, align 4, !tbaa !83
  %mul24.us.i = fmul float %42, %44
  %45 = load float, float* %m_fZoom.i, align 8, !tbaa !314
  %mul28.us.i = fmul float %37, %45
  %mul29.us.i = fmul float %add.us.i.lcssa, %mul28.us.i
  %add30.us.i = fadd float %mul24.us.i, %mul29.us.i
  %46 = tail call float @llvm.fabs.f32(float %45) #24
  %47 = load float, float* %m_AmbFrontMic.i, align 8, !tbaa !312
  %mul34.us.i = fmul float %46, %47
  %add35.us.i = fadd float %42, %mul34.us.i
  %div.us.i = fdiv float %add30.us.i, %add35.us.i
  store float %div.us.i, float* %arrayidx23.us.i, align 4, !tbaa !83
  br label %for.inc52.us.i

for.inc52.us.i:                                   ; preds = %if.then.us.i, %if.else.us.i
  %indvars.iv.next109.i = add nuw nsw i64 %indvars.iv108.i, 1
  %exitcond.i = icmp eq i64 %indvars.iv.next109.i, %33
  br i1 %exitcond.i, label %for.cond.cleanup12.us.i, label %for.body13.us.i, !prof !317

for.body5.us.i:                                   ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body5.us.i ], [ 0, %for.cond2.preheader.us.i ]
  %fMic.098.us.i = phi float [ %add.us.i.3, %for.body5.us.i ], [ 0.000000e+00, %for.cond2.preheader.us.i ]
  %niter = phi i64 [ %niter.nsub.3, %for.body5.us.i ], [ %unroll_iter, %for.cond2.preheader.us.i ]
  %arrayidx.i.us.i = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i
  %48 = load float, float* %arrayidx.i.us.i, align 4, !tbaa !83
  %arrayidx.i96.us.i = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i
  %49 = load float*, float** %arrayidx.i96.us.i, align 8, !tbaa !76
  %arrayidx.us.i = getelementptr inbounds float, float* %49, i64 %indvars.iv110.i
  %50 = load float, float* %arrayidx.us.i, align 4, !tbaa !83
  %mul.us.i = fmul float %48, %50
  %add.us.i = fadd float %fMic.098.us.i, %mul.us.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.us.i.1 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i
  %51 = load float, float* %arrayidx.i.us.i.1, align 4, !tbaa !83
  %arrayidx.i96.us.i.1 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i
  %52 = load float*, float** %arrayidx.i96.us.i.1, align 8, !tbaa !76
  %arrayidx.us.i.1 = getelementptr inbounds float, float* %52, i64 %indvars.iv110.i
  %53 = load float, float* %arrayidx.us.i.1, align 4, !tbaa !83
  %mul.us.i.1 = fmul float %51, %53
  %add.us.i.1 = fadd float %add.us.i, %mul.us.i.1
  %indvars.iv.next.i.1 = or i64 %indvars.iv.i, 2
  %arrayidx.i.us.i.2 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.1
  %54 = load float, float* %arrayidx.i.us.i.2, align 4, !tbaa !83
  %arrayidx.i96.us.i.2 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.1
  %55 = load float*, float** %arrayidx.i96.us.i.2, align 8, !tbaa !76
  %arrayidx.us.i.2 = getelementptr inbounds float, float* %55, i64 %indvars.iv110.i
  %56 = load float, float* %arrayidx.us.i.2, align 4, !tbaa !83
  %mul.us.i.2 = fmul float %54, %56
  %add.us.i.2 = fadd float %add.us.i.1, %mul.us.i.2
  %indvars.iv.next.i.2 = or i64 %indvars.iv.i, 3
  %arrayidx.i.us.i.3 = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.next.i.2
  %57 = load float, float* %arrayidx.i.us.i.3, align 4, !tbaa !83
  %arrayidx.i96.us.i.3 = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.next.i.2
  %58 = load float*, float** %arrayidx.i96.us.i.3, align 8, !tbaa !76
  %arrayidx.us.i.3 = getelementptr inbounds float, float* %58, i64 %indvars.iv110.i
  %59 = load float, float* %arrayidx.us.i.3, align 4, !tbaa !83
  %mul.us.i.3 = fmul float %57, %59
  %add.us.i.3 = fadd float %add.us.i.2, %mul.us.i.3
  %indvars.iv.next.i.3 = add nuw nsw i64 %indvars.iv.i, 4
  %niter.nsub.3 = add i64 %niter, -4
  %niter.ncmp.3 = icmp eq i64 %niter.nsub.3, 0
  br i1 %niter.ncmp.3, label %for.body13.us.i.preheader.unr-lcssa, label %for.body5.us.i, !prof !317

for.body13.us.i.preheader.unr-lcssa:              ; preds = %for.body5.us.i, %for.cond2.preheader.us.i
  %add.us.i.lcssa.ph = phi float [ undef, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.cond2.preheader.us.i ], [ %indvars.iv.next.i.3, %for.body5.us.i ]
  %fMic.098.us.i.unr = phi float [ 0.000000e+00, %for.cond2.preheader.us.i ], [ %add.us.i.3, %for.body5.us.i ]
  br i1 %lcmp.mod, label %for.body13.us.i.preheader, label %for.body5.us.i.epil

for.body5.us.i.epil:                              ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %indvars.iv.i.epil = phi i64 [ %indvars.iv.next.i.epil, %for.body5.us.i.epil ], [ %indvars.iv.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %fMic.098.us.i.epil = phi float [ %add.us.i.epil, %for.body5.us.i.epil ], [ %fMic.098.us.i.unr, %for.body13.us.i.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.sub, %for.body5.us.i.epil ], [ %xtraiter, %for.body13.us.i.preheader.unr-lcssa ]
  %arrayidx.i.us.i.epil = getelementptr inbounds float, float* %.pre.i, i64 %indvars.iv.i.epil
  %60 = load float, float* %arrayidx.i.us.i.epil, align 4, !tbaa !83
  %arrayidx.i96.us.i.epil = getelementptr inbounds float*, float** %.pre122.i, i64 %indvars.iv.i.epil
  %61 = load float*, float** %arrayidx.i96.us.i.epil, align 8, !tbaa !76
  %arrayidx.us.i.epil = getelementptr inbounds float, float* %61, i64 %indvars.iv110.i
  %62 = load float, float* %arrayidx.us.i.epil, align 4, !tbaa !83
  %mul.us.i.epil = fmul float %60, %62
  %add.us.i.epil = fadd float %fMic.098.us.i.epil, %mul.us.i.epil
  %indvars.iv.next.i.epil = add nuw nsw i64 %indvars.iv.i.epil, 1
  %epil.iter.sub = add i64 %epil.iter, -1
  %epil.iter.cmp = icmp eq i64 %epil.iter.sub, 0
  br i1 %epil.iter.cmp, label %for.body13.us.i.preheader, label %for.body5.us.i.epil, !llvm.loop !502

for.body13.us.i.preheader:                        ; preds = %for.body5.us.i.epil, %for.body13.us.i.preheader.unr-lcssa
  %add.us.i.lcssa = phi float [ %add.us.i.lcssa.ph, %for.body13.us.i.preheader.unr-lcssa ], [ %add.us.i.epil, %for.body5.us.i.epil ]
  br label %for.body13.us.i

_ZN16CAmbisonicZoomer7ProcessEP8CBFormatj.exit:   ; preds = %for.cond.cleanup12.us.i, %for.cond2.preheader.lr.ph.i, %for.cond.cleanup, %entry
  %returnStruct = insertvalue %struct.out.zoomProcess_fxp undef, i64 %bytes_sumBF, 0
  %returnStruct1 = insertvalue %struct.out.zoomProcess_fxp %returnStruct, i64 %bytes_sumBF, 1
  ret %struct.out.zoomProcess_fxp %returnStruct1

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx1 = getelementptr inbounds float, float* %0, i64 %indvars.iv
  %63 = bitcast float* %arrayidx1 to i32*
  %64 = load i32, i32* %63, align 4, !tbaa !83
  %arrayidx3 = getelementptr inbounds float, float* %2, i64 %indvars.iv
  %65 = bitcast float* %arrayidx3 to i32*
  store i32 %64, i32* %65, align 4, !tbaa !83
  %arrayidx6 = getelementptr inbounds float, float* %3, i64 %indvars.iv
  %66 = bitcast float* %arrayidx6 to i32*
  %67 = load i32, i32* %66, align 4, !tbaa !83
  %arrayidx10 = getelementptr inbounds float, float* %4, i64 %indvars.iv
  %68 = bitcast float* %arrayidx10 to i32*
  store i32 %67, i32* %68, align 4, !tbaa !83
  %arrayidx13 = getelementptr inbounds float, float* %5, i64 %indvars.iv
  %69 = bitcast float* %arrayidx13 to i32*
  %70 = load i32, i32* %69, align 4, !tbaa !83
  %arrayidx17 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %71 = bitcast float* %arrayidx17 to i32*
  store i32 %70, i32* %71, align 4, !tbaa !83
  %arrayidx20 = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %72 = bitcast float* %arrayidx20 to i32*
  %73 = load i32, i32* %72, align 4, !tbaa !83
  %arrayidx24 = getelementptr inbounds float, float* %8, i64 %indvars.iv
  %74 = bitcast float* %arrayidx24 to i32*
  store i32 %73, i32* %74, align 4, !tbaa !83
  %arrayidx27 = getelementptr inbounds float, float* %9, i64 %indvars.iv
  %75 = bitcast float* %arrayidx27 to i32*
  %76 = load i32, i32* %75, align 4, !tbaa !83
  %arrayidx31 = getelementptr inbounds float, float* %10, i64 %indvars.iv
  %77 = bitcast float* %arrayidx31 to i32*
  store i32 %76, i32* %77, align 4, !tbaa !83
  %arrayidx34 = getelementptr inbounds float, float* %11, i64 %indvars.iv
  %78 = bitcast float* %arrayidx34 to i32*
  %79 = load i32, i32* %78, align 4, !tbaa !83
  %arrayidx38 = getelementptr inbounds float, float* %12, i64 %indvars.iv
  %80 = bitcast float* %arrayidx38 to i32*
  store i32 %79, i32* %80, align 4, !tbaa !83
  %arrayidx41 = getelementptr inbounds float, float* %13, i64 %indvars.iv
  %81 = bitcast float* %arrayidx41 to i32*
  %82 = load i32, i32* %81, align 4, !tbaa !83
  %arrayidx45 = getelementptr inbounds float, float* %14, i64 %indvars.iv
  %83 = bitcast float* %arrayidx45 to i32*
  store i32 %82, i32* %83, align 4, !tbaa !83
  %arrayidx48 = getelementptr inbounds float, float* %15, i64 %indvars.iv
  %84 = bitcast float* %arrayidx48 to i32*
  %85 = load i32, i32* %84, align 4, !tbaa !83
  %arrayidx52 = getelementptr inbounds float, float* %16, i64 %indvars.iv
  %86 = bitcast float* %arrayidx52 to i32*
  store i32 %85, i32* %86, align 4, !tbaa !83
  %arrayidx55 = getelementptr inbounds float, float* %17, i64 %indvars.iv
  %87 = bitcast float* %arrayidx55 to i32*
  %88 = load i32, i32* %87, align 4, !tbaa !83
  %arrayidx59 = getelementptr inbounds float, float* %18, i64 %indvars.iv
  %89 = bitcast float* %arrayidx59 to i32*
  store i32 %88, i32* %89, align 4, !tbaa !83
  %arrayidx62 = getelementptr inbounds float, float* %19, i64 %indvars.iv
  %90 = bitcast float* %arrayidx62 to i32*
  %91 = load i32, i32* %90, align 4, !tbaa !83
  %arrayidx66 = getelementptr inbounds float, float* %20, i64 %indvars.iv
  %92 = bitcast float* %arrayidx66 to i32*
  store i32 %91, i32* %92, align 4, !tbaa !83
  %arrayidx69 = getelementptr inbounds float, float* %21, i64 %indvars.iv
  %93 = bitcast float* %arrayidx69 to i32*
  %94 = load i32, i32* %93, align 4, !tbaa !83
  %arrayidx73 = getelementptr inbounds float, float* %22, i64 %indvars.iv
  %95 = bitcast float* %arrayidx73 to i32*
  store i32 %94, i32* %95, align 4, !tbaa !83
  %arrayidx76 = getelementptr inbounds float, float* %23, i64 %indvars.iv
  %96 = bitcast float* %arrayidx76 to i32*
  %97 = load i32, i32* %96, align 4, !tbaa !83
  %arrayidx80 = getelementptr inbounds float, float* %24, i64 %indvars.iv
  %98 = bitcast float* %arrayidx80 to i32*
  store i32 %97, i32* %98, align 4, !tbaa !83
  %arrayidx83 = getelementptr inbounds float, float* %25, i64 %indvars.iv
  %99 = bitcast float* %arrayidx83 to i32*
  %100 = load i32, i32* %99, align 4, !tbaa !83
  %arrayidx87 = getelementptr inbounds float, float* %26, i64 %indvars.iv
  %101 = bitcast float* %arrayidx87 to i32*
  store i32 %100, i32* %101, align 4, !tbaa !83
  %arrayidx90 = getelementptr inbounds float, float* %27, i64 %indvars.iv
  %102 = bitcast float* %arrayidx90 to i32*
  %103 = load i32, i32* %102, align 4, !tbaa !83
  %arrayidx94 = getelementptr inbounds float, float* %28, i64 %indvars.iv
  %104 = bitcast float* %arrayidx94 to i32*
  store i32 %103, i32* %104, align 4, !tbaa !83
  %arrayidx97 = getelementptr inbounds float, float* %29, i64 %indvars.iv
  %105 = bitcast float* %arrayidx97 to i32*
  %106 = load i32, i32* %105, align 4, !tbaa !83
  %arrayidx101 = getelementptr inbounds float, float* %30, i64 %indvars.iv
  %107 = bitcast float* %arrayidx101 to i32*
  store i32 %106, i32* %107, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond201 = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond201, label %for.cond.cleanup, label %for.body, !prof !316
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperZoomProcess_fxp @wrapperZoomProcess_fxp_cloned(%class.CAmbisonicZoomer* in %zoomer, i64 %bytes_zoomer, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, i32 %nSample, float** in %channelpart1, i64 %bytes_channelpart1, float** in %channelpart2, i64 %bytes_channelpart2, float** in %channelpart3, i64 %bytes_channelpart3) #7 !prof !103 {
entry:
  %zoomProcess_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @zoomProcess_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 4, i32 4, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 5, i32 5, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 6, i32 6, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 7, i32 7, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 8, i32 8, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 9, i32 9, i1 false)
  call void @llvm.hpvm.bind.input(i8* %zoomProcess_fxp_cloned.node, i32 10, i32 10, i1 false)
  call void @llvm.hpvm.bind.output(i8* %zoomProcess_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.output(i8* %zoomProcess_fxp_cloned.node, i32 1, i32 1, i1 false)
  ret %struct.out.wrapperZoomProcess_fxp undef
}

; Function Attrs: uwtable
define %struct.out.setAndFFT_left_fxp @setAndFFT_left_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF) #3 personality i32 (...)* @__gxx_personality_v0 !prof !230 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !116
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !101
  %cmp39 = icmp eq i32 %4, 0
  br i1 %cmp39, label %for.cond.cleanup, label %for.body.lr.ph, !prof !253

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i38 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = bitcast float** %_M_start.i38 to i8**
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i36 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.setAndFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.setAndFFT_left_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %6 = load i8*, i8** %5, align 8, !tbaa !116
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 %indvars.iv
  %8 = bitcast float** %arrayidx.i to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !76
  %10 = load i32, i32* %m_nBlockSize, align 8, !tbaa !337
  %conv4 = zext i32 %10 to i64
  %mul5 = shl nuw nsw i64 %conv4, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul5, i1 false)
  %11 = load i32, i32* %m_nBlockSize, align 8, !tbaa !337
  %conv8 = zext i32 %11 to i64
  %12 = load float*, float** %_M_start.i38, align 8, !tbaa !116
  %add.ptr.i = getelementptr inbounds float, float* %12, i64 %conv8
  %13 = bitcast float* %add.ptr.i to i8*
  %14 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %sub = sub i32 %14, %11
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 %mul13, i1 false)
  %15 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i36, align 8, !tbaa !76
  %16 = load float*, float** %_M_start.i38, align 8, !tbaa !116
  %17 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %15, float* %16, %struct.kiss_fft_cpx* %17)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %18 = load i32, i32* %3, align 8, !tbaa !101
  %19 = zext i32 %18 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %19
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !prof !277
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperSetAndFFT_left_fxp @wrapperSetAndFFT_left_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF) #7 !prof !103 {
entry:
  %setAndFFT_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.setAndFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @setAndFFT_left_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_left_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_left_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_left_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_left_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.output(i8* %setAndFFT_left_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperSetAndFFT_left_fxp undef
}

; Function Attrs: uwtable
define %struct.out.setAndFFT_right_fxp @setAndFFT_right_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF) #3 personality i32 (...)* @__gxx_personality_v0 !prof !230 {
entry:
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %0 = bitcast float** %_M_start.i to i8**
  %1 = load i8*, i8** %0, align 8, !tbaa !116
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %2 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %conv = zext i32 %2 to i64
  %mul = shl nuw nsw i64 %conv, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 %mul, i1 false)
  %3 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8, !tbaa !101
  %cmp39 = icmp eq i32 %4, 0
  br i1 %cmp39, label %for.cond.cleanup, label %for.body.lr.ph, !prof !253

for.body.lr.ph:                                   ; preds = %entry
  %_M_start.i38 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %5 = bitcast float** %_M_start.i38 to i8**
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CBFormat, %class.CBFormat* %sumBF, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %_M_head_impl.i.i.i.i.i36 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %returnStruct = insertvalue %struct.out.setAndFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.setAndFFT_right_fxp %returnStruct

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %6 = load i8*, i8** %5, align 8, !tbaa !116
  %7 = load float**, float*** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %arrayidx.i = getelementptr inbounds float*, float** %7, i64 %indvars.iv
  %8 = bitcast float** %arrayidx.i to i8**
  %9 = load i8*, i8** %8, align 8, !tbaa !76
  %10 = load i32, i32* %m_nBlockSize, align 8, !tbaa !337
  %conv4 = zext i32 %10 to i64
  %mul5 = shl nuw nsw i64 %conv4, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %9, i64 %mul5, i1 false)
  %11 = load i32, i32* %m_nBlockSize, align 8, !tbaa !337
  %conv8 = zext i32 %11 to i64
  %12 = load float*, float** %_M_start.i38, align 8, !tbaa !116
  %add.ptr.i = getelementptr inbounds float, float* %12, i64 %conv8
  %13 = bitcast float* %add.ptr.i to i8*
  %14 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %sub = sub i32 %14, %11
  %conv12 = zext i32 %sub to i64
  %mul13 = shl nuw nsw i64 %conv12, 2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 %mul13, i1 false)
  %15 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i36, align 8, !tbaa !76
  %16 = load float*, float** %_M_start.i38, align 8, !tbaa !116
  %17 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  tail call void @kiss_fftr(%struct.kiss_fftr_state* %15, float* %16, %struct.kiss_fft_cpx* %17)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %18 = load i32, i32* %3, align 8, !tbaa !101
  %19 = zext i32 %18 to i64
  %cmp = icmp ult i64 %indvars.iv.next, %19
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !prof !277
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperSetAndFFT_right_fxp @wrapperSetAndFFT_right_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder, %class.CBFormat* in %sumBF, i64 %bytes_sumBF) #7 !prof !103 {
entry:
  %setAndFFT_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.setAndFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @setAndFFT_right_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_right_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_right_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_right_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %setAndFFT_right_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.output(i8* %setAndFFT_right_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperSetAndFFT_right_fxp undef
}

; Function Attrs: nounwind uwtable
define %struct.out.FIR_left_fxp @FIR_left_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #7 !prof !230 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp109 = icmp eq i32 %1, 0
  br i1 %cmp109, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph, !prof !253

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i105 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 0, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %m_nFFTBins, align 4, !tbaa !341
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %2 = phi i32 [ %1, %for.cond1.preheader.lr.ph ], [ %7, %for.cond.cleanup3 ]
  %3 = phi i32 [ %.pre, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup3 ]
  %indvars.iv112 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next113, %for.cond.cleanup3 ]
  %cmp2107 = icmp eq i32 %3, 0
  br i1 %cmp2107, label %for.cond.cleanup3, label %for.body4.lr.ph, !prof !254

for.body4.lr.ph:                                  ; preds = %for.cond1.preheader
  %4 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %5 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i105, align 8, !tbaa !390
  %_M_head_impl.i.i.i.i.i.i103 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %5, i64 %indvars.iv112, i32 0, i32 0, i32 0, i32 0
  %6 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i103, align 8, !tbaa !76
  br label %for.body4

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  %returnStruct = insertvalue %struct.out.FIR_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_left_fxp %returnStruct

for.cond.cleanup3.loopexit:                       ; preds = %for.body4
  %.pre114 = load i32, i32* %0, align 8, !tbaa !101
  br label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond.cleanup3.loopexit, %for.cond1.preheader
  %7 = phi i32 [ %.pre114, %for.cond.cleanup3.loopexit ], [ %2, %for.cond1.preheader ]
  %8 = phi i32 [ %14, %for.cond.cleanup3.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %9 = zext i32 %7 to i64
  %cmp = icmp ult i64 %indvars.iv.next113, %9
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup, !prof !277

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %4, i64 %indvars.iv, i32 0
  %10 = load float, float* %r, align 4, !tbaa !263
  %r9 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %6, i64 %indvars.iv, i32 0
  %11 = load float, float* %r9, align 4, !tbaa !263
  %mul = fmul float %10, %11
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %4, i64 %indvars.iv, i32 1
  %12 = load float, float* %i, align 4, !tbaa !265
  %i19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %6, i64 %indvars.iv, i32 1
  %13 = load float, float* %i19, align 4, !tbaa !265
  %mul20 = fmul float %12, %13
  %sub = fsub float %mul, %mul20
  %mul33 = fmul float %10, %13
  %mul45 = fmul float %11, %12
  %add = fadd float %mul45, %mul33
  store float %sub, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %14 = load i32, i32* %m_nFFTBins, align 4, !tbaa !341
  %15 = zext i32 %14 to i64
  %cmp2 = icmp ult i64 %indvars.iv.next, %15
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3.loopexit, !prof !266
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperFIR_left_fxp @wrapperFIR_left_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #7 !prof !103 {
entry:
  %FIR_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @FIR_left_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %FIR_left_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %FIR_left_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.output(i8* %FIR_left_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperFIR_left_fxp undef
}

; Function Attrs: nounwind uwtable
define %struct.out.FIR_right_fxp @FIR_right_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #7 !prof !230 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp109 = icmp eq i32 %1, 0
  br i1 %cmp109, label %for.cond.cleanup, label %for.cond1.preheader.lr.ph, !prof !253

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %m_nFFTBins = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 5
  %_M_head_impl.i.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i105 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 10, i64 1, i32 0, i32 0, i32 0
  %.pre = load i32, i32* %m_nFFTBins, align 4, !tbaa !341
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond.cleanup3, %for.cond1.preheader.lr.ph
  %2 = phi i32 [ %1, %for.cond1.preheader.lr.ph ], [ %7, %for.cond.cleanup3 ]
  %3 = phi i32 [ %.pre, %for.cond1.preheader.lr.ph ], [ %8, %for.cond.cleanup3 ]
  %indvars.iv112 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next113, %for.cond.cleanup3 ]
  %cmp2107 = icmp eq i32 %3, 0
  br i1 %cmp2107, label %for.cond.cleanup3, label %for.body4.lr.ph, !prof !254

for.body4.lr.ph:                                  ; preds = %for.cond1.preheader
  %4 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i, align 8, !tbaa !76
  %5 = load %"class.std::unique_ptr.31"*, %"class.std::unique_ptr.31"** %_M_start.i105, align 8, !tbaa !390
  %_M_head_impl.i.i.i.i.i.i103 = getelementptr inbounds %"class.std::unique_ptr.31", %"class.std::unique_ptr.31"* %5, i64 %indvars.iv112, i32 0, i32 0, i32 0, i32 0
  %6 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i.i103, align 8, !tbaa !76
  br label %for.body4

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  %returnStruct = insertvalue %struct.out.FIR_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.FIR_right_fxp %returnStruct

for.cond.cleanup3.loopexit:                       ; preds = %for.body4
  %.pre114 = load i32, i32* %0, align 8, !tbaa !101
  br label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond.cleanup3.loopexit, %for.cond1.preheader
  %7 = phi i32 [ %.pre114, %for.cond.cleanup3.loopexit ], [ %2, %for.cond1.preheader ]
  %8 = phi i32 [ %14, %for.cond.cleanup3.loopexit ], [ 0, %for.cond1.preheader ]
  %indvars.iv.next113 = add nuw nsw i64 %indvars.iv112, 1
  %9 = zext i32 %7 to i64
  %cmp = icmp ult i64 %indvars.iv.next113, %9
  br i1 %cmp, label %for.cond1.preheader, label %for.cond.cleanup, !prof !277

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %r = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %4, i64 %indvars.iv, i32 0
  %10 = load float, float* %r, align 4, !tbaa !263
  %r9 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %6, i64 %indvars.iv, i32 0
  %11 = load float, float* %r9, align 4, !tbaa !263
  %mul = fmul float %10, %11
  %i = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %4, i64 %indvars.iv, i32 1
  %12 = load float, float* %i, align 4, !tbaa !265
  %i19 = getelementptr inbounds %struct.kiss_fft_cpx, %struct.kiss_fft_cpx* %6, i64 %indvars.iv, i32 1
  %13 = load float, float* %i19, align 4, !tbaa !265
  %mul20 = fmul float %12, %13
  %sub = fsub float %mul, %mul20
  %mul33 = fmul float %10, %13
  %mul45 = fmul float %11, %12
  %add = fadd float %mul45, %mul33
  store float %sub, float* %r, align 4
  store float %add, float* %i, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %14 = load i32, i32* %m_nFFTBins, align 4, !tbaa !341
  %15 = zext i32 %14 to i64
  %cmp2 = icmp ult i64 %indvars.iv.next, %15
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3.loopexit, !prof !266
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperFIR_right_fxp @wrapperFIR_right_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #7 !prof !103 {
entry:
  %FIR_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @FIR_right_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %FIR_right_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %FIR_right_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.output(i8* %FIR_right_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperFIR_right_fxp undef
}

; Function Attrs: uwtable
define %struct.out.IFFT_left_fxp @IFFT_left_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #3 personality i32 (...)* @__gxx_personality_v0 !prof !230 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp34 = icmp eq i32 %1, 0
  br i1 %cmp34, label %for.cond.cleanup, label %for.body.lr.ph, !prof !253

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i31 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i30 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup5, %entry
  %returnStruct = insertvalue %struct.out.IFFT_left_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_left_fxp %returnStruct

for.body:                                         ; preds = %for.cond.cleanup5, %for.body.lr.ph
  %niChannel.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc12, %for.cond.cleanup5 ]
  %2 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  %3 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i31, align 8, !tbaa !76
  %4 = load float*, float** %_M_start.i30, align 8, !tbaa !116
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %2, %struct.kiss_fft_cpx* %3, float* %4)
  %5 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %cmp432 = icmp eq i32 %5, 0
  br i1 %cmp432, label %for.cond.cleanup5, label %for.body6.lr.ph, !prof !255

for.body6.lr.ph:                                  ; preds = %for.body
  %6 = load float*, float** %_M_start.i30, align 8, !tbaa !116
  %7 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %8 = zext i32 %5 to i64
  %min.iters.check = icmp ult i32 %5, 8
  br i1 %min.iters.check, label %for.body6.preheader, label %vector.memcheck

for.body6.preheader:                              ; preds = %middle.block, %vector.memcheck, %for.body6.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body6.lr.ph ], [ %n.vec, %middle.block ]
  %9 = or i64 %indvars.iv.ph, 1
  %10 = icmp ugt i64 %9, %8
  %umax = select i1 %10, i64 %9, i64 %8
  %11 = xor i64 %indvars.iv.ph, -1
  %12 = add nsw i64 %umax, %11
  %xtraiter43 = and i64 %umax, 3
  %lcmp.mod44 = icmp eq i64 %xtraiter43, 0
  br i1 %lcmp.mod44, label %for.body6.prol.loopexit, label %for.body6.prol

for.body6.prol:                                   ; preds = %for.body6.prol, %for.body6.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body6.prol ], [ %indvars.iv.ph, %for.body6.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body6.prol ], [ %xtraiter43, %for.body6.preheader ]
  %add.ptr.i29.prol = getelementptr inbounds float, float* %6, i64 %indvars.iv.prol
  %13 = load float, float* %add.ptr.i29.prol, align 4, !tbaa !83
  %add.ptr.i.prol = getelementptr inbounds float, float* %7, i64 %indvars.iv.prol
  %14 = load float, float* %add.ptr.i.prol, align 4, !tbaa !83
  %add.prol = fadd float %13, %14
  store float %add.prol, float* %add.ptr.i.prol, align 4, !tbaa !83
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body6.prol.loopexit, label %for.body6.prol, !llvm.loop !503

for.body6.prol.loopexit:                          ; preds = %for.body6.prol, %for.body6.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body6.preheader ], [ %indvars.iv.next.prol, %for.body6.prol ]
  %15 = icmp ult i64 %12, 3
  br i1 %15, label %for.cond.cleanup5, label %for.body6

vector.memcheck:                                  ; preds = %for.body6.lr.ph
  %scevgep = getelementptr float, float* %7, i64 %8
  %scevgep37 = getelementptr float, float* %6, i64 %8
  %bound0 = icmp ult float* %7, %scevgep37
  %bound1 = icmp ult float* %6, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body6.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %8, 4294967288
  %16 = add nsw i64 %n.vec, -8
  %17 = lshr exact i64 %16, 3
  %18 = add nuw nsw i64 %17, 1
  %xtraiter = and i64 %18, 1
  %19 = icmp eq i64 %16, 0
  br i1 %19, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %18, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %6, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !83, !alias.scope !504
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load40 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !83, !alias.scope !504
  %24 = getelementptr inbounds float, float* %7, i64 %index
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load41 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load42 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %28 = fadd <4 x float> %wide.load, %wide.load41
  %29 = fadd <4 x float> %wide.load40, %wide.load42
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %31 = bitcast float* %26 to <4 x float>*
  store <4 x float> %29, <4 x float>* %31, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %index.next = or i64 %index, 8
  %32 = getelementptr inbounds float, float* %6, i64 %index.next
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !83, !alias.scope !504
  %34 = getelementptr inbounds float, float* %32, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load40.1 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !83, !alias.scope !504
  %36 = getelementptr inbounds float, float* %7, i64 %index.next
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load41.1 = load <4 x float>, <4 x float>* %37, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load42.1 = load <4 x float>, <4 x float>* %39, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %40 = fadd <4 x float> %wide.load.1, %wide.load41.1
  %41 = fadd <4 x float> %wide.load40.1, %wide.load42.1
  %42 = bitcast float* %36 to <4 x float>*
  store <4 x float> %40, <4 x float>* %42, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %43 = bitcast float* %38 to <4 x float>*
  store <4 x float> %41, <4 x float>* %43, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !509

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %44 = getelementptr inbounds float, float* %6, i64 %index.unr
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !83, !alias.scope !504
  %46 = getelementptr inbounds float, float* %44, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %wide.load40.epil = load <4 x float>, <4 x float>* %47, align 4, !tbaa !83, !alias.scope !504
  %48 = getelementptr inbounds float, float* %7, i64 %index.unr
  %49 = bitcast float* %48 to <4 x float>*
  %wide.load41.epil = load <4 x float>, <4 x float>* %49, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %50 = getelementptr inbounds float, float* %48, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  %wide.load42.epil = load <4 x float>, <4 x float>* %51, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %52 = fadd <4 x float> %wide.load.epil, %wide.load41.epil
  %53 = fadd <4 x float> %wide.load40.epil, %wide.load42.epil
  %54 = bitcast float* %48 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  %55 = bitcast float* %50 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 4, !tbaa !83, !alias.scope !507, !noalias !504
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %8
  br i1 %cmp.n, label %for.cond.cleanup5, label %for.body6.preheader

for.cond.cleanup5:                                ; preds = %for.body6, %middle.block, %for.body6.prol.loopexit, %for.body
  %inc12 = add nuw i32 %niChannel.035, 1
  %56 = load i32, i32* %0, align 8, !tbaa !101
  %cmp = icmp ult i32 %inc12, %56
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !prof !277

for.body6:                                        ; preds = %for.body6, %for.body6.prol.loopexit
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body6 ], [ %indvars.iv.unr, %for.body6.prol.loopexit ]
  %add.ptr.i29 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %57 = load float, float* %add.ptr.i29, align 4, !tbaa !83
  %add.ptr.i = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %58 = load float, float* %add.ptr.i, align 4, !tbaa !83
  %add = fadd float %57, %58
  store float %add, float* %add.ptr.i, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add.ptr.i29.1 = getelementptr inbounds float, float* %6, i64 %indvars.iv.next
  %59 = load float, float* %add.ptr.i29.1, align 4, !tbaa !83
  %add.ptr.i.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %60 = load float, float* %add.ptr.i.1, align 4, !tbaa !83
  %add.1 = fadd float %59, %60
  store float %add.1, float* %add.ptr.i.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %add.ptr.i29.2 = getelementptr inbounds float, float* %6, i64 %indvars.iv.next.1
  %61 = load float, float* %add.ptr.i29.2, align 4, !tbaa !83
  %add.ptr.i.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %62 = load float, float* %add.ptr.i.2, align 4, !tbaa !83
  %add.2 = fadd float %61, %62
  store float %add.2, float* %add.ptr.i.2, align 4, !tbaa !83
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %add.ptr.i29.3 = getelementptr inbounds float, float* %6, i64 %indvars.iv.next.2
  %63 = load float, float* %add.ptr.i29.3, align 4, !tbaa !83
  %add.ptr.i.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %64 = load float, float* %add.ptr.i.3, align 4, !tbaa !83
  %add.3 = fadd float %63, %64
  store float %add.3, float* %add.ptr.i.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %cmp4.3 = icmp ult i64 %indvars.iv.next.3, %8
  br i1 %cmp4.3, label %for.body6, label %for.cond.cleanup5, !prof !275, !llvm.loop !510
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperIFFT_left_fxp @wrapperIFFT_left_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #7 !prof !103 {
entry:
  %IFFT_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @IFFT_left_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %IFFT_left_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %IFFT_left_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.output(i8* %IFFT_left_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperIFFT_left_fxp undef
}

; Function Attrs: uwtable
define %struct.out.IFFT_right_fxp @IFFT_right_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #3 personality i32 (...)* @__gxx_personality_v0 !prof !230 {
entry:
  %0 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 0, i32 4
  %1 = load i32, i32* %0, align 8, !tbaa !101
  %cmp34 = icmp eq i32 %1, 0
  br i1 %cmp34, label %for.cond.cleanup, label %for.body.lr.ph, !prof !253

for.body.lr.ph:                                   ; preds = %entry
  %_M_head_impl.i.i.i.i.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0
  %_M_head_impl.i.i.i.i.i31 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %_M_start.i30 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 13, i32 0, i32 0, i32 0
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup5, %entry
  %returnStruct = insertvalue %struct.out.IFFT_right_fxp undef, i64 %bytes_decoder, 0
  ret %struct.out.IFFT_right_fxp %returnStruct

for.body:                                         ; preds = %for.cond.cleanup5, %for.body.lr.ph
  %niChannel.035 = phi i32 [ 0, %for.body.lr.ph ], [ %inc12, %for.cond.cleanup5 ]
  %2 = load %struct.kiss_fftr_state*, %struct.kiss_fftr_state** %_M_head_impl.i.i.i.i.i, align 8, !tbaa !76
  %3 = load %struct.kiss_fft_cpx*, %struct.kiss_fft_cpx** %_M_head_impl.i.i.i.i.i31, align 8, !tbaa !76
  %4 = load float*, float** %_M_start.i30, align 8, !tbaa !116
  tail call void @kiss_fftri(%struct.kiss_fftr_state* %2, %struct.kiss_fft_cpx* %3, float* %4)
  %5 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %cmp432 = icmp eq i32 %5, 0
  br i1 %cmp432, label %for.cond.cleanup5, label %for.body6.lr.ph, !prof !255

for.body6.lr.ph:                                  ; preds = %for.body
  %6 = load float*, float** %_M_start.i30, align 8, !tbaa !116
  %7 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %8 = zext i32 %5 to i64
  %min.iters.check = icmp ult i32 %5, 8
  br i1 %min.iters.check, label %for.body6.preheader, label %vector.memcheck

for.body6.preheader:                              ; preds = %middle.block, %vector.memcheck, %for.body6.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body6.lr.ph ], [ %n.vec, %middle.block ]
  %9 = or i64 %indvars.iv.ph, 1
  %10 = icmp ugt i64 %9, %8
  %umax = select i1 %10, i64 %9, i64 %8
  %11 = xor i64 %indvars.iv.ph, -1
  %12 = add nsw i64 %umax, %11
  %xtraiter43 = and i64 %umax, 3
  %lcmp.mod44 = icmp eq i64 %xtraiter43, 0
  br i1 %lcmp.mod44, label %for.body6.prol.loopexit, label %for.body6.prol

for.body6.prol:                                   ; preds = %for.body6.prol, %for.body6.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body6.prol ], [ %indvars.iv.ph, %for.body6.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body6.prol ], [ %xtraiter43, %for.body6.preheader ]
  %add.ptr.i29.prol = getelementptr inbounds float, float* %6, i64 %indvars.iv.prol
  %13 = load float, float* %add.ptr.i29.prol, align 4, !tbaa !83
  %add.ptr.i.prol = getelementptr inbounds float, float* %7, i64 %indvars.iv.prol
  %14 = load float, float* %add.ptr.i.prol, align 4, !tbaa !83
  %add.prol = fadd float %13, %14
  store float %add.prol, float* %add.ptr.i.prol, align 4, !tbaa !83
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body6.prol.loopexit, label %for.body6.prol, !llvm.loop !511

for.body6.prol.loopexit:                          ; preds = %for.body6.prol, %for.body6.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body6.preheader ], [ %indvars.iv.next.prol, %for.body6.prol ]
  %15 = icmp ult i64 %12, 3
  br i1 %15, label %for.cond.cleanup5, label %for.body6

vector.memcheck:                                  ; preds = %for.body6.lr.ph
  %scevgep = getelementptr float, float* %7, i64 %8
  %scevgep37 = getelementptr float, float* %6, i64 %8
  %bound0 = icmp ult float* %7, %scevgep37
  %bound1 = icmp ult float* %6, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body6.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %8, 4294967288
  %16 = add nsw i64 %n.vec, -8
  %17 = lshr exact i64 %16, 3
  %18 = add nuw nsw i64 %17, 1
  %xtraiter = and i64 %18, 1
  %19 = icmp eq i64 %16, 0
  br i1 %19, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter = sub nuw nsw i64 %18, %xtraiter
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter = phi i64 [ %unroll_iter, %vector.ph.new ], [ %niter.nsub.1, %vector.body ]
  %20 = getelementptr inbounds float, float* %6, i64 %index
  %21 = bitcast float* %20 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %21, align 4, !tbaa !83, !alias.scope !512
  %22 = getelementptr inbounds float, float* %20, i64 4
  %23 = bitcast float* %22 to <4 x float>*
  %wide.load40 = load <4 x float>, <4 x float>* %23, align 4, !tbaa !83, !alias.scope !512
  %24 = getelementptr inbounds float, float* %7, i64 %index
  %25 = bitcast float* %24 to <4 x float>*
  %wide.load41 = load <4 x float>, <4 x float>* %25, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %26 = getelementptr inbounds float, float* %24, i64 4
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load42 = load <4 x float>, <4 x float>* %27, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %28 = fadd <4 x float> %wide.load, %wide.load41
  %29 = fadd <4 x float> %wide.load40, %wide.load42
  %30 = bitcast float* %24 to <4 x float>*
  store <4 x float> %28, <4 x float>* %30, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %31 = bitcast float* %26 to <4 x float>*
  store <4 x float> %29, <4 x float>* %31, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %index.next = or i64 %index, 8
  %32 = getelementptr inbounds float, float* %6, i64 %index.next
  %33 = bitcast float* %32 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %33, align 4, !tbaa !83, !alias.scope !512
  %34 = getelementptr inbounds float, float* %32, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load40.1 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !83, !alias.scope !512
  %36 = getelementptr inbounds float, float* %7, i64 %index.next
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load41.1 = load <4 x float>, <4 x float>* %37, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  %wide.load42.1 = load <4 x float>, <4 x float>* %39, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %40 = fadd <4 x float> %wide.load.1, %wide.load41.1
  %41 = fadd <4 x float> %wide.load40.1, %wide.load42.1
  %42 = bitcast float* %36 to <4 x float>*
  store <4 x float> %40, <4 x float>* %42, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %43 = bitcast float* %38 to <4 x float>*
  store <4 x float> %41, <4 x float>* %43, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %index.next.1 = add i64 %index, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !517

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %44 = getelementptr inbounds float, float* %6, i64 %index.unr
  %45 = bitcast float* %44 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %45, align 4, !tbaa !83, !alias.scope !512
  %46 = getelementptr inbounds float, float* %44, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  %wide.load40.epil = load <4 x float>, <4 x float>* %47, align 4, !tbaa !83, !alias.scope !512
  %48 = getelementptr inbounds float, float* %7, i64 %index.unr
  %49 = bitcast float* %48 to <4 x float>*
  %wide.load41.epil = load <4 x float>, <4 x float>* %49, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %50 = getelementptr inbounds float, float* %48, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  %wide.load42.epil = load <4 x float>, <4 x float>* %51, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %52 = fadd <4 x float> %wide.load.epil, %wide.load41.epil
  %53 = fadd <4 x float> %wide.load40.epil, %wide.load42.epil
  %54 = bitcast float* %48 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  %55 = bitcast float* %50 to <4 x float>*
  store <4 x float> %53, <4 x float>* %55, align 4, !tbaa !83, !alias.scope !515, !noalias !512
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %8
  br i1 %cmp.n, label %for.cond.cleanup5, label %for.body6.preheader

for.cond.cleanup5:                                ; preds = %for.body6, %middle.block, %for.body6.prol.loopexit, %for.body
  %inc12 = add nuw i32 %niChannel.035, 1
  %56 = load i32, i32* %0, align 8, !tbaa !101
  %cmp = icmp ult i32 %inc12, %56
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !prof !277

for.body6:                                        ; preds = %for.body6, %for.body6.prol.loopexit
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body6 ], [ %indvars.iv.unr, %for.body6.prol.loopexit ]
  %add.ptr.i29 = getelementptr inbounds float, float* %6, i64 %indvars.iv
  %57 = load float, float* %add.ptr.i29, align 4, !tbaa !83
  %add.ptr.i = getelementptr inbounds float, float* %7, i64 %indvars.iv
  %58 = load float, float* %add.ptr.i, align 4, !tbaa !83
  %add = fadd float %57, %58
  store float %add, float* %add.ptr.i, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add.ptr.i29.1 = getelementptr inbounds float, float* %6, i64 %indvars.iv.next
  %59 = load float, float* %add.ptr.i29.1, align 4, !tbaa !83
  %add.ptr.i.1 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next
  %60 = load float, float* %add.ptr.i.1, align 4, !tbaa !83
  %add.1 = fadd float %59, %60
  store float %add.1, float* %add.ptr.i.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %add.ptr.i29.2 = getelementptr inbounds float, float* %6, i64 %indvars.iv.next.1
  %61 = load float, float* %add.ptr.i29.2, align 4, !tbaa !83
  %add.ptr.i.2 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.1
  %62 = load float, float* %add.ptr.i.2, align 4, !tbaa !83
  %add.2 = fadd float %61, %62
  store float %add.2, float* %add.ptr.i.2, align 4, !tbaa !83
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %add.ptr.i29.3 = getelementptr inbounds float, float* %6, i64 %indvars.iv.next.2
  %63 = load float, float* %add.ptr.i29.3, align 4, !tbaa !83
  %add.ptr.i.3 = getelementptr inbounds float, float* %7, i64 %indvars.iv.next.2
  %64 = load float, float* %add.ptr.i.3, align 4, !tbaa !83
  %add.3 = fadd float %63, %64
  store float %add.3, float* %add.ptr.i.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %cmp4.3 = icmp ult i64 %indvars.iv.next.3, %8
  br i1 %cmp4.3, label %for.body6, label %for.cond.cleanup5, !prof !275, !llvm.loop !518
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperIFFT_right_fxp @wrapperIFFT_right_fxp_cloned(%class.CAmbisonicBinauralizer* in out %decoder, i64 %bytes_decoder) #7 !prof !103 {
entry:
  %IFFT_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @IFFT_right_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %IFFT_right_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %IFFT_right_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.output(i8* %IFFT_right_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperIFFT_right_fxp undef
}

; Function Attrs: nounwind uwtable
define %struct.out.overlap_left_fxp @overlap_left_fxp_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float* in out %resultSample0, i64 %bytes_resultSample0) #7 personality i32 (...)* @__gxx_personality_v0 !prof !230 {
entry:
  %0 = bitcast float* %resultSample0 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %1 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %cmp56 = icmp eq i32 %1, 0
  br i1 %cmp56, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph, !prof !519

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !116
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i51 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %2 = load float*, float** %_M_start.i51, align 8, !tbaa !116
  %3 = bitcast float* %2 to i8*
  %4 = zext i32 %1 to i64
  %min.iters.check = icmp ult i32 %1, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv58.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  %5 = or i64 %indvars.iv58.ph, 1
  %6 = icmp ugt i64 %5, %4
  %umax102 = select i1 %6, i64 %5, i64 %4
  %7 = xor i64 %indvars.iv58.ph, -1
  %8 = add nsw i64 %umax102, %7
  %xtraiter103 = and i64 %umax102, 3
  %lcmp.mod104 = icmp eq i64 %xtraiter103, 0
  br i1 %lcmp.mod104, label %for.body.prol.loopexit, label %for.body.prol

for.body.prol:                                    ; preds = %for.body.prol, %for.body.preheader
  %indvars.iv58.prol = phi i64 [ %indvars.iv.next59.prol, %for.body.prol ], [ %indvars.iv58.ph, %for.body.preheader ]
  %prol.iter105 = phi i64 [ %prol.iter105.sub, %for.body.prol ], [ %xtraiter103, %for.body.preheader ]
  %9 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52.prol = getelementptr inbounds float, float* %2, i64 %indvars.iv58.prol
  %10 = load float, float* %add.ptr.i52.prol, align 4, !tbaa !83
  %mul.prol = fmul float %9, %10
  store float %mul.prol, float* %add.ptr.i52.prol, align 4, !tbaa !83
  %indvars.iv.next59.prol = add nuw nsw i64 %indvars.iv58.prol, 1
  %prol.iter105.sub = add i64 %prol.iter105, -1
  %prol.iter105.cmp = icmp eq i64 %prol.iter105.sub, 0
  br i1 %prol.iter105.cmp, label %for.body.prol.loopexit, label %for.body.prol, !llvm.loop !520

for.body.prol.loopexit:                           ; preds = %for.body.prol, %for.body.preheader
  %indvars.iv58.unr = phi i64 [ %indvars.iv58.ph, %for.body.preheader ], [ %indvars.iv.next59.prol, %for.body.prol ]
  %11 = icmp ult i64 %8, 3
  br i1 %11, label %for.cond.cleanup, label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %2, i64 %4
  %scevgep67 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6768 = bitcast float* %scevgep67 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6768, i64 1
  %bound0 = icmp ugt i8* %uglygep, %3
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %4, 4294967288
  %12 = add nsw i64 %n.vec, -8
  %13 = lshr exact i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %xtraiter106 = and i64 %14, 1
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter108 = sub nuw nsw i64 %14, %xtraiter106
  %16 = load float, float* %m_fFFTScaler, align 8, !tbaa !342, !alias.scope !521
  %17 = insertelement <4 x float> undef, float %16, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> undef, <4 x i32> zeroinitializer
  %19 = insertelement <4 x float> undef, float %16, i32 0
  %20 = shufflevector <4 x float> %19, <4 x float> undef, <4 x i32> zeroinitializer
  %21 = load float, float* %m_fFFTScaler, align 8, !tbaa !342, !alias.scope !521
  %22 = insertelement <4 x float> undef, float %21, i32 0
  %23 = shufflevector <4 x float> %22, <4 x float> undef, <4 x i32> zeroinitializer
  %24 = insertelement <4 x float> undef, float %21, i32 0
  %25 = shufflevector <4 x float> %24, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter109 = phi i64 [ %unroll_iter108, %vector.ph.new ], [ %niter109.nsub.1, %vector.body ]
  %26 = getelementptr inbounds float, float* %2, i64 %index
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %27, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %28 = getelementptr inbounds float, float* %26, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load70 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %30 = fmul <4 x float> %18, %wide.load
  %31 = fmul <4 x float> %20, %wide.load70
  %32 = bitcast float* %26 to <4 x float>*
  store <4 x float> %30, <4 x float>* %32, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %33 = bitcast float* %28 to <4 x float>*
  store <4 x float> %31, <4 x float>* %33, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %index.next = or i64 %index, 8
  %34 = getelementptr inbounds float, float* %2, i64 %index.next
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %36 = getelementptr inbounds float, float* %34, i64 4
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load70.1 = load <4 x float>, <4 x float>* %37, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %38 = fmul <4 x float> %23, %wide.load.1
  %39 = fmul <4 x float> %25, %wide.load70.1
  %40 = bitcast float* %34 to <4 x float>*
  store <4 x float> %38, <4 x float>* %40, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %41 = bitcast float* %36 to <4 x float>*
  store <4 x float> %39, <4 x float>* %41, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %index.next.1 = add i64 %index, 16
  %niter109.nsub.1 = add i64 %niter109, -2
  %niter109.ncmp.1 = icmp eq i64 %niter109.nsub.1, 0
  br i1 %niter109.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !526

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod107 = icmp eq i64 %xtraiter106, 0
  br i1 %lcmp.mod107, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %42 = load float, float* %m_fFFTScaler, align 8, !tbaa !342, !alias.scope !521
  %43 = insertelement <4 x float> undef, float %42, i32 0
  %44 = shufflevector <4 x float> %43, <4 x float> undef, <4 x i32> zeroinitializer
  %45 = insertelement <4 x float> undef, float %42, i32 0
  %46 = shufflevector <4 x float> %45, <4 x float> undef, <4 x i32> zeroinitializer
  %47 = getelementptr inbounds float, float* %2, i64 %index.unr
  %48 = bitcast float* %47 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %48, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %49 = getelementptr inbounds float, float* %47, i64 4
  %50 = bitcast float* %49 to <4 x float>*
  %wide.load70.epil = load <4 x float>, <4 x float>* %50, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %51 = fmul <4 x float> %44, %wide.load.epil
  %52 = fmul <4 x float> %46, %wide.load70.epil
  %53 = bitcast float* %47 to <4 x float>*
  store <4 x float> %51, <4 x float>* %53, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  %54 = bitcast float* %49 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 4, !tbaa !83, !alias.scope !524, !noalias !521
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %4
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %for.body.prol.loopexit, %entry.for.cond.cleanup_crit_edge
  %55 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %3, %middle.block ], [ %3, %for.body ], [ %3, %for.body.prol.loopexit ]
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %56 = load i32, i32* %m_nBlockSize, align 8, !tbaa !337
  %conv3 = zext i32 %56 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %55, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %57 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !338
  %cmp753 = icmp eq i32 %57, 0
  %arrayidx = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0
  br i1 %cmp753, label %for.cond.cleanup.for.cond.cleanup8_crit_edge, label %for.body9.lr.ph, !prof !527

for.cond.cleanup.for.cond.cleanup8_crit_edge:     ; preds = %for.cond.cleanup
  %.phi.trans.insert60 = bitcast %"class.std::vector.0"* %arrayidx to i8**
  %.pre61 = load i8*, i8** %.phi.trans.insert60, align 8, !tbaa !116
  br label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i47 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %arrayidx, i64 0, i32 0, i32 0, i32 0
  %58 = load float*, float** %_M_start.i47, align 8, !tbaa !116
  %59 = bitcast float* %58 to i8*
  %60 = zext i32 %57 to i64
  %min.iters.check74 = icmp ult i32 %57, 8
  br i1 %min.iters.check74, label %for.body9.preheader, label %vector.memcheck84

for.body9.preheader:                              ; preds = %middle.block72, %vector.memcheck84, %for.body9.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck84 ], [ 0, %for.body9.lr.ph ], [ %n.vec87, %middle.block72 ]
  %61 = or i64 %indvars.iv.ph, 1
  %62 = icmp ugt i64 %61, %60
  %umax = select i1 %62, i64 %61, i64 %60
  %63 = xor i64 %indvars.iv.ph, -1
  %64 = add nsw i64 %umax, %63
  %xtraiter = and i64 %umax, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body9.prol.loopexit, label %for.body9.prol

for.body9.prol:                                   ; preds = %for.body9.prol, %for.body9.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body9.prol ], [ %indvars.iv.ph, %for.body9.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body9.prol ], [ %xtraiter, %for.body9.preheader ]
  %add.ptr.i.prol = getelementptr inbounds float, float* %58, i64 %indvars.iv.prol
  %65 = load float, float* %add.ptr.i.prol, align 4, !tbaa !83
  %arrayidx12.prol = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv.prol
  %66 = load float, float* %arrayidx12.prol, align 4, !tbaa !83
  %add.prol = fadd float %65, %66
  store float %add.prol, float* %arrayidx12.prol, align 4, !tbaa !83
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body9.prol.loopexit, label %for.body9.prol, !llvm.loop !528

for.body9.prol.loopexit:                          ; preds = %for.body9.prol, %for.body9.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body9.preheader ], [ %indvars.iv.next.prol, %for.body9.prol ]
  %67 = icmp ult i64 %64, 3
  br i1 %67, label %for.cond.cleanup8.loopexit, label %for.body9

vector.memcheck84:                                ; preds = %for.body9.lr.ph
  %scevgep76 = getelementptr float, float* %resultSample0, i64 %60
  %scevgep78 = getelementptr float, float* %58, i64 %60
  %bound080 = icmp ugt float* %scevgep78, %resultSample0
  %bound181 = icmp ult float* %58, %scevgep76
  %found.conflict82 = and i1 %bound080, %bound181
  br i1 %found.conflict82, label %for.body9.preheader, label %vector.ph85

vector.ph85:                                      ; preds = %vector.memcheck84
  %n.vec87 = and i64 %60, 4294967288
  %68 = add nsw i64 %n.vec87, -8
  %69 = lshr exact i64 %68, 3
  %70 = add nuw nsw i64 %69, 1
  %xtraiter100 = and i64 %70, 1
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %middle.block72.unr-lcssa, label %vector.ph85.new

vector.ph85.new:                                  ; preds = %vector.ph85
  %unroll_iter = sub nuw nsw i64 %70, %xtraiter100
  br label %vector.body71

vector.body71:                                    ; preds = %vector.body71, %vector.ph85.new
  %index88 = phi i64 [ 0, %vector.ph85.new ], [ %index.next89.1, %vector.body71 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph85.new ], [ %niter.nsub.1, %vector.body71 ]
  %72 = getelementptr inbounds float, float* %58, i64 %index88
  %73 = bitcast float* %72 to <4 x float>*
  %wide.load96 = load <4 x float>, <4 x float>* %73, align 4, !tbaa !83, !alias.scope !529
  %74 = getelementptr inbounds float, float* %72, i64 4
  %75 = bitcast float* %74 to <4 x float>*
  %wide.load97 = load <4 x float>, <4 x float>* %75, align 4, !tbaa !83, !alias.scope !529
  %76 = getelementptr inbounds float, float* %resultSample0, i64 %index88
  %77 = bitcast float* %76 to <4 x float>*
  %wide.load98 = load <4 x float>, <4 x float>* %77, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %78 = getelementptr inbounds float, float* %76, i64 4
  %79 = bitcast float* %78 to <4 x float>*
  %wide.load99 = load <4 x float>, <4 x float>* %79, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %80 = fadd <4 x float> %wide.load96, %wide.load98
  %81 = fadd <4 x float> %wide.load97, %wide.load99
  %82 = bitcast float* %76 to <4 x float>*
  store <4 x float> %80, <4 x float>* %82, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %83 = bitcast float* %78 to <4 x float>*
  store <4 x float> %81, <4 x float>* %83, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %index.next89 = or i64 %index88, 8
  %84 = getelementptr inbounds float, float* %58, i64 %index.next89
  %85 = bitcast float* %84 to <4 x float>*
  %wide.load96.1 = load <4 x float>, <4 x float>* %85, align 4, !tbaa !83, !alias.scope !529
  %86 = getelementptr inbounds float, float* %84, i64 4
  %87 = bitcast float* %86 to <4 x float>*
  %wide.load97.1 = load <4 x float>, <4 x float>* %87, align 4, !tbaa !83, !alias.scope !529
  %88 = getelementptr inbounds float, float* %resultSample0, i64 %index.next89
  %89 = bitcast float* %88 to <4 x float>*
  %wide.load98.1 = load <4 x float>, <4 x float>* %89, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %90 = getelementptr inbounds float, float* %88, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  %wide.load99.1 = load <4 x float>, <4 x float>* %91, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %92 = fadd <4 x float> %wide.load96.1, %wide.load98.1
  %93 = fadd <4 x float> %wide.load97.1, %wide.load99.1
  %94 = bitcast float* %88 to <4 x float>*
  store <4 x float> %92, <4 x float>* %94, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %95 = bitcast float* %90 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %index.next89.1 = add i64 %index88, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block72.unr-lcssa, label %vector.body71, !llvm.loop !534

middle.block72.unr-lcssa:                         ; preds = %vector.body71, %vector.ph85
  %index88.unr = phi i64 [ 0, %vector.ph85 ], [ %index.next89.1, %vector.body71 ]
  %lcmp.mod101 = icmp eq i64 %xtraiter100, 0
  br i1 %lcmp.mod101, label %middle.block72, label %vector.body71.epil

vector.body71.epil:                               ; preds = %middle.block72.unr-lcssa
  %96 = getelementptr inbounds float, float* %58, i64 %index88.unr
  %97 = bitcast float* %96 to <4 x float>*
  %wide.load96.epil = load <4 x float>, <4 x float>* %97, align 4, !tbaa !83, !alias.scope !529
  %98 = getelementptr inbounds float, float* %96, i64 4
  %99 = bitcast float* %98 to <4 x float>*
  %wide.load97.epil = load <4 x float>, <4 x float>* %99, align 4, !tbaa !83, !alias.scope !529
  %100 = getelementptr inbounds float, float* %resultSample0, i64 %index88.unr
  %101 = bitcast float* %100 to <4 x float>*
  %wide.load98.epil = load <4 x float>, <4 x float>* %101, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %102 = getelementptr inbounds float, float* %100, i64 4
  %103 = bitcast float* %102 to <4 x float>*
  %wide.load99.epil = load <4 x float>, <4 x float>* %103, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %104 = fadd <4 x float> %wide.load96.epil, %wide.load98.epil
  %105 = fadd <4 x float> %wide.load97.epil, %wide.load99.epil
  %106 = bitcast float* %100 to <4 x float>*
  store <4 x float> %104, <4 x float>* %106, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  %107 = bitcast float* %102 to <4 x float>*
  store <4 x float> %105, <4 x float>* %107, align 4, !tbaa !83, !alias.scope !532, !noalias !529
  br label %middle.block72

middle.block72:                                   ; preds = %vector.body71.epil, %middle.block72.unr-lcssa
  %cmp.n91 = icmp eq i64 %n.vec87, %60
  br i1 %cmp.n91, label %for.cond.cleanup8.loopexit, label %for.body9.preheader

for.body:                                         ; preds = %for.body, %for.body.prol.loopexit
  %indvars.iv58 = phi i64 [ %indvars.iv.next59.3, %for.body ], [ %indvars.iv58.unr, %for.body.prol.loopexit ]
  %108 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52 = getelementptr inbounds float, float* %2, i64 %indvars.iv58
  %109 = load float, float* %add.ptr.i52, align 4, !tbaa !83
  %mul = fmul float %108, %109
  store float %mul, float* %add.ptr.i52, align 4, !tbaa !83
  %indvars.iv.next59 = add nuw nsw i64 %indvars.iv58, 1
  %110 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52.1 = getelementptr inbounds float, float* %2, i64 %indvars.iv.next59
  %111 = load float, float* %add.ptr.i52.1, align 4, !tbaa !83
  %mul.1 = fmul float %110, %111
  store float %mul.1, float* %add.ptr.i52.1, align 4, !tbaa !83
  %indvars.iv.next59.1 = add nuw nsw i64 %indvars.iv58, 2
  %112 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52.2 = getelementptr inbounds float, float* %2, i64 %indvars.iv.next59.1
  %113 = load float, float* %add.ptr.i52.2, align 4, !tbaa !83
  %mul.2 = fmul float %112, %113
  store float %mul.2, float* %add.ptr.i52.2, align 4, !tbaa !83
  %indvars.iv.next59.2 = add nuw nsw i64 %indvars.iv58, 3
  %114 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52.3 = getelementptr inbounds float, float* %2, i64 %indvars.iv.next59.2
  %115 = load float, float* %add.ptr.i52.3, align 4, !tbaa !83
  %mul.3 = fmul float %114, %115
  store float %mul.3, float* %add.ptr.i52.3, align 4, !tbaa !83
  %indvars.iv.next59.3 = add nuw nsw i64 %indvars.iv58, 4
  %cmp.3 = icmp ult i64 %indvars.iv.next59.3, %4
  br i1 %cmp.3, label %for.body, label %for.cond.cleanup, !prof !535, !llvm.loop !536

for.cond.cleanup8.loopexit:                       ; preds = %for.body9, %middle.block72, %for.body9.prol.loopexit
  %phitmp = zext i32 %57 to i64
  %phitmp65 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup.for.cond.cleanup8_crit_edge
  %116 = phi i8* [ %.pre61, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %59, %for.cond.cleanup8.loopexit ]
  %.lcssa = phi i64 [ 0, %for.cond.cleanup.for.cond.cleanup8_crit_edge ], [ %phitmp65, %for.cond.cleanup8.loopexit ]
  %117 = load i32, i32* %m_nBlockSize, align 8, !tbaa !337
  %conv21 = zext i32 %117 to i64
  %118 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i49 = getelementptr inbounds float, float* %118, i64 %conv21
  %119 = bitcast float* %add.ptr.i49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* nonnull align 4 %119, i64 %.lcssa, i1 false)
  %returnStruct = insertvalue %struct.out.overlap_left_fxp undef, i64 %bytes_resultSample0, 0
  ret %struct.out.overlap_left_fxp %returnStruct

for.body9:                                        ; preds = %for.body9, %for.body9.prol.loopexit
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body9 ], [ %indvars.iv.unr, %for.body9.prol.loopexit ]
  %add.ptr.i = getelementptr inbounds float, float* %58, i64 %indvars.iv
  %120 = load float, float* %add.ptr.i, align 4, !tbaa !83
  %arrayidx12 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv
  %121 = load float, float* %arrayidx12, align 4, !tbaa !83
  %add = fadd float %120, %121
  store float %add, float* %arrayidx12, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add.ptr.i.1 = getelementptr inbounds float, float* %58, i64 %indvars.iv.next
  %122 = load float, float* %add.ptr.i.1, align 4, !tbaa !83
  %arrayidx12.1 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv.next
  %123 = load float, float* %arrayidx12.1, align 4, !tbaa !83
  %add.1 = fadd float %122, %123
  store float %add.1, float* %arrayidx12.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %add.ptr.i.2 = getelementptr inbounds float, float* %58, i64 %indvars.iv.next.1
  %124 = load float, float* %add.ptr.i.2, align 4, !tbaa !83
  %arrayidx12.2 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv.next.1
  %125 = load float, float* %arrayidx12.2, align 4, !tbaa !83
  %add.2 = fadd float %124, %125
  store float %add.2, float* %arrayidx12.2, align 4, !tbaa !83
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %add.ptr.i.3 = getelementptr inbounds float, float* %58, i64 %indvars.iv.next.2
  %126 = load float, float* %add.ptr.i.3, align 4, !tbaa !83
  %arrayidx12.3 = getelementptr inbounds float, float* %resultSample0, i64 %indvars.iv.next.2
  %127 = load float, float* %arrayidx12.3, align 4, !tbaa !83
  %add.3 = fadd float %126, %127
  store float %add.3, float* %arrayidx12.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %cmp7.3 = icmp ult i64 %indvars.iv.next.3, %60
  br i1 %cmp7.3, label %for.body9, label %for.cond.cleanup8.loopexit, !prof !537, !llvm.loop !538
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperOverlap_left_fxp @wrapperOverlap_left_fxp_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float* in out %resultSample0, i64 %bytes_resultSample0) #7 !prof !103 {
entry:
  %overlap_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.overlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @overlap_left_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %overlap_left_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.output(i8* %overlap_left_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperOverlap_left_fxp undef
}

; Function Attrs: nounwind uwtable
define %struct.out.overlap_right_fxp @overlap_right_fxp_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float* in out %resultSample1, i64 %bytes_resultSample1) #7 personality i32 (...)* @__gxx_personality_v0 !prof !230 {
entry:
  %0 = bitcast float* %resultSample1 to i8*
  %m_nFFTSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 4
  %1 = load i32, i32* %m_nFFTSize, align 8, !tbaa !340
  %cmp55 = icmp eq i32 %1, 0
  br i1 %cmp55, label %entry.for.cond.cleanup_crit_edge, label %for.body.lr.ph, !prof !519

entry.for.cond.cleanup_crit_edge:                 ; preds = %entry
  %_M_start.i.phi.trans.insert = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %.phi.trans.insert = bitcast float** %_M_start.i.phi.trans.insert to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !116
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_fFFTScaler = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %_M_start.i51 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %2 = load float*, float** %_M_start.i51, align 8, !tbaa !116
  %3 = bitcast float* %2 to i8*
  %4 = zext i32 %1 to i64
  %min.iters.check = icmp ult i32 %1, 8
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

for.body.preheader:                               ; preds = %middle.block, %vector.memcheck, %for.body.lr.ph
  %indvars.iv57.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  %5 = or i64 %indvars.iv57.ph, 1
  %6 = icmp ugt i64 %5, %4
  %umax97 = select i1 %6, i64 %5, i64 %4
  %7 = xor i64 %indvars.iv57.ph, -1
  %8 = add nsw i64 %umax97, %7
  %xtraiter98 = and i64 %umax97, 3
  %lcmp.mod99 = icmp eq i64 %xtraiter98, 0
  br i1 %lcmp.mod99, label %for.body.prol.loopexit, label %for.body.prol

for.body.prol:                                    ; preds = %for.body.prol, %for.body.preheader
  %indvars.iv57.prol = phi i64 [ %indvars.iv.next58.prol, %for.body.prol ], [ %indvars.iv57.ph, %for.body.preheader ]
  %prol.iter100 = phi i64 [ %prol.iter100.sub, %for.body.prol ], [ %xtraiter98, %for.body.preheader ]
  %9 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52.prol = getelementptr inbounds float, float* %2, i64 %indvars.iv57.prol
  %10 = load float, float* %add.ptr.i52.prol, align 4, !tbaa !83
  %mul.prol = fmul float %9, %10
  store float %mul.prol, float* %add.ptr.i52.prol, align 4, !tbaa !83
  %indvars.iv.next58.prol = add nuw nsw i64 %indvars.iv57.prol, 1
  %prol.iter100.sub = add i64 %prol.iter100, -1
  %prol.iter100.cmp = icmp eq i64 %prol.iter100.sub, 0
  br i1 %prol.iter100.cmp, label %for.body.prol.loopexit, label %for.body.prol, !llvm.loop !539

for.body.prol.loopexit:                           ; preds = %for.body.prol, %for.body.preheader
  %indvars.iv57.unr = phi i64 [ %indvars.iv57.ph, %for.body.preheader ], [ %indvars.iv.next58.prol, %for.body.prol ]
  %11 = icmp ult i64 %8, 3
  br i1 %11, label %for.cond.cleanup, label %for.body

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr float, float* %2, i64 %4
  %scevgep62 = getelementptr %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 6
  %scevgep6263 = bitcast float* %scevgep62 to i8*
  %uglygep = getelementptr i8, i8* %scevgep6263, i64 1
  %bound0 = icmp ugt i8* %uglygep, %3
  %bound1 = icmp ult float* %m_fFFTScaler, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %4, 4294967288
  %12 = add nsw i64 %n.vec, -8
  %13 = lshr exact i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %xtraiter101 = and i64 %14, 1
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %middle.block.unr-lcssa, label %vector.ph.new

vector.ph.new:                                    ; preds = %vector.ph
  %unroll_iter103 = sub nuw nsw i64 %14, %xtraiter101
  %16 = load float, float* %m_fFFTScaler, align 8, !tbaa !342, !alias.scope !540
  %17 = insertelement <4 x float> undef, float %16, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> undef, <4 x i32> zeroinitializer
  %19 = insertelement <4 x float> undef, float %16, i32 0
  %20 = shufflevector <4 x float> %19, <4 x float> undef, <4 x i32> zeroinitializer
  %21 = load float, float* %m_fFFTScaler, align 8, !tbaa !342, !alias.scope !540
  %22 = insertelement <4 x float> undef, float %21, i32 0
  %23 = shufflevector <4 x float> %22, <4 x float> undef, <4 x i32> zeroinitializer
  %24 = insertelement <4 x float> undef, float %21, i32 0
  %25 = shufflevector <4 x float> %24, <4 x float> undef, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph.new
  %index = phi i64 [ 0, %vector.ph.new ], [ %index.next.1, %vector.body ]
  %niter104 = phi i64 [ %unroll_iter103, %vector.ph.new ], [ %niter104.nsub.1, %vector.body ]
  %26 = getelementptr inbounds float, float* %2, i64 %index
  %27 = bitcast float* %26 to <4 x float>*
  %wide.load = load <4 x float>, <4 x float>* %27, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %28 = getelementptr inbounds float, float* %26, i64 4
  %29 = bitcast float* %28 to <4 x float>*
  %wide.load65 = load <4 x float>, <4 x float>* %29, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %30 = fmul <4 x float> %18, %wide.load
  %31 = fmul <4 x float> %20, %wide.load65
  %32 = bitcast float* %26 to <4 x float>*
  store <4 x float> %30, <4 x float>* %32, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %33 = bitcast float* %28 to <4 x float>*
  store <4 x float> %31, <4 x float>* %33, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %index.next = or i64 %index, 8
  %34 = getelementptr inbounds float, float* %2, i64 %index.next
  %35 = bitcast float* %34 to <4 x float>*
  %wide.load.1 = load <4 x float>, <4 x float>* %35, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %36 = getelementptr inbounds float, float* %34, i64 4
  %37 = bitcast float* %36 to <4 x float>*
  %wide.load65.1 = load <4 x float>, <4 x float>* %37, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %38 = fmul <4 x float> %23, %wide.load.1
  %39 = fmul <4 x float> %25, %wide.load65.1
  %40 = bitcast float* %34 to <4 x float>*
  store <4 x float> %38, <4 x float>* %40, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %41 = bitcast float* %36 to <4 x float>*
  store <4 x float> %39, <4 x float>* %41, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %index.next.1 = add i64 %index, 16
  %niter104.nsub.1 = add i64 %niter104, -2
  %niter104.ncmp.1 = icmp eq i64 %niter104.nsub.1, 0
  br i1 %niter104.ncmp.1, label %middle.block.unr-lcssa, label %vector.body, !llvm.loop !545

middle.block.unr-lcssa:                           ; preds = %vector.body, %vector.ph
  %index.unr = phi i64 [ 0, %vector.ph ], [ %index.next.1, %vector.body ]
  %lcmp.mod102 = icmp eq i64 %xtraiter101, 0
  br i1 %lcmp.mod102, label %middle.block, label %vector.body.epil

vector.body.epil:                                 ; preds = %middle.block.unr-lcssa
  %42 = load float, float* %m_fFFTScaler, align 8, !tbaa !342, !alias.scope !540
  %43 = insertelement <4 x float> undef, float %42, i32 0
  %44 = shufflevector <4 x float> %43, <4 x float> undef, <4 x i32> zeroinitializer
  %45 = insertelement <4 x float> undef, float %42, i32 0
  %46 = shufflevector <4 x float> %45, <4 x float> undef, <4 x i32> zeroinitializer
  %47 = getelementptr inbounds float, float* %2, i64 %index.unr
  %48 = bitcast float* %47 to <4 x float>*
  %wide.load.epil = load <4 x float>, <4 x float>* %48, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %49 = getelementptr inbounds float, float* %47, i64 4
  %50 = bitcast float* %49 to <4 x float>*
  %wide.load65.epil = load <4 x float>, <4 x float>* %50, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %51 = fmul <4 x float> %44, %wide.load.epil
  %52 = fmul <4 x float> %46, %wide.load65.epil
  %53 = bitcast float* %47 to <4 x float>*
  store <4 x float> %51, <4 x float>* %53, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  %54 = bitcast float* %49 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 4, !tbaa !83, !alias.scope !543, !noalias !540
  br label %middle.block

middle.block:                                     ; preds = %vector.body.epil, %middle.block.unr-lcssa
  %cmp.n = icmp eq i64 %n.vec, %4
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %for.body.prol.loopexit, %entry.for.cond.cleanup_crit_edge
  %55 = phi i8* [ %.pre, %entry.for.cond.cleanup_crit_edge ], [ %3, %middle.block ], [ %3, %for.body ], [ %3, %for.body.prol.loopexit ]
  %_M_start.i = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 12, i32 0, i32 0, i32 0
  %m_nBlockSize = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 2
  %56 = load i32, i32* %m_nBlockSize, align 8, !tbaa !337
  %conv3 = zext i32 %56 to i64
  %mul4 = shl nuw nsw i64 %conv3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %0, i8* align 4 %55, i64 %mul4, i1 false)
  %m_nOverlapLength = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 7
  %57 = load i32, i32* %m_nOverlapLength, align 4, !tbaa !338
  %cmp753 = icmp eq i32 %57, 0
  br i1 %cmp753, label %for.cond.cleanup8, label %for.body9.lr.ph, !prof !527

for.body9.lr.ph:                                  ; preds = %for.cond.cleanup
  %_M_start.i47 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 0, i32 0, i32 0, i32 0
  %58 = load float*, float** %_M_start.i47, align 8, !tbaa !116
  %59 = zext i32 %57 to i64
  %min.iters.check69 = icmp ult i32 %57, 8
  br i1 %min.iters.check69, label %for.body9.preheader, label %vector.memcheck79

for.body9.preheader:                              ; preds = %middle.block67, %vector.memcheck79, %for.body9.lr.ph
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck79 ], [ 0, %for.body9.lr.ph ], [ %n.vec82, %middle.block67 ]
  %60 = or i64 %indvars.iv.ph, 1
  %61 = icmp ugt i64 %60, %59
  %umax = select i1 %61, i64 %60, i64 %59
  %62 = xor i64 %indvars.iv.ph, -1
  %63 = add nsw i64 %umax, %62
  %xtraiter = and i64 %umax, 3
  %lcmp.mod = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod, label %for.body9.prol.loopexit, label %for.body9.prol

for.body9.prol:                                   ; preds = %for.body9.prol, %for.body9.preheader
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body9.prol ], [ %indvars.iv.ph, %for.body9.preheader ]
  %prol.iter = phi i64 [ %prol.iter.sub, %for.body9.prol ], [ %xtraiter, %for.body9.preheader ]
  %add.ptr.i.prol = getelementptr inbounds float, float* %58, i64 %indvars.iv.prol
  %64 = load float, float* %add.ptr.i.prol, align 4, !tbaa !83
  %arrayidx12.prol = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv.prol
  %65 = load float, float* %arrayidx12.prol, align 4, !tbaa !83
  %add.prol = fadd float %64, %65
  store float %add.prol, float* %arrayidx12.prol, align 4, !tbaa !83
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.sub = add i64 %prol.iter, -1
  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.body9.prol.loopexit, label %for.body9.prol, !llvm.loop !546

for.body9.prol.loopexit:                          ; preds = %for.body9.prol, %for.body9.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body9.preheader ], [ %indvars.iv.next.prol, %for.body9.prol ]
  %66 = icmp ult i64 %63, 3
  br i1 %66, label %for.cond.cleanup8.loopexit, label %for.body9

vector.memcheck79:                                ; preds = %for.body9.lr.ph
  %scevgep71 = getelementptr float, float* %resultSample1, i64 %59
  %scevgep73 = getelementptr float, float* %58, i64 %59
  %bound075 = icmp ugt float* %scevgep73, %resultSample1
  %bound176 = icmp ult float* %58, %scevgep71
  %found.conflict77 = and i1 %bound075, %bound176
  br i1 %found.conflict77, label %for.body9.preheader, label %vector.ph80

vector.ph80:                                      ; preds = %vector.memcheck79
  %n.vec82 = and i64 %59, 4294967288
  %67 = add nsw i64 %n.vec82, -8
  %68 = lshr exact i64 %67, 3
  %69 = add nuw nsw i64 %68, 1
  %xtraiter95 = and i64 %69, 1
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %middle.block67.unr-lcssa, label %vector.ph80.new

vector.ph80.new:                                  ; preds = %vector.ph80
  %unroll_iter = sub nuw nsw i64 %69, %xtraiter95
  br label %vector.body66

vector.body66:                                    ; preds = %vector.body66, %vector.ph80.new
  %index83 = phi i64 [ 0, %vector.ph80.new ], [ %index.next84.1, %vector.body66 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph80.new ], [ %niter.nsub.1, %vector.body66 ]
  %71 = getelementptr inbounds float, float* %58, i64 %index83
  %72 = bitcast float* %71 to <4 x float>*
  %wide.load91 = load <4 x float>, <4 x float>* %72, align 4, !tbaa !83, !alias.scope !547
  %73 = getelementptr inbounds float, float* %71, i64 4
  %74 = bitcast float* %73 to <4 x float>*
  %wide.load92 = load <4 x float>, <4 x float>* %74, align 4, !tbaa !83, !alias.scope !547
  %75 = getelementptr inbounds float, float* %resultSample1, i64 %index83
  %76 = bitcast float* %75 to <4 x float>*
  %wide.load93 = load <4 x float>, <4 x float>* %76, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %77 = getelementptr inbounds float, float* %75, i64 4
  %78 = bitcast float* %77 to <4 x float>*
  %wide.load94 = load <4 x float>, <4 x float>* %78, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %79 = fadd <4 x float> %wide.load91, %wide.load93
  %80 = fadd <4 x float> %wide.load92, %wide.load94
  %81 = bitcast float* %75 to <4 x float>*
  store <4 x float> %79, <4 x float>* %81, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %82 = bitcast float* %77 to <4 x float>*
  store <4 x float> %80, <4 x float>* %82, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %index.next84 = or i64 %index83, 8
  %83 = getelementptr inbounds float, float* %58, i64 %index.next84
  %84 = bitcast float* %83 to <4 x float>*
  %wide.load91.1 = load <4 x float>, <4 x float>* %84, align 4, !tbaa !83, !alias.scope !547
  %85 = getelementptr inbounds float, float* %83, i64 4
  %86 = bitcast float* %85 to <4 x float>*
  %wide.load92.1 = load <4 x float>, <4 x float>* %86, align 4, !tbaa !83, !alias.scope !547
  %87 = getelementptr inbounds float, float* %resultSample1, i64 %index.next84
  %88 = bitcast float* %87 to <4 x float>*
  %wide.load93.1 = load <4 x float>, <4 x float>* %88, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %89 = getelementptr inbounds float, float* %87, i64 4
  %90 = bitcast float* %89 to <4 x float>*
  %wide.load94.1 = load <4 x float>, <4 x float>* %90, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %91 = fadd <4 x float> %wide.load91.1, %wide.load93.1
  %92 = fadd <4 x float> %wide.load92.1, %wide.load94.1
  %93 = bitcast float* %87 to <4 x float>*
  store <4 x float> %91, <4 x float>* %93, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %94 = bitcast float* %89 to <4 x float>*
  store <4 x float> %92, <4 x float>* %94, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %index.next84.1 = add i64 %index83, 16
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block67.unr-lcssa, label %vector.body66, !llvm.loop !552

middle.block67.unr-lcssa:                         ; preds = %vector.body66, %vector.ph80
  %index83.unr = phi i64 [ 0, %vector.ph80 ], [ %index.next84.1, %vector.body66 ]
  %lcmp.mod96 = icmp eq i64 %xtraiter95, 0
  br i1 %lcmp.mod96, label %middle.block67, label %vector.body66.epil

vector.body66.epil:                               ; preds = %middle.block67.unr-lcssa
  %95 = getelementptr inbounds float, float* %58, i64 %index83.unr
  %96 = bitcast float* %95 to <4 x float>*
  %wide.load91.epil = load <4 x float>, <4 x float>* %96, align 4, !tbaa !83, !alias.scope !547
  %97 = getelementptr inbounds float, float* %95, i64 4
  %98 = bitcast float* %97 to <4 x float>*
  %wide.load92.epil = load <4 x float>, <4 x float>* %98, align 4, !tbaa !83, !alias.scope !547
  %99 = getelementptr inbounds float, float* %resultSample1, i64 %index83.unr
  %100 = bitcast float* %99 to <4 x float>*
  %wide.load93.epil = load <4 x float>, <4 x float>* %100, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %101 = getelementptr inbounds float, float* %99, i64 4
  %102 = bitcast float* %101 to <4 x float>*
  %wide.load94.epil = load <4 x float>, <4 x float>* %102, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %103 = fadd <4 x float> %wide.load91.epil, %wide.load93.epil
  %104 = fadd <4 x float> %wide.load92.epil, %wide.load94.epil
  %105 = bitcast float* %99 to <4 x float>*
  store <4 x float> %103, <4 x float>* %105, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  %106 = bitcast float* %101 to <4 x float>*
  store <4 x float> %104, <4 x float>* %106, align 4, !tbaa !83, !alias.scope !550, !noalias !547
  br label %middle.block67

middle.block67:                                   ; preds = %vector.body66.epil, %middle.block67.unr-lcssa
  %cmp.n86 = icmp eq i64 %n.vec82, %59
  br i1 %cmp.n86, label %for.cond.cleanup8.loopexit, label %for.body9.preheader

for.body:                                         ; preds = %for.body, %for.body.prol.loopexit
  %indvars.iv57 = phi i64 [ %indvars.iv.next58.3, %for.body ], [ %indvars.iv57.unr, %for.body.prol.loopexit ]
  %107 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52 = getelementptr inbounds float, float* %2, i64 %indvars.iv57
  %108 = load float, float* %add.ptr.i52, align 4, !tbaa !83
  %mul = fmul float %107, %108
  store float %mul, float* %add.ptr.i52, align 4, !tbaa !83
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %109 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52.1 = getelementptr inbounds float, float* %2, i64 %indvars.iv.next58
  %110 = load float, float* %add.ptr.i52.1, align 4, !tbaa !83
  %mul.1 = fmul float %109, %110
  store float %mul.1, float* %add.ptr.i52.1, align 4, !tbaa !83
  %indvars.iv.next58.1 = add nuw nsw i64 %indvars.iv57, 2
  %111 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52.2 = getelementptr inbounds float, float* %2, i64 %indvars.iv.next58.1
  %112 = load float, float* %add.ptr.i52.2, align 4, !tbaa !83
  %mul.2 = fmul float %111, %112
  store float %mul.2, float* %add.ptr.i52.2, align 4, !tbaa !83
  %indvars.iv.next58.2 = add nuw nsw i64 %indvars.iv57, 3
  %113 = load float, float* %m_fFFTScaler, align 8, !tbaa !342
  %add.ptr.i52.3 = getelementptr inbounds float, float* %2, i64 %indvars.iv.next58.2
  %114 = load float, float* %add.ptr.i52.3, align 4, !tbaa !83
  %mul.3 = fmul float %113, %114
  store float %mul.3, float* %add.ptr.i52.3, align 4, !tbaa !83
  %indvars.iv.next58.3 = add nuw nsw i64 %indvars.iv57, 4
  %cmp.3 = icmp ult i64 %indvars.iv.next58.3, %4
  br i1 %cmp.3, label %for.body, label %for.cond.cleanup, !prof !535, !llvm.loop !553

for.cond.cleanup8.loopexit:                       ; preds = %for.body9, %middle.block67, %for.body9.prol.loopexit
  %phitmp = zext i32 %57 to i64
  %phitmp60 = shl nuw nsw i64 %phitmp, 2
  br label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond.cleanup8.loopexit, %for.cond.cleanup
  %.lcssa = phi i64 [ %phitmp60, %for.cond.cleanup8.loopexit ], [ 0, %for.cond.cleanup ]
  %_M_start.i50 = getelementptr inbounds %class.CAmbisonicBinauralizer, %class.CAmbisonicBinauralizer* %decoder, i64 0, i32 15, i64 1, i32 0, i32 0, i32 0
  %115 = bitcast float** %_M_start.i50 to i8**
  %116 = load i8*, i8** %115, align 8, !tbaa !116
  %117 = load i32, i32* %m_nBlockSize, align 8, !tbaa !337
  %conv21 = zext i32 %117 to i64
  %118 = load float*, float** %_M_start.i, align 8, !tbaa !116
  %add.ptr.i49 = getelementptr inbounds float, float* %118, i64 %conv21
  %119 = bitcast float* %add.ptr.i49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %116, i8* nonnull align 4 %119, i64 %.lcssa, i1 false)
  %returnStruct = insertvalue %struct.out.overlap_right_fxp undef, i64 %bytes_resultSample1, 0
  ret %struct.out.overlap_right_fxp %returnStruct

for.body9:                                        ; preds = %for.body9, %for.body9.prol.loopexit
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body9 ], [ %indvars.iv.unr, %for.body9.prol.loopexit ]
  %add.ptr.i = getelementptr inbounds float, float* %58, i64 %indvars.iv
  %120 = load float, float* %add.ptr.i, align 4, !tbaa !83
  %arrayidx12 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv
  %121 = load float, float* %arrayidx12, align 4, !tbaa !83
  %add = fadd float %120, %121
  store float %add, float* %arrayidx12, align 4, !tbaa !83
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %add.ptr.i.1 = getelementptr inbounds float, float* %58, i64 %indvars.iv.next
  %122 = load float, float* %add.ptr.i.1, align 4, !tbaa !83
  %arrayidx12.1 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv.next
  %123 = load float, float* %arrayidx12.1, align 4, !tbaa !83
  %add.1 = fadd float %122, %123
  store float %add.1, float* %arrayidx12.1, align 4, !tbaa !83
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %add.ptr.i.2 = getelementptr inbounds float, float* %58, i64 %indvars.iv.next.1
  %124 = load float, float* %add.ptr.i.2, align 4, !tbaa !83
  %arrayidx12.2 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv.next.1
  %125 = load float, float* %arrayidx12.2, align 4, !tbaa !83
  %add.2 = fadd float %124, %125
  store float %add.2, float* %arrayidx12.2, align 4, !tbaa !83
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %add.ptr.i.3 = getelementptr inbounds float, float* %58, i64 %indvars.iv.next.2
  %126 = load float, float* %add.ptr.i.3, align 4, !tbaa !83
  %arrayidx12.3 = getelementptr inbounds float, float* %resultSample1, i64 %indvars.iv.next.2
  %127 = load float, float* %arrayidx12.3, align 4, !tbaa !83
  %add.3 = fadd float %126, %127
  store float %add.3, float* %arrayidx12.3, align 4, !tbaa !83
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %cmp7.3 = icmp ult i64 %indvars.iv.next.3, %59
  br i1 %cmp7.3, label %for.body9, label %for.cond.cleanup8.loopexit, !prof !537, !llvm.loop !554
}

; Function Attrs: nounwind uwtable
define %struct.out.wrapperOverlap_right_fxp @wrapperOverlap_right_fxp_cloned(%class.CAmbisonicBinauralizer* in %decoder, i64 %bytes_decoder, float* in out %resultSample1, i64 %bytes_resultSample1) #7 !prof !103 {
entry:
  %overlap_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.overlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @overlap_right_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %overlap_right_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.output(i8* %overlap_right_fxp_cloned.node, i32 0, i32 0, i1 false)
  ret %struct.out.wrapperOverlap_right_fxp undef
}

; Function Attrs: nounwind
declare i8* @llvm.hpvm.createEdge(i8*, i8*, i1, i32, i32, i1) #24

; Function Attrs: nounwind
declare void @llvm.hpvm.init() #24

; Function Attrs: nounwind
declare void @llvm.hpvm.cleanup() #24

; Function Attrs: nounwind
declare i8* @llvm.hpvm.launch(i8*, i8*, i1) #24

; Function Attrs: nounwind uwtable
define %emptyStruct @audioDecoding_cloned(%class.CAmbisonicProcessor* in %rotator, i64 %bytes_rotator, %class.CBFormat* in out %sumBF, i64 %bytes_sumBF, %class.CAmbisonicZoomer* in out %zoomer, i64 %bytes_zoomer, %class.CAmbisonicBinauralizer* in out %decoder0, i64 %bytes_decoder0, float* in out %resultSample0, i64 %bytes_resultSample0, i32 %nSample, float** nocapture readnone %channelpart1, i64 %bytes_channelpart1, float** nocapture readnone %channelpart2, i64 %bytes_channelpart2, float** nocapture readnone %channelpart3, i64 %bytes_channelpart3, %class.CAmbisonicBinauralizer* in out %decoder1, i64 %bytes_decoder1, float* in out %resultSample1, i64 %bytes_resultSample1) #7 !prof !103 {
entry:
  %wrapperRotatorSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* @wrapperRotatorSet_fxp_cloned to i8*))
  %wrapperPsychoFilter_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @wrapperPsychoFilter_fxp_cloned to i8*))
  %wrapperRotateOrder1_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder1_fxp_cloned to i8*))
  %wrapperRotateOrder2_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder2_fxp_cloned to i8*))
  %wrapperRotateOrder3_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder3_fxp_cloned to i8*))
  %wrapperZoomSet_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64)* @wrapperZoomSet_fxp_cloned to i8*))
  %wrapperZoomProcess_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @wrapperZoomProcess_fxp_cloned to i8*))
  %wrapperSetAndFFT_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperSetAndFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @wrapperSetAndFFT_left_fxp_cloned to i8*))
  %wrapperSetAndFFT_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperSetAndFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @wrapperSetAndFFT_right_fxp_cloned to i8*))
  %wrapperFIR_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperFIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperFIR_left_fxp_cloned to i8*))
  %wrapperFIR_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperFIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperFIR_right_fxp_cloned to i8*))
  %wrapperIFFT_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperIFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperIFFT_left_fxp_cloned to i8*))
  %wrapperIFFT_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperIFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperIFFT_right_fxp_cloned to i8*))
  %wrapperOverlap_left_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperOverlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @wrapperOverlap_left_fxp_cloned to i8*))
  %wrapperOverlap_right_fxp_cloned.node = call i8* @llvm.hpvm.createNode(i8* bitcast (%struct.out.wrapperOverlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @wrapperOverlap_right_fxp_cloned to i8*))
  call void @llvm.hpvm.bind.input(i8* %wrapperRotatorSet_fxp_cloned.node, i32 0, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotatorSet_fxp_cloned.node, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 0, i32 0, i1 false)
  %output = call i8* @llvm.hpvm.createEdge(i8* %wrapperRotatorSet_fxp_cloned.node, i8* %wrapperPsychoFilter_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 2, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 10, i32 4, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 11, i32 5, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 12, i32 6, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 13, i32 7, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 14, i32 8, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 15, i32 9, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperPsychoFilter_fxp_cloned.node, i32 16, i32 10, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder1_fxp_cloned.node, i32 0, i32 0, i1 false)
  %output1 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder1_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder1_fxp_cloned.node, i32 10, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder1_fxp_cloned.node, i32 11, i32 3, i1 false)
  %output2 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder1_fxp_cloned.node, i1 true, i32 4, i32 4, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder2_fxp_cloned.node, i32 0, i32 0, i1 false)
  %output3 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder2_fxp_cloned.node, i1 true, i32 1, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder2_fxp_cloned.node, i32 10, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder2_fxp_cloned.node, i32 13, i32 3, i1 false)
  %output4 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder2_fxp_cloned.node, i1 true, i32 5, i32 4, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder3_fxp_cloned.node, i32 0, i32 0, i1 false)
  %output5 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder3_fxp_cloned.node, i1 true, i32 2, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder3_fxp_cloned.node, i32 10, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperRotateOrder3_fxp_cloned.node, i32 15, i32 3, i1 false)
  %output6 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperRotateOrder3_fxp_cloned.node, i1 true, i32 6, i32 4, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomSet_fxp_cloned.node, i32 4, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomSet_fxp_cloned.node, i32 5, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 4, i32 0, i1 false)
  %output7 = call i8* @llvm.hpvm.createEdge(i8* %wrapperZoomSet_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 2, i32 2, i1 false)
  %output8 = call i8* @llvm.hpvm.createEdge(i8* %wrapperPsychoFilter_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 3, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 10, i32 4, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 11, i32 5, i1 false)
  %output9 = call i8* @llvm.hpvm.createEdge(i8* %wrapperRotateOrder1_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 0, i32 6, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 13, i32 7, i1 false)
  %output10 = call i8* @llvm.hpvm.createEdge(i8* %wrapperRotateOrder2_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 0, i32 8, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperZoomProcess_fxp_cloned.node, i32 15, i32 9, i1 false)
  %output11 = call i8* @llvm.hpvm.createEdge(i8* %wrapperRotateOrder3_fxp_cloned.node, i8* %wrapperZoomProcess_fxp_cloned.node, i1 true, i32 0, i32 10, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperSetAndFFT_left_fxp_cloned.node, i32 6, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperSetAndFFT_left_fxp_cloned.node, i32 7, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperSetAndFFT_left_fxp_cloned.node, i32 2, i32 2, i1 false)
  %output12 = call i8* @llvm.hpvm.createEdge(i8* %wrapperZoomProcess_fxp_cloned.node, i8* %wrapperSetAndFFT_left_fxp_cloned.node, i1 true, i32 0, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperSetAndFFT_right_fxp_cloned.node, i32 17, i32 0, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperSetAndFFT_right_fxp_cloned.node, i32 18, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperSetAndFFT_right_fxp_cloned.node, i32 2, i32 2, i1 false)
  %output13 = call i8* @llvm.hpvm.createEdge(i8* %wrapperZoomProcess_fxp_cloned.node, i8* %wrapperSetAndFFT_right_fxp_cloned.node, i1 true, i32 1, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperFIR_left_fxp_cloned.node, i32 6, i32 0, i1 false)
  %output14 = call i8* @llvm.hpvm.createEdge(i8* %wrapperSetAndFFT_left_fxp_cloned.node, i8* %wrapperFIR_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperFIR_right_fxp_cloned.node, i32 17, i32 0, i1 false)
  %output15 = call i8* @llvm.hpvm.createEdge(i8* %wrapperSetAndFFT_right_fxp_cloned.node, i8* %wrapperFIR_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperIFFT_left_fxp_cloned.node, i32 6, i32 0, i1 false)
  %output16 = call i8* @llvm.hpvm.createEdge(i8* %wrapperFIR_left_fxp_cloned.node, i8* %wrapperIFFT_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperIFFT_right_fxp_cloned.node, i32 17, i32 0, i1 false)
  %output17 = call i8* @llvm.hpvm.createEdge(i8* %wrapperFIR_right_fxp_cloned.node, i8* %wrapperIFFT_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_left_fxp_cloned.node, i32 6, i32 0, i1 false)
  %output18 = call i8* @llvm.hpvm.createEdge(i8* %wrapperIFFT_left_fxp_cloned.node, i8* %wrapperOverlap_left_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_left_fxp_cloned.node, i32 8, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_left_fxp_cloned.node, i32 9, i32 3, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_right_fxp_cloned.node, i32 17, i32 0, i1 false)
  %output19 = call i8* @llvm.hpvm.createEdge(i8* %wrapperIFFT_right_fxp_cloned.node, i8* %wrapperOverlap_right_fxp_cloned.node, i1 true, i32 0, i32 1, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_right_fxp_cloned.node, i32 19, i32 2, i1 false)
  call void @llvm.hpvm.bind.input(i8* %wrapperOverlap_right_fxp_cloned.node, i32 20, i32 3, i1 false)
  ret %emptyStruct undef
}

; Function Attrs: nounwind
declare void @llvm.hpvm.wait(i8*) #24

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { inlinehint uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { noinline noreturn nounwind }
attributes #20 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #21 = { norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "instrument-function-entry-inlined"="mcount" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #22 = { cold noreturn nounwind }
attributes #23 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #24 = { nounwind }
attributes #25 = { builtin }
attributes #26 = { builtin nounwind }
attributes #27 = { noreturn nounwind }
attributes #28 = { noreturn }

!llvm.module.flags = !{!0, !27, !28}
!llvm.ident = !{!29}
!hpvm_hint_cpu = !{!30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60}
!hpvm_hint_gpu = !{}
!hpvm_hint_cpu_gpu = !{}

!0 = !{i32 1, !"ProfileSummary", !1}
!1 = !{!2, !3, !4, !5, !6, !7, !8, !9}
!2 = !{!"ProfileFormat", !"InstrProf"}
!3 = !{!"TotalCount", i64 3226122070}
!4 = !{!"MaxCount", i64 295264640}
!5 = !{!"MaxInternalCount", i64 90782520}
!6 = !{!"MaxFunctionCount", i64 295264640}
!7 = !{!"NumCounts", i64 1015}
!8 = !{!"NumFunctions", i64 617}
!9 = !{!"DetailedSummary", !10}
!10 = !{!11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26}
!11 = !{i32 10000, i64 295264640, i32 5}
!12 = !{i32 100000, i64 295264640, i32 5}
!13 = !{i32 200000, i64 295264640, i32 5}
!14 = !{i32 300000, i64 295264640, i32 5}
!15 = !{i32 400000, i64 295264640, i32 5}
!16 = !{i32 500000, i64 295200000, i32 6}
!17 = !{i32 600000, i64 131201280, i32 8}
!18 = !{i32 700000, i64 81538720, i32 15}
!19 = !{i32 800000, i64 81538720, i32 15}
!20 = !{i32 900000, i64 38917040, i32 22}
!21 = !{i32 950000, i64 24924160, i32 27}
!22 = !{i32 990000, i64 6144000, i32 36}
!23 = !{i32 999000, i64 1024000, i32 48}
!24 = !{i32 999900, i64 6420, i32 122}
!25 = !{i32 999990, i64 640, i32 265}
!26 = !{i32 999999, i64 40, i32 489}
!27 = !{i32 1, !"wchar_size", i32 4}
!28 = !{i32 7, !"PIC Level", i32 2}
!29 = !{!"clang version 9.0.0 (https://gitlab.engr.illinois.edu/llvm/hpvm.git 3225631ba3a85980f35c4e43e6614e9e19081a73)"}
!30 = !{%struct.out.rotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* @rotatorSet_fxp_cloned}
!31 = !{%struct.out.wrapperRotatorSet_fxp (%class.CAmbisonicProcessor*, i64)* @wrapperRotatorSet_fxp_cloned}
!32 = !{%struct.out.psychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @psychoFilter_fxp_cloned}
!33 = !{%struct.out.wrapperPsychoFilter_fxp (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @wrapperPsychoFilter_fxp_cloned}
!34 = !{%struct.out.rotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder1_fxp_cloned}
!35 = !{%struct.out.wrapperRotateOrder1_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder1_fxp_cloned}
!36 = !{%struct.out.rotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder2_fxp_cloned}
!37 = !{%struct.out.wrapperRotateOrder2_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder2_fxp_cloned}
!38 = !{%struct.out.rotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @rotateOrder3_fxp_cloned}
!39 = !{%struct.out.wrapperRotateOrder3_fxp (%class.CAmbisonicProcessor*, i64, i32, float**, i64)* @wrapperRotateOrder3_fxp_cloned}
!40 = !{%struct.out.zoomSet_fxp (%class.CAmbisonicZoomer*, i64)* @zoomSet_fxp_cloned}
!41 = !{%struct.out.wrapperZoomSet_fxp (%class.CAmbisonicZoomer*, i64)* @wrapperZoomSet_fxp_cloned}
!42 = !{%struct.out.zoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @zoomProcess_fxp_cloned}
!43 = !{%struct.out.wrapperZoomProcess_fxp (%class.CAmbisonicZoomer*, i64, %class.CBFormat*, i64, i32, float**, i64, float**, i64, float**, i64)* @wrapperZoomProcess_fxp_cloned}
!44 = !{%struct.out.setAndFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @setAndFFT_left_fxp_cloned}
!45 = !{%struct.out.wrapperSetAndFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @wrapperSetAndFFT_left_fxp_cloned}
!46 = !{%struct.out.setAndFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @setAndFFT_right_fxp_cloned}
!47 = !{%struct.out.wrapperSetAndFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64, %class.CBFormat*, i64)* @wrapperSetAndFFT_right_fxp_cloned}
!48 = !{%struct.out.FIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @FIR_left_fxp_cloned}
!49 = !{%struct.out.wrapperFIR_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperFIR_left_fxp_cloned}
!50 = !{%struct.out.FIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @FIR_right_fxp_cloned}
!51 = !{%struct.out.wrapperFIR_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperFIR_right_fxp_cloned}
!52 = !{%struct.out.IFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @IFFT_left_fxp_cloned}
!53 = !{%struct.out.wrapperIFFT_left_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperIFFT_left_fxp_cloned}
!54 = !{%struct.out.IFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @IFFT_right_fxp_cloned}
!55 = !{%struct.out.wrapperIFFT_right_fxp (%class.CAmbisonicBinauralizer*, i64)* @wrapperIFFT_right_fxp_cloned}
!56 = !{%struct.out.overlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @overlap_left_fxp_cloned}
!57 = !{%struct.out.wrapperOverlap_left_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @wrapperOverlap_left_fxp_cloned}
!58 = !{%struct.out.overlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @overlap_right_fxp_cloned}
!59 = !{%struct.out.wrapperOverlap_right_fxp (%class.CAmbisonicBinauralizer*, i64, float*, i64)* @wrapperOverlap_right_fxp_cloned}
!60 = !{%emptyStruct (%class.CAmbisonicProcessor*, i64, %class.CBFormat*, i64, %class.CAmbisonicZoomer*, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64, i32, float**, i64, float**, i64, float**, i64, %class.CAmbisonicBinauralizer*, i64, float*, i64)* @audioDecoding_cloned}
!61 = !{!"function_entry_count", i64 20}
!62 = !{!63, !64, i64 8}
!63 = !{!"_ZTS4HRTF", !64, i64 8, !64, i64 12}
!64 = !{!"int", !65, i64 0}
!65 = !{!"omnipotent char", !66, i64 0}
!66 = !{!"Simple C++ TBAA"}
!67 = !{!63, !64, i64 12}
!68 = !{!69, !69, i64 0}
!69 = !{!"vtable pointer", !66, i64 0}
!70 = !{!"function_entry_count", i64 6400}
!71 = !{!"branch_weights", i32 1, i32 6401}
!72 = !{!64, !64, i64 0}
!73 = !{!"branch_weights", i32 1, i32 12801}
!74 = !{!"branch_weights", i32 0, i32 -2147483648}
!75 = !{!"branch_weights", i32 6401, i32 896001}
!76 = !{!77, !77, i64 0}
!77 = !{!"any pointer", !65, i64 0}
!78 = !{!79, !79, i64 0}
!79 = !{!"short", !65, i64 0}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84, !84, i64 0}
!84 = !{!"float", !65, i64 0}
!85 = !{!86}
!86 = distinct !{!86, !82}
!87 = !{!88}
!88 = distinct !{!88, !82}
!89 = !{!90}
!90 = distinct !{!90, !82}
!91 = distinct !{!91, !92}
!92 = !{!"llvm.loop.isvectorized", i32 1}
!93 = !{!"branch_weights", i32 896001, i32 6401}
!94 = distinct !{!94, !92}
!95 = !{!"branch_weights", i32 23130333, i32 2124353315}
!96 = !{!"function_entry_count", i64 830}
!97 = !{!98, !64, i64 8}
!98 = !{!"_ZTS14CAmbisonicBase", !64, i64 8, !99, i64 12, !64, i64 16, !99, i64 20}
!99 = !{!"bool", !65, i64 0}
!100 = !{!98, !99, i64 12}
!101 = !{!98, !64, i64 16}
!102 = !{!98, !99, i64 20}
!103 = !{!"function_entry_count", i64 0}
!104 = !{i8 0, i8 2}
!105 = !{!"function_entry_count", i64 990}
!106 = !{!"function_entry_count", i64 590}
!107 = !{!108, !84, i64 80}
!108 = !{!"_ZTS16CAmbisonicSource", !109, i64 24, !109, i64 48, !110, i64 72, !84, i64 84}
!109 = !{!"_ZTSSt6vectorIfSaIfEE"}
!110 = !{!"_ZTS10PolarPoint", !84, i64 0, !84, i64 4, !84, i64 8}
!111 = !{!108, !84, i64 84}
!112 = !{!"function_entry_count", i64 750}
!113 = !{!114, !77, i64 8}
!114 = !{!"_ZTSSt12_Vector_baseIfSaIfEE", !115, i64 0}
!115 = !{!"_ZTSNSt12_Vector_baseIfSaIfEE12_Vector_implE", !77, i64 0, !77, i64 8, !77, i64 16}
!116 = !{!114, !77, i64 0}
!117 = !{!"branch_weights", i32 1501, i32 1}
!118 = !{!"function_entry_count", i64 1320}
!119 = !{!108, !84, i64 72}
!120 = !{!108, !84, i64 76}
!121 = !{!"branch_weights", i32 1, i32 1321}
!122 = !{!"branch_weights", i32 -2147483648, i32 0}
!123 = !{!"branch_weights", i32 1321, i32 21121}
!124 = distinct !{!124, !125}
!125 = !{!"llvm.loop.unroll.disable"}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !92}
!132 = !{!"branch_weights", i32 21121, i32 1321}
!133 = distinct !{!133, !92}
!134 = !{!"function_entry_count", i64 51360}
!135 = !{!"function_entry_count", i64 410}
!136 = !{!"function_entry_count", i64 170}
!137 = !{!138, !64, i64 24}
!138 = !{!"_ZTS8CBFormat", !64, i64 24, !64, i64 28, !109, i64 32, !139, i64 56}
!139 = !{!"_ZTSSt10unique_ptrIA_PfSt14default_deleteIS1_EE", !140, i64 0}
!140 = !{!"_ZTSSt5tupleIJPPfSt14default_deleteIA_S0_EEE"}
!141 = !{!138, !64, i64 28}
!142 = !{!"branch_weights", i32 271, i32 1}
!143 = !{!"branch_weights", i32 171, i32 1}
!144 = !{!"branch_weights", i32 171, i32 2721}
!145 = distinct !{!145, !125}
!146 = !{!"function_entry_count", i64 160}
!147 = distinct !{!147, !125}
!148 = distinct !{!148, !125}
!149 = distinct !{!149, !125}
!150 = distinct !{!150, !125}
!151 = distinct !{!151, !125}
!152 = distinct !{!152, !125}
!153 = !{!"function_entry_count", i64 180}
!154 = !{!"branch_weights", i32 1451, i32 361}
!155 = !{!"function_entry_count", i64 340}
!156 = !{!"function_entry_count", i64 500}
!157 = distinct !{!157, !125}
!158 = !{!159, !84, i64 124}
!159 = !{!"_ZTS21CAmbisonicEncoderDist", !64, i64 88, !84, i64 92, !64, i64 96, !64, i64 100, !77, i64 104, !64, i64 112, !64, i64 116, !64, i64 120, !84, i64 124, !84, i64 128, !84, i64 132}
!160 = !{!159, !84, i64 128}
!161 = !{!159, !84, i64 132}
!162 = !{!159, !64, i64 88}
!163 = !{!159, !64, i64 100}
!164 = !{!159, !77, i64 104}
!165 = !{!"branch_weights", i32 161, i32 161}
!166 = !{!"function_entry_count", i64 320}
!167 = !{!159, !64, i64 96}
!168 = !{!159, !84, i64 92}
!169 = !{!159, !64, i64 112}
!170 = !{!159, !64, i64 116}
!171 = !{!159, !64, i64 120}
!172 = !{!"function_entry_count", i64 480}
!173 = !{!"branch_weights", i32 371, i32 111}
!174 = distinct !{!174, !125}
!175 = !{!"function_entry_count", i64 10}
!176 = !{!"function_entry_count", i64 1010}
!177 = !{!178, !84, i64 0}
!178 = !{!"_ZTS11Orientation", !84, i64 0, !84, i64 4, !84, i64 8, !84, i64 12, !84, i64 16, !84, i64 20}
!179 = !{!178, !84, i64 4}
!180 = !{!178, !84, i64 8}
!181 = !{!"branch_weights", i32 11, i32 1001}
!182 = !{!178, !84, i64 16}
!183 = !{!178, !84, i64 20}
!184 = !{!178, !84, i64 12}
!185 = !{!"branch_weights", i32 1, i32 1001}
!186 = !{!187, !77, i64 48}
!187 = !{!"_ZTS19CAmbisonicProcessor", !178, i64 24, !77, i64 48, !77, i64 56, !77, i64 64, !77, i64 72, !77, i64 80, !64, i64 88, !64, i64 92, !64, i64 96, !64, i64 100, !64, i64 104, !84, i64 108, !77, i64 112, !77, i64 120, !84, i64 128, !84, i64 132, !84, i64 136, !84, i64 140, !84, i64 144, !84, i64 148, !84, i64 152, !84, i64 156, !84, i64 160, !84, i64 164, !84, i64 168, !84, i64 172, !84, i64 176, !84, i64 180, !84, i64 184, !84, i64 188, !84, i64 192, !84, i64 196}
!188 = !{!187, !77, i64 72}
!189 = !{!187, !77, i64 56}
!190 = !{!187, !77, i64 64}
!191 = !{!187, !77, i64 112}
!192 = !{!187, !77, i64 120}
!193 = !{!187, !77, i64 80}
!194 = !{!"branch_weights", i32 11, i32 1}
!195 = !{!187, !64, i64 92}
!196 = !{!187, !64, i64 96}
!197 = !{!"branch_weights", i32 1, i32 11}
!198 = !{!187, !64, i64 100}
!199 = !{!"branch_weights", i32 111, i32 11}
!200 = !{!187, !64, i64 88}
!201 = !{!187, !64, i64 104}
!202 = !{!187, !84, i64 108}
!203 = !{!"branch_weights", i32 11, i32 161}
!204 = !{!"branch_weights", i32 11, i32 41}
!205 = !{!"branch_weights", i32 2, i32 9}
!206 = !{!"branch_weights", i32 3, i32 6}
!207 = !{!"branch_weights", i32 4, i32 2}
!208 = !{!"branch_weights", i32 2, i32 0}
!209 = distinct !{!209, !125}
!210 = !{!211, !77, i64 8}
!211 = !{!"_ZTSSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE", !212, i64 0}
!212 = !{!"_ZTSNSt12_Vector_baseISt10unique_ptrIA_fSt14default_deleteIS1_EESaIS4_EE12_Vector_implE", !77, i64 0, !77, i64 8, !77, i64 16}
!213 = !{!211, !77, i64 16}
!214 = !{!"branch_weights", i32 31, i32 11}
!215 = !{!216, !77, i64 0}
!216 = !{!"_ZTSSt10_Head_baseILm0EPfLb0EE", !77, i64 0}
!217 = !{!"branch_weights", i32 41, i32 4041}
!218 = !{!"branch_weights", i32 1, i32 4041}
!219 = !{!"branch_weights", i32 4041, i32 41}
!220 = !{!211, !77, i64 0}
!221 = !{!"branch_weights", i32 1, i32 1, i32 1, i32 4041}
!222 = !{!"branch_weights", i32 41, i32 71}
!223 = !{!"branch_weights", i32 31, i32 41}
!224 = !{!"branch_weights", i32 5, i32 36}
!225 = !{!"branch_weights", i32 20, i32 16}
!226 = !{!"branch_weights", i32 16, i32 19}
!227 = distinct !{!227, !125}
!228 = !{!"branch_weights", i32 11, i32 31}
!229 = !{!"branch_weights", i32 161, i32 11}
!230 = !{!"function_entry_count", i64 1000}
!231 = !{!187, !84, i64 36}
!232 = !{!187, !84, i64 128}
!233 = !{!187, !84, i64 132}
!234 = !{!187, !84, i64 40}
!235 = !{!187, !84, i64 136}
!236 = !{!187, !84, i64 140}
!237 = !{!187, !84, i64 44}
!238 = !{!187, !84, i64 144}
!239 = !{!187, !84, i64 148}
!240 = !{!187, !84, i64 152}
!241 = !{!187, !84, i64 156}
!242 = !{!187, !84, i64 160}
!243 = !{!187, !84, i64 164}
!244 = !{!187, !84, i64 168}
!245 = !{!187, !84, i64 172}
!246 = !{!187, !84, i64 176}
!247 = !{!187, !84, i64 180}
!248 = !{!187, !84, i64 184}
!249 = !{!187, !84, i64 188}
!250 = !{!187, !84, i64 192}
!251 = !{!187, !84, i64 196}
!252 = !{i64 0, i64 4, !83, i64 4, i64 4, !83, i64 8, i64 4, !83, i64 12, i64 4, !83, i64 16, i64 4, !83, i64 20, i64 4, !83}
!253 = !{!"branch_weights", i32 1001, i32 16001}
!254 = !{!"branch_weights", i32 16001, i32 16400001}
!255 = !{!"branch_weights", i32 16001, i32 32768001}
!256 = distinct !{!256, !125}
!257 = !{!258}
!258 = distinct !{!258, !259}
!259 = distinct !{!259, !"LVerDomain"}
!260 = !{!261}
!261 = distinct !{!261, !259}
!262 = distinct !{!262, !92}
!263 = !{!264, !84, i64 0}
!264 = !{!"_ZTS12kiss_fft_cpx", !84, i64 0, !84, i64 4}
!265 = !{!264, !84, i64 4}
!266 = !{!"branch_weights", i32 16400001, i32 16001}
!267 = !{!"branch_weights", i32 16001, i32 1600001}
!268 = distinct !{!268, !125}
!269 = !{!270}
!270 = distinct !{!270, !271}
!271 = distinct !{!271, !"LVerDomain"}
!272 = !{!273}
!273 = distinct !{!273, !271}
!274 = distinct !{!274, !92}
!275 = !{!"branch_weights", i32 32768001, i32 16001}
!276 = distinct !{!276, !92}
!277 = !{!"branch_weights", i32 16001, i32 1001}
!278 = !{!"branch_weights", i32 1600001, i32 16001}
!279 = distinct !{!279, !92}
!280 = !{!"function_entry_count", i64 820}
!281 = distinct !{!281, !125}
!282 = distinct !{!282, !125}
!283 = !{!"function_entry_count", i64 30}
!284 = !{!285, !77, i64 32}
!285 = !{!"_ZTS17CAmbisonicDecoder", !64, i64 24, !64, i64 28, !77, i64 32}
!286 = !{!285, !64, i64 24}
!287 = !{!"branch_weights", i32 31, i32 1}
!288 = !{!"branch_weights", i32 1, i32 1, i32 11, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 21, i32 1, i32 1}
!289 = !{!285, !64, i64 28}
!290 = !{!"branch_weights", i32 31, i32 411}
!291 = !{!"branch_weights", i32 411, i32 31}
!292 = !{!"function_entry_count", i64 60}
!293 = !{!"branch_weights", i32 61, i32 821}
!294 = !{!"branch_weights", i32 821, i32 61}
!295 = !{!"function_entry_count", i64 6560}
!296 = !{!297, !84, i64 92}
!297 = !{!"_ZTS16CAmbisonicZoomer", !285, i64 24, !298, i64 64, !298, i64 72, !298, i64 80, !84, i64 88, !84, i64 92, !84, i64 96, !84, i64 100}
!298 = !{!"_ZTSSt10unique_ptrIA_fSt14default_deleteIS0_EE", !299, i64 0}
!299 = !{!"_ZTSSt5tupleIJPfSt14default_deleteIA_fEEE"}
!300 = !{!"branch_weights", i32 161, i32 561}
!301 = !{!"branch_weights", i32 2448, i32 8352}
!302 = !{!"branch_weights", i32 928800, i32 755424}
!303 = !{!"branch_weights", i32 25, i32 306}
!304 = distinct !{!304, !125}
!305 = distinct !{!305, !125}
!306 = !{!"branch_weights", i32 17, i32 144}
!307 = !{!"branch_weights", i32 58, i32 86}
!308 = !{!"branch_weights", i32 61, i32 25}
!309 = distinct !{!309, !125}
!310 = distinct !{!310, !125}
!311 = !{!"branch_weights", i32 41, i32 11}
!312 = !{!297, !84, i64 96}
!313 = distinct !{!313, !125}
!314 = !{!297, !84, i64 88}
!315 = !{!297, !84, i64 100}
!316 = !{!"branch_weights", i32 1001, i32 1024001}
!317 = !{!"branch_weights", i32 1024001, i32 16384001}
!318 = !{!"branch_weights", i32 6144001, i32 10240001}
!319 = distinct !{!319, !125}
!320 = distinct !{!320, !125}
!321 = !{!322, !77, i64 0}
!322 = !{!"_ZTSSt10_Head_baseILm1EPFvPvELb0EE", !77, i64 0}
!323 = !{!324, !77, i64 0}
!324 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !77, i64 0}
!325 = !{!326, !77, i64 0}
!326 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !324, i64 0, !327, i64 8, !65, i64 16}
!327 = !{!"long", !65, i64 0}
!328 = !{!326, !327, i64 8}
!329 = !{!"branch_weights", i32 51, i32 161}
!330 = !{!"branch_weights", i32 1, i32 21}
!331 = !{!332, !64, i64 68}
!332 = !{!"_ZTS22CAmbisonicBinauralizer", !285, i64 24, !64, i64 64, !64, i64 68, !64, i64 72, !64, i64 76, !84, i64 80, !64, i64 84, !333, i64 88, !333, i64 104, !65, i64 120, !335, i64 168, !109, i64 176, !109, i64 200, !109, i64 224, !65, i64 248}
!333 = !{!"_ZTSSt10unique_ptrI15kiss_fftr_statePFvPvEE", !334, i64 0}
!334 = !{!"_ZTSSt5tupleIJP15kiss_fftr_statePFvPvEEE"}
!335 = !{!"_ZTSSt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS1_EE", !336, i64 0}
!336 = !{!"_ZTSSt5tupleIJP12kiss_fft_cpxSt14default_deleteIA_S0_EEE"}
!337 = !{!332, !64, i64 64}
!338 = !{!332, !64, i64 84}
!339 = !{!"branch_weights", i32 221, i32 21}
!340 = !{!332, !64, i64 72}
!341 = !{!332, !64, i64 76}
!342 = !{!332, !84, i64 80}
!343 = !{!"branch_weights", i32 41, i32 641}
!344 = !{!"branch_weights", i32 2938677, i32 2144544971}
!345 = !{!"branch_weights", i32 321, i32 6401}
!346 = !{!"branch_weights", i32 6401, i32 1}
!347 = !{!348}
!348 = distinct !{!348, !349}
!349 = distinct !{!349, !"LVerDomain"}
!350 = !{!351}
!351 = distinct !{!351, !349}
!352 = distinct !{!352, !92}
!353 = !{!354}
!354 = distinct !{!354, !355}
!355 = distinct !{!355, !"LVerDomain"}
!356 = !{!357}
!357 = distinct !{!357, !355}
!358 = !{!359, !354, !360}
!359 = distinct !{!359, !355}
!360 = distinct !{!360, !355}
!361 = !{!360}
!362 = !{!359}
!363 = !{!354, !360}
!364 = distinct !{!364, !92}
!365 = distinct !{!365, !92}
!366 = distinct !{!366, !92}
!367 = !{!"branch_weights", i32 321, i32 21}
!368 = !{!"branch_weights", i32 21, i32 321}
!369 = !{!"branch_weights", i32 321, i32 44801}
!370 = !{!371}
!371 = distinct !{!371, !372}
!372 = distinct !{!372, !"LVerDomain"}
!373 = !{!374}
!374 = distinct !{!374, !372}
!375 = !{!376}
!376 = distinct !{!376, !372}
!377 = !{!371, !374}
!378 = distinct !{!378, !92}
!379 = distinct !{!379, !92}
!380 = !{!"branch_weights", i32 1652481, i32 2145831167}
!381 = !{!"branch_weights", i32 181, i32 2621}
!382 = !{!"branch_weights", i32 21, i32 2801}
!383 = distinct !{!383, !125}
!384 = !{!"branch_weights", i32 198697898, i32 -1536615339}
!385 = distinct !{!385, !92}
!386 = !{!"branch_weights", i32 641, i32 89601}
!387 = distinct !{!387, !388, !92}
!388 = !{!"llvm.loop.unroll.runtime.disable"}
!389 = !{!"branch_weights", i32 129968733, i32 2017514915}
!390 = !{!391, !77, i64 0}
!391 = !{!"_ZTSSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE", !392, i64 0}
!392 = !{!"_ZTSNSt12_Vector_baseISt10unique_ptrIA_12kiss_fft_cpxSt14default_deleteIS2_EESaIS5_EE12_Vector_implE", !77, i64 0, !77, i64 8, !77, i64 16}
!393 = !{!"branch_weights", i32 641, i32 41}
!394 = distinct !{!394, !92}
!395 = distinct !{!395, !388, !92}
!396 = distinct !{!396, !125}
!397 = distinct !{!397, !125}
!398 = distinct !{!398, !125}
!399 = distinct !{!399, !125}
!400 = distinct !{!400, !125}
!401 = distinct !{!401, !125}
!402 = !{!"branch_weights", i32 41, i32 1}
!403 = !{!"branch_weights", i32 661, i32 1}
!404 = !{!"function_entry_count", i64 40}
!405 = !{!391, !77, i64 8}
!406 = !{!407, !84, i64 4132}
!407 = !{!"_ZTSN12ILLIXR_AUDIO5SoundE", !77, i64 0, !65, i64 8, !77, i64 4104, !77, i64 4112, !110, i64 4120, !84, i64 4132}
!408 = !{!407, !77, i64 0}
!409 = !{!407, !77, i64 4104}
!410 = !{!407, !77, i64 4112}
!411 = !{!407, !84, i64 4120}
!412 = !{!407, !84, i64 4124}
!413 = !{!407, !84, i64 4128}
!414 = !{!110, !84, i64 0}
!415 = !{!110, !84, i64 4}
!416 = !{!110, !84, i64 8}
!417 = !{!418, !419, i64 0}
!418 = !{!"_ZTSN12ILLIXR_AUDIO7ABAudioE", !419, i64 0, !77, i64 8, !77, i64 16, !77, i64 24, !77, i64 32, !77, i64 40, !77, i64 48}
!419 = !{!"_ZTSN12ILLIXR_AUDIO7ABAudio11ProcessTypeE", !65, i64 0}
!420 = !{!418, !77, i64 16}
!421 = !{!418, !77, i64 8}
!422 = !{!418, !77, i64 24}
!423 = !{!418, !77, i64 32}
!424 = !{!418, !77, i64 40}
!425 = !{!418, !77, i64 48}
!426 = !{!427, !64, i64 16}
!427 = !{!"_ZTSN12ILLIXR_AUDIO11WAVHeader_tE", !64, i64 0, !64, i64 4, !64, i64 8, !64, i64 12, !64, i64 16, !79, i64 20, !79, i64 22, !64, i64 24, !64, i64 28, !79, i64 32, !79, i64 34, !64, i64 36, !64, i64 40}
!428 = !{!427, !79, i64 20}
!429 = !{!427, !79, i64 22}
!430 = !{!427, !64, i64 24}
!431 = !{!427, !64, i64 28}
!432 = !{!427, !79, i64 32}
!433 = !{!427, !79, i64 34}
!434 = !{!427, !64, i64 36}
!435 = !{!427, !64, i64 40}
!436 = !{!437, !77, i64 8}
!437 = !{!"_ZTSSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE", !438, i64 0}
!438 = !{!"_ZTSNSt12_Vector_baseIPN12ILLIXR_AUDIO5SoundESaIS2_EE12_Vector_implE", !77, i64 0, !77, i64 8, !77, i64 16}
!439 = !{!437, !77, i64 0}
!440 = !{!437, !77, i64 16}
!441 = !{!"branch_weights", i32 51, i32 111}
!442 = !{!"branch_weights", i32 103, i32 2601}
!443 = !{!"branch_weights", i32 1, i32 51}
!444 = distinct !{!444, !125}
!445 = !{!446, !77, i64 0}
!446 = !{!"_ZTS7RootArg", !77, i64 0, !327, i64 8, !77, i64 16, !327, i64 24, !77, i64 32, !327, i64 40, !77, i64 48, !327, i64 56, !77, i64 64, !327, i64 72, !64, i64 80, !77, i64 84, !327, i64 92, !77, i64 100, !327, i64 108, !77, i64 116, !327, i64 124, !77, i64 132, !327, i64 140, !77, i64 148, !327, i64 156}
!447 = !{!446, !327, i64 8}
!448 = !{!446, !77, i64 16}
!449 = !{!446, !327, i64 24}
!450 = !{!446, !77, i64 32}
!451 = !{!446, !327, i64 40}
!452 = !{!446, !77, i64 48}
!453 = !{!446, !327, i64 56}
!454 = !{!446, !77, i64 64}
!455 = !{!446, !327, i64 72}
!456 = !{!446, !64, i64 80}
!457 = !{!446, !77, i64 84}
!458 = !{!446, !327, i64 92}
!459 = !{!446, !77, i64 100}
!460 = !{!446, !327, i64 108}
!461 = !{!446, !77, i64 116}
!462 = !{!446, !327, i64 124}
!463 = !{!446, !77, i64 132}
!464 = !{!446, !327, i64 140}
!465 = !{!446, !77, i64 148}
!466 = !{!446, !327, i64 156}
!467 = !{!"branch_weights", i32 1001, i32 11}
!468 = !{!"branch_weights", i32 43, i32 1}
!469 = !{!327, !327, i64 0}
!470 = !{!65, !65, i64 0}
!471 = !{!"branch_weights", i32 36081, i32 212, i32 8651}
!472 = !{!"function_entry_count", i64 1500}
!473 = !{!"branch_weights", i32 1, i32 1501}
!474 = !{!114, !77, i64 16}
!475 = !{!"branch_weights", i32 2951, i32 321}
!476 = distinct !{!476, !125}
!477 = !{!"branch_weights", i32 1771, i32 2925521}
!478 = distinct !{!478, !92}
!479 = distinct !{!479, !125}
!480 = distinct !{!480, !388, !92}
!481 = distinct !{!481, !125}
!482 = !{!"branch_weights", i32 1, i32 1771}
!483 = !{!"branch_weights", i32 3543, i32 3136441}
!484 = distinct !{!484, !92}
!485 = distinct !{!485, !125}
!486 = distinct !{!486, !388, !92}
!487 = !{!"function_entry_count", i64 270}
!488 = !{!"branch_weights", i32 1, i32 271}
!489 = !{!"branch_weights", i32 1, i32 31}
!490 = !{!"branch_weights", i32 31, i32 31}
!491 = !{!"branch_weights", i32 4, i32 27}
!492 = !{!"branch_weights", i32 27, i32 4}
!493 = distinct !{!493, !125}
!494 = distinct !{!494, !125}
!495 = !{!"branch_weights", i32 63, i32 961}
!496 = !{!"branch_weights", i32 1, i32 41}
!497 = !{!391, !77, i64 16}
!498 = !{!499, !77, i64 0}
!499 = !{!"_ZTSSt10_Head_baseILm0EP12kiss_fft_cpxLb0EE", !77, i64 0}
!500 = !{!"branch_weights", i32 83, i32 1681}
!501 = !{!"branch_weights", i32 1025025001, i32 2027003}
!502 = distinct !{!502, !125}
!503 = distinct !{!503, !125}
!504 = !{!505}
!505 = distinct !{!505, !506}
!506 = distinct !{!506, !"LVerDomain"}
!507 = !{!508}
!508 = distinct !{!508, !506}
!509 = distinct !{!509, !92}
!510 = distinct !{!510, !92}
!511 = distinct !{!511, !125}
!512 = !{!513}
!513 = distinct !{!513, !514}
!514 = distinct !{!514, !"LVerDomain"}
!515 = !{!516}
!516 = distinct !{!516, !514}
!517 = distinct !{!517, !92}
!518 = distinct !{!518, !92}
!519 = !{!"branch_weights", i32 1001, i32 2048001}
!520 = distinct !{!520, !125}
!521 = !{!522}
!522 = distinct !{!522, !523}
!523 = distinct !{!523, !"LVerDomain"}
!524 = !{!525}
!525 = distinct !{!525, !523}
!526 = distinct !{!526, !92}
!527 = !{!"branch_weights", i32 1001, i32 139001}
!528 = distinct !{!528, !125}
!529 = !{!530}
!530 = distinct !{!530, !531}
!531 = distinct !{!531, !"LVerDomain"}
!532 = !{!533}
!533 = distinct !{!533, !531}
!534 = distinct !{!534, !92}
!535 = !{!"branch_weights", i32 2048001, i32 1001}
!536 = distinct !{!536, !92}
!537 = !{!"branch_weights", i32 139001, i32 1001}
!538 = distinct !{!538, !92}
!539 = distinct !{!539, !125}
!540 = !{!541}
!541 = distinct !{!541, !542}
!542 = distinct !{!542, !"LVerDomain"}
!543 = !{!544}
!544 = distinct !{!544, !542}
!545 = distinct !{!545, !92}
!546 = distinct !{!546, !125}
!547 = !{!548}
!548 = distinct !{!548, !549}
!549 = distinct !{!549, !"LVerDomain"}
!550 = !{!551}
!551 = distinct !{!551, !549}
!552 = distinct !{!552, !92}
!553 = distinct !{!553, !92}
!554 = distinct !{!554, !92}
